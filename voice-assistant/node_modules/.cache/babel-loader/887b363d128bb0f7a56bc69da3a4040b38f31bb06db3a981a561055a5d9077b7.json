{"ast":null,"code":"const CLASS_PART_SEPARATOR = '-';\nconst createClassGroupUtils = config => {\n  const classMap = createClassMap(config);\n  const {\n    conflictingClassGroups,\n    conflictingClassGroupModifiers\n  } = config;\n  const getClassGroupId = className => {\n    const classParts = className.split(CLASS_PART_SEPARATOR);\n    // Classes like `-inset-1` produce an empty string as first classPart. We assume that classes for negative values are used correctly and remove it from classParts.\n    if (classParts[0] === '' && classParts.length !== 1) {\n      classParts.shift();\n    }\n    return getGroupRecursive(classParts, classMap) || getGroupIdForArbitraryProperty(className);\n  };\n  const getConflictingClassGroupIds = (classGroupId, hasPostfixModifier) => {\n    const conflicts = conflictingClassGroups[classGroupId] || [];\n    if (hasPostfixModifier && conflictingClassGroupModifiers[classGroupId]) {\n      return [...conflicts, ...conflictingClassGroupModifiers[classGroupId]];\n    }\n    return conflicts;\n  };\n  return {\n    getClassGroupId,\n    getConflictingClassGroupIds\n  };\n};\nconst getGroupRecursive = (classParts, classPartObject) => {\n  if (classParts.length === 0) {\n    return classPartObject.classGroupId;\n  }\n  const currentClassPart = classParts[0];\n  const nextClassPartObject = classPartObject.nextPart.get(currentClassPart);\n  const classGroupFromNextClassPart = nextClassPartObject ? getGroupRecursive(classParts.slice(1), nextClassPartObject) : undefined;\n  if (classGroupFromNextClassPart) {\n    return classGroupFromNextClassPart;\n  }\n  if (classPartObject.validators.length === 0) {\n    return undefined;\n  }\n  const classRest = classParts.join(CLASS_PART_SEPARATOR);\n  return classPartObject.validators.find(({\n    validator\n  }) => validator(classRest))?.classGroupId;\n};\nconst arbitraryPropertyRegex = /^\\[(.+)\\]$/;\nconst getGroupIdForArbitraryProperty = className => {\n  if (arbitraryPropertyRegex.test(className)) {\n    const arbitraryPropertyClassName = arbitraryPropertyRegex.exec(className)[1];\n    const property = arbitraryPropertyClassName?.substring(0, arbitraryPropertyClassName.indexOf(':'));\n    if (property) {\n      // I use two dots here because one dot is used as prefix for class groups in plugins\n      return 'arbitrary..' + property;\n    }\n  }\n};\n/**\r\n * Exported for testing only\r\n */\nconst createClassMap = config => {\n  const {\n    theme,\n    classGroups\n  } = config;\n  const classMap = {\n    nextPart: new Map(),\n    validators: []\n  };\n  for (const classGroupId in classGroups) {\n    processClassesRecursively(classGroups[classGroupId], classMap, classGroupId, theme);\n  }\n  return classMap;\n};\nconst processClassesRecursively = (classGroup, classPartObject, classGroupId, theme) => {\n  classGroup.forEach(classDefinition => {\n    if (typeof classDefinition === 'string') {\n      const classPartObjectToEdit = classDefinition === '' ? classPartObject : getPart(classPartObject, classDefinition);\n      classPartObjectToEdit.classGroupId = classGroupId;\n      return;\n    }\n    if (typeof classDefinition === 'function') {\n      if (isThemeGetter(classDefinition)) {\n        processClassesRecursively(classDefinition(theme), classPartObject, classGroupId, theme);\n        return;\n      }\n      classPartObject.validators.push({\n        validator: classDefinition,\n        classGroupId\n      });\n      return;\n    }\n    Object.entries(classDefinition).forEach(([key, classGroup]) => {\n      processClassesRecursively(classGroup, getPart(classPartObject, key), classGroupId, theme);\n    });\n  });\n};\nconst getPart = (classPartObject, path) => {\n  let currentClassPartObject = classPartObject;\n  path.split(CLASS_PART_SEPARATOR).forEach(pathPart => {\n    if (!currentClassPartObject.nextPart.has(pathPart)) {\n      currentClassPartObject.nextPart.set(pathPart, {\n        nextPart: new Map(),\n        validators: []\n      });\n    }\n    currentClassPartObject = currentClassPartObject.nextPart.get(pathPart);\n  });\n  return currentClassPartObject;\n};\nconst isThemeGetter = func => func.isThemeGetter;\n\n// LRU cache inspired from hashlru (https://github.com/dominictarr/hashlru/blob/v1.0.4/index.js) but object replaced with Map to improve performance\nconst createLruCache = maxCacheSize => {\n  if (maxCacheSize < 1) {\n    return {\n      get: () => undefined,\n      set: () => {}\n    };\n  }\n  let cacheSize = 0;\n  let cache = new Map();\n  let previousCache = new Map();\n  const update = (key, value) => {\n    cache.set(key, value);\n    cacheSize++;\n    if (cacheSize > maxCacheSize) {\n      cacheSize = 0;\n      previousCache = cache;\n      cache = new Map();\n    }\n  };\n  return {\n    get(key) {\n      let value = cache.get(key);\n      if (value !== undefined) {\n        return value;\n      }\n      if ((value = previousCache.get(key)) !== undefined) {\n        update(key, value);\n        return value;\n      }\n    },\n    set(key, value) {\n      if (cache.has(key)) {\n        cache.set(key, value);\n      } else {\n        update(key, value);\n      }\n    }\n  };\n};\nconst IMPORTANT_MODIFIER = '!';\nconst MODIFIER_SEPARATOR = ':';\nconst MODIFIER_SEPARATOR_LENGTH = MODIFIER_SEPARATOR.length;\nconst createParseClassName = config => {\n  const {\n    prefix,\n    experimentalParseClassName\n  } = config;\n  /**\r\n   * Parse class name into parts.\r\n   *\r\n   * Inspired by `splitAtTopLevelOnly` used in Tailwind CSS\r\n   * @see https://github.com/tailwindlabs/tailwindcss/blob/v3.2.2/src/util/splitAtTopLevelOnly.js\r\n   */\n  let parseClassName = className => {\n    const modifiers = [];\n    let bracketDepth = 0;\n    let parenDepth = 0;\n    let modifierStart = 0;\n    let postfixModifierPosition;\n    for (let index = 0; index < className.length; index++) {\n      let currentCharacter = className[index];\n      if (bracketDepth === 0 && parenDepth === 0) {\n        if (currentCharacter === MODIFIER_SEPARATOR) {\n          modifiers.push(className.slice(modifierStart, index));\n          modifierStart = index + MODIFIER_SEPARATOR_LENGTH;\n          continue;\n        }\n        if (currentCharacter === '/') {\n          postfixModifierPosition = index;\n          continue;\n        }\n      }\n      if (currentCharacter === '[') {\n        bracketDepth++;\n      } else if (currentCharacter === ']') {\n        bracketDepth--;\n      } else if (currentCharacter === '(') {\n        parenDepth++;\n      } else if (currentCharacter === ')') {\n        parenDepth--;\n      }\n    }\n    const baseClassNameWithImportantModifier = modifiers.length === 0 ? className : className.substring(modifierStart);\n    const baseClassName = stripImportantModifier(baseClassNameWithImportantModifier);\n    const hasImportantModifier = baseClassName !== baseClassNameWithImportantModifier;\n    const maybePostfixModifierPosition = postfixModifierPosition && postfixModifierPosition > modifierStart ? postfixModifierPosition - modifierStart : undefined;\n    return {\n      modifiers,\n      hasImportantModifier,\n      baseClassName,\n      maybePostfixModifierPosition\n    };\n  };\n  if (prefix) {\n    const fullPrefix = prefix + MODIFIER_SEPARATOR;\n    const parseClassNameOriginal = parseClassName;\n    parseClassName = className => className.startsWith(fullPrefix) ? parseClassNameOriginal(className.substring(fullPrefix.length)) : {\n      isExternal: true,\n      modifiers: [],\n      hasImportantModifier: false,\n      baseClassName: className,\n      maybePostfixModifierPosition: undefined\n    };\n  }\n  if (experimentalParseClassName) {\n    const parseClassNameOriginal = parseClassName;\n    parseClassName = className => experimentalParseClassName({\n      className,\n      parseClassName: parseClassNameOriginal\n    });\n  }\n  return parseClassName;\n};\nconst stripImportantModifier = baseClassName => {\n  if (baseClassName.endsWith(IMPORTANT_MODIFIER)) {\n    return baseClassName.substring(0, baseClassName.length - 1);\n  }\n  /**\r\n   * In Tailwind CSS v3 the important modifier was at the start of the base class name. This is still supported for legacy reasons.\r\n   * @see https://github.com/dcastil/tailwind-merge/issues/513#issuecomment-2614029864\r\n   */\n  if (baseClassName.startsWith(IMPORTANT_MODIFIER)) {\n    return baseClassName.substring(1);\n  }\n  return baseClassName;\n};\n\n/**\r\n * Sorts modifiers according to following schema:\r\n * - Predefined modifiers are sorted alphabetically\r\n * - When an arbitrary variant appears, it must be preserved which modifiers are before and after it\r\n */\nconst createSortModifiers = config => {\n  const orderSensitiveModifiers = Object.fromEntries(config.orderSensitiveModifiers.map(modifier => [modifier, true]));\n  const sortModifiers = modifiers => {\n    if (modifiers.length <= 1) {\n      return modifiers;\n    }\n    const sortedModifiers = [];\n    let unsortedModifiers = [];\n    modifiers.forEach(modifier => {\n      const isPositionSensitive = modifier[0] === '[' || orderSensitiveModifiers[modifier];\n      if (isPositionSensitive) {\n        sortedModifiers.push(...unsortedModifiers.sort(), modifier);\n        unsortedModifiers = [];\n      } else {\n        unsortedModifiers.push(modifier);\n      }\n    });\n    sortedModifiers.push(...unsortedModifiers.sort());\n    return sortedModifiers;\n  };\n  return sortModifiers;\n};\nconst createConfigUtils = config => ({\n  cache: createLruCache(config.cacheSize),\n  parseClassName: createParseClassName(config),\n  sortModifiers: createSortModifiers(config),\n  ...createClassGroupUtils(config)\n});\nconst SPLIT_CLASSES_REGEX = /\\s+/;\nconst mergeClassList = (classList, configUtils) => {\n  const {\n    parseClassName,\n    getClassGroupId,\n    getConflictingClassGroupIds,\n    sortModifiers\n  } = configUtils;\n  /**\r\n   * Set of classGroupIds in following format:\r\n   * `{importantModifier}{variantModifiers}{classGroupId}`\r\n   * @example 'float'\r\n   * @example 'hover:focus:bg-color'\r\n   * @example 'md:!pr'\r\n   */\n  const classGroupsInConflict = [];\n  const classNames = classList.trim().split(SPLIT_CLASSES_REGEX);\n  let result = '';\n  for (let index = classNames.length - 1; index >= 0; index -= 1) {\n    const originalClassName = classNames[index];\n    const {\n      isExternal,\n      modifiers,\n      hasImportantModifier,\n      baseClassName,\n      maybePostfixModifierPosition\n    } = parseClassName(originalClassName);\n    if (isExternal) {\n      result = originalClassName + (result.length > 0 ? ' ' + result : result);\n      continue;\n    }\n    let hasPostfixModifier = !!maybePostfixModifierPosition;\n    let classGroupId = getClassGroupId(hasPostfixModifier ? baseClassName.substring(0, maybePostfixModifierPosition) : baseClassName);\n    if (!classGroupId) {\n      if (!hasPostfixModifier) {\n        // Not a Tailwind class\n        result = originalClassName + (result.length > 0 ? ' ' + result : result);\n        continue;\n      }\n      classGroupId = getClassGroupId(baseClassName);\n      if (!classGroupId) {\n        // Not a Tailwind class\n        result = originalClassName + (result.length > 0 ? ' ' + result : result);\n        continue;\n      }\n      hasPostfixModifier = false;\n    }\n    const variantModifier = sortModifiers(modifiers).join(':');\n    const modifierId = hasImportantModifier ? variantModifier + IMPORTANT_MODIFIER : variantModifier;\n    const classId = modifierId + classGroupId;\n    if (classGroupsInConflict.includes(classId)) {\n      // Tailwind class omitted due to conflict\n      continue;\n    }\n    classGroupsInConflict.push(classId);\n    const conflictGroups = getConflictingClassGroupIds(classGroupId, hasPostfixModifier);\n    for (let i = 0; i < conflictGroups.length; ++i) {\n      const group = conflictGroups[i];\n      classGroupsInConflict.push(modifierId + group);\n    }\n    // Tailwind class not in conflict\n    result = originalClassName + (result.length > 0 ? ' ' + result : result);\n  }\n  return result;\n};\n\n/**\r\n * The code in this file is copied from https://github.com/lukeed/clsx and modified to suit the needs of tailwind-merge better.\r\n *\r\n * Specifically:\r\n * - Runtime code from https://github.com/lukeed/clsx/blob/v1.2.1/src/index.js\r\n * - TypeScript types from https://github.com/lukeed/clsx/blob/v1.2.1/clsx.d.ts\r\n *\r\n * Original code has MIT license: Copyright (c) Luke Edwards <luke.edwards05@gmail.com> (lukeed.com)\r\n */\nfunction twJoin() {\n  let index = 0;\n  let argument;\n  let resolvedValue;\n  let string = '';\n  while (index < arguments.length) {\n    if (argument = arguments[index++]) {\n      if (resolvedValue = toValue(argument)) {\n        string && (string += ' ');\n        string += resolvedValue;\n      }\n    }\n  }\n  return string;\n}\nconst toValue = mix => {\n  if (typeof mix === 'string') {\n    return mix;\n  }\n  let resolvedValue;\n  let string = '';\n  for (let k = 0; k < mix.length; k++) {\n    if (mix[k]) {\n      if (resolvedValue = toValue(mix[k])) {\n        string && (string += ' ');\n        string += resolvedValue;\n      }\n    }\n  }\n  return string;\n};\nfunction createTailwindMerge(createConfigFirst, ...createConfigRest) {\n  let configUtils;\n  let cacheGet;\n  let cacheSet;\n  let functionToCall = initTailwindMerge;\n  function initTailwindMerge(classList) {\n    const config = createConfigRest.reduce((previousConfig, createConfigCurrent) => createConfigCurrent(previousConfig), createConfigFirst());\n    configUtils = createConfigUtils(config);\n    cacheGet = configUtils.cache.get;\n    cacheSet = configUtils.cache.set;\n    functionToCall = tailwindMerge;\n    return tailwindMerge(classList);\n  }\n  function tailwindMerge(classList) {\n    const cachedResult = cacheGet(classList);\n    if (cachedResult) {\n      return cachedResult;\n    }\n    const result = mergeClassList(classList, configUtils);\n    cacheSet(classList, result);\n    return result;\n  }\n  return function callTailwindMerge() {\n    return functionToCall(twJoin.apply(null, arguments));\n  };\n}\nconst fromTheme = key => {\n  const themeGetter = theme => theme[key] || [];\n  themeGetter.isThemeGetter = true;\n  return themeGetter;\n};\nconst arbitraryValueRegex = /^\\[(?:(\\w[\\w-]*):)?(.+)\\]$/i;\nconst arbitraryVariableRegex = /^\\((?:(\\w[\\w-]*):)?(.+)\\)$/i;\nconst fractionRegex = /^\\d+\\/\\d+$/;\nconst tshirtUnitRegex = /^(\\d+(\\.\\d+)?)?(xs|sm|md|lg|xl)$/;\nconst lengthUnitRegex = /\\d+(%|px|r?em|[sdl]?v([hwib]|min|max)|pt|pc|in|cm|mm|cap|ch|ex|r?lh|cq(w|h|i|b|min|max))|\\b(calc|min|max|clamp)\\(.+\\)|^0$/;\nconst colorFunctionRegex = /^(rgba?|hsla?|hwb|(ok)?(lab|lch))\\(.+\\)$/;\n// Shadow always begins with x and y offset separated by underscore optionally prepended by inset\nconst shadowRegex = /^(inset_)?-?((\\d+)?\\.?(\\d+)[a-z]+|0)_-?((\\d+)?\\.?(\\d+)[a-z]+|0)/;\nconst imageRegex = /^(url|image|image-set|cross-fade|element|(repeating-)?(linear|radial|conic)-gradient)\\(.+\\)$/;\nconst isFraction = value => fractionRegex.test(value);\nconst isNumber = value => Boolean(value) && !Number.isNaN(Number(value));\nconst isInteger = value => Boolean(value) && Number.isInteger(Number(value));\nconst isPercent = value => value.endsWith('%') && isNumber(value.slice(0, -1));\nconst isTshirtSize = value => tshirtUnitRegex.test(value);\nconst isAny = () => true;\nconst isLengthOnly = value =>\n// `colorFunctionRegex` check is necessary because color functions can have percentages in them which which would be incorrectly classified as lengths.\n// For example, `hsl(0 0% 0%)` would be classified as a length without this check.\n// I could also use lookbehind assertion in `lengthUnitRegex` but that isn't supported widely enough.\nlengthUnitRegex.test(value) && !colorFunctionRegex.test(value);\nconst isNever = () => false;\nconst isShadow = value => shadowRegex.test(value);\nconst isImage = value => imageRegex.test(value);\nconst isAnyNonArbitrary = value => !isArbitraryValue(value) && !isArbitraryVariable(value);\nconst isArbitrarySize = value => getIsArbitraryValue(value, isLabelSize, isNever);\nconst isArbitraryValue = value => arbitraryValueRegex.test(value);\nconst isArbitraryLength = value => getIsArbitraryValue(value, isLabelLength, isLengthOnly);\nconst isArbitraryNumber = value => getIsArbitraryValue(value, isLabelNumber, isNumber);\nconst isArbitraryPosition = value => getIsArbitraryValue(value, isLabelPosition, isNever);\nconst isArbitraryImage = value => getIsArbitraryValue(value, isLabelImage, isImage);\nconst isArbitraryShadow = value => getIsArbitraryValue(value, isNever, isShadow);\nconst isArbitraryVariable = value => arbitraryVariableRegex.test(value);\nconst isArbitraryVariableLength = value => getIsArbitraryVariable(value, isLabelLength);\nconst isArbitraryVariableFamilyName = value => getIsArbitraryVariable(value, isLabelFamilyName);\nconst isArbitraryVariablePosition = value => getIsArbitraryVariable(value, isLabelPosition);\nconst isArbitraryVariableSize = value => getIsArbitraryVariable(value, isLabelSize);\nconst isArbitraryVariableImage = value => getIsArbitraryVariable(value, isLabelImage);\nconst isArbitraryVariableShadow = value => getIsArbitraryVariable(value, isLabelShadow, true);\n// Helpers\nconst getIsArbitraryValue = (value, testLabel, testValue) => {\n  const result = arbitraryValueRegex.exec(value);\n  if (result) {\n    if (result[1]) {\n      return testLabel(result[1]);\n    }\n    return testValue(result[2]);\n  }\n  return false;\n};\nconst getIsArbitraryVariable = (value, testLabel, shouldMatchNoLabel = false) => {\n  const result = arbitraryVariableRegex.exec(value);\n  if (result) {\n    if (result[1]) {\n      return testLabel(result[1]);\n    }\n    return shouldMatchNoLabel;\n  }\n  return false;\n};\n// Labels\nconst isLabelPosition = label => label === 'position';\nconst imageLabels = /*#__PURE__*/new Set(['image', 'url']);\nconst isLabelImage = label => imageLabels.has(label);\nconst sizeLabels = /*#__PURE__*/new Set(['length', 'size', 'percentage']);\nconst isLabelSize = label => sizeLabels.has(label);\nconst isLabelLength = label => label === 'length';\nconst isLabelNumber = label => label === 'number';\nconst isLabelFamilyName = label => label === 'family-name';\nconst isLabelShadow = label => label === 'shadow';\nconst validators = /*#__PURE__*/Object.defineProperty({\n  __proto__: null,\n  isAny,\n  isAnyNonArbitrary,\n  isArbitraryImage,\n  isArbitraryLength,\n  isArbitraryNumber,\n  isArbitraryPosition,\n  isArbitraryShadow,\n  isArbitrarySize,\n  isArbitraryValue,\n  isArbitraryVariable,\n  isArbitraryVariableFamilyName,\n  isArbitraryVariableImage,\n  isArbitraryVariableLength,\n  isArbitraryVariablePosition,\n  isArbitraryVariableShadow,\n  isArbitraryVariableSize,\n  isFraction,\n  isInteger,\n  isNumber,\n  isPercent,\n  isTshirtSize\n}, Symbol.toStringTag, {\n  value: 'Module'\n});\nconst getDefaultConfig = () => {\n  /**\r\n   * Theme getters for theme variable namespaces\r\n   * @see https://tailwindcss.com/docs/theme#theme-variable-namespaces\r\n   */\n  /***/\n  const themeColor = fromTheme('color');\n  const themeFont = fromTheme('font');\n  const themeText = fromTheme('text');\n  const themeFontWeight = fromTheme('font-weight');\n  const themeTracking = fromTheme('tracking');\n  const themeLeading = fromTheme('leading');\n  const themeBreakpoint = fromTheme('breakpoint');\n  const themeContainer = fromTheme('container');\n  const themeSpacing = fromTheme('spacing');\n  const themeRadius = fromTheme('radius');\n  const themeShadow = fromTheme('shadow');\n  const themeInsetShadow = fromTheme('inset-shadow');\n  const themeDropShadow = fromTheme('drop-shadow');\n  const themeBlur = fromTheme('blur');\n  const themePerspective = fromTheme('perspective');\n  const themeAspect = fromTheme('aspect');\n  const themeEase = fromTheme('ease');\n  const themeAnimate = fromTheme('animate');\n  /**\r\n   * Helpers to avoid repeating the same scales\r\n   *\r\n   * We use functions that create a new array every time they're called instead of static arrays.\r\n   * This ensures that users who modify any scale by mutating the array (e.g. with `array.push(element)`) don't accidentally mutate arrays in other parts of the config.\r\n   */\n  /***/\n  const scaleBreak = () => ['auto', 'avoid', 'all', 'avoid-page', 'page', 'left', 'right', 'column'];\n  const scalePosition = () => ['bottom', 'center', 'left', 'left-bottom', 'left-top', 'right', 'right-bottom', 'right-top', 'top'];\n  const scaleOverflow = () => ['auto', 'hidden', 'clip', 'visible', 'scroll'];\n  const scaleOverscroll = () => ['auto', 'contain', 'none'];\n  const scaleUnambiguousSpacing = () => [isArbitraryVariable, isArbitraryValue, themeSpacing];\n  const scaleInset = () => [isFraction, 'full', 'auto', ...scaleUnambiguousSpacing()];\n  const scaleGridTemplateColsRows = () => [isInteger, 'none', 'subgrid', isArbitraryVariable, isArbitraryValue];\n  const scaleGridColRowStartAndEnd = () => ['auto', {\n    span: ['full', isInteger, isArbitraryVariable, isArbitraryValue]\n  }, isArbitraryVariable, isArbitraryValue];\n  const scaleGridColRowStartOrEnd = () => [isInteger, 'auto', isArbitraryVariable, isArbitraryValue];\n  const scaleGridAutoColsRows = () => ['auto', 'min', 'max', 'fr', isArbitraryVariable, isArbitraryValue];\n  const scaleAlignPrimaryAxis = () => ['start', 'end', 'center', 'between', 'around', 'evenly', 'stretch', 'baseline'];\n  const scaleAlignSecondaryAxis = () => ['start', 'end', 'center', 'stretch'];\n  const scaleMargin = () => ['auto', ...scaleUnambiguousSpacing()];\n  const scaleSizing = () => [isFraction, 'auto', 'full', 'dvw', 'dvh', 'lvw', 'lvh', 'svw', 'svh', 'min', 'max', 'fit', ...scaleUnambiguousSpacing()];\n  const scaleColor = () => [themeColor, isArbitraryVariable, isArbitraryValue];\n  const scaleGradientStopPosition = () => [isPercent, isArbitraryLength];\n  const scaleRadius = () => [\n  // Deprecated since Tailwind CSS v4.0.0\n  '', 'none', 'full', themeRadius, isArbitraryVariable, isArbitraryValue];\n  const scaleBorderWidth = () => ['', isNumber, isArbitraryVariableLength, isArbitraryLength];\n  const scaleLineStyle = () => ['solid', 'dashed', 'dotted', 'double'];\n  const scaleBlendMode = () => ['normal', 'multiply', 'screen', 'overlay', 'darken', 'lighten', 'color-dodge', 'color-burn', 'hard-light', 'soft-light', 'difference', 'exclusion', 'hue', 'saturation', 'color', 'luminosity'];\n  const scaleBlur = () => [\n  // Deprecated since Tailwind CSS v4.0.0\n  '', 'none', themeBlur, isArbitraryVariable, isArbitraryValue];\n  const scaleOrigin = () => ['center', 'top', 'top-right', 'right', 'bottom-right', 'bottom', 'bottom-left', 'left', 'top-left', isArbitraryVariable, isArbitraryValue];\n  const scaleRotate = () => ['none', isNumber, isArbitraryVariable, isArbitraryValue];\n  const scaleScale = () => ['none', isNumber, isArbitraryVariable, isArbitraryValue];\n  const scaleSkew = () => [isNumber, isArbitraryVariable, isArbitraryValue];\n  const scaleTranslate = () => [isFraction, 'full', ...scaleUnambiguousSpacing()];\n  return {\n    cacheSize: 500,\n    theme: {\n      animate: ['spin', 'ping', 'pulse', 'bounce'],\n      aspect: ['video'],\n      blur: [isTshirtSize],\n      breakpoint: [isTshirtSize],\n      color: [isAny],\n      container: [isTshirtSize],\n      'drop-shadow': [isTshirtSize],\n      ease: ['in', 'out', 'in-out'],\n      font: [isAnyNonArbitrary],\n      'font-weight': ['thin', 'extralight', 'light', 'normal', 'medium', 'semibold', 'bold', 'extrabold', 'black'],\n      'inset-shadow': [isTshirtSize],\n      leading: ['none', 'tight', 'snug', 'normal', 'relaxed', 'loose'],\n      perspective: ['dramatic', 'near', 'normal', 'midrange', 'distant', 'none'],\n      radius: [isTshirtSize],\n      shadow: [isTshirtSize],\n      spacing: ['px', isNumber],\n      text: [isTshirtSize],\n      tracking: ['tighter', 'tight', 'normal', 'wide', 'wider', 'widest']\n    },\n    classGroups: {\n      // --------------\n      // --- Layout ---\n      // --------------\n      /**\r\n       * Aspect Ratio\r\n       * @see https://tailwindcss.com/docs/aspect-ratio\r\n       */\n      aspect: [{\n        aspect: ['auto', 'square', isFraction, isArbitraryValue, isArbitraryVariable, themeAspect]\n      }],\n      /**\r\n       * Container\r\n       * @see https://tailwindcss.com/docs/container\r\n       * @deprecated since Tailwind CSS v4.0.0\r\n       */\n      container: ['container'],\n      /**\r\n       * Columns\r\n       * @see https://tailwindcss.com/docs/columns\r\n       */\n      columns: [{\n        columns: [isNumber, isArbitraryValue, isArbitraryVariable, themeContainer]\n      }],\n      /**\r\n       * Break After\r\n       * @see https://tailwindcss.com/docs/break-after\r\n       */\n      'break-after': [{\n        'break-after': scaleBreak()\n      }],\n      /**\r\n       * Break Before\r\n       * @see https://tailwindcss.com/docs/break-before\r\n       */\n      'break-before': [{\n        'break-before': scaleBreak()\n      }],\n      /**\r\n       * Break Inside\r\n       * @see https://tailwindcss.com/docs/break-inside\r\n       */\n      'break-inside': [{\n        'break-inside': ['auto', 'avoid', 'avoid-page', 'avoid-column']\n      }],\n      /**\r\n       * Box Decoration Break\r\n       * @see https://tailwindcss.com/docs/box-decoration-break\r\n       */\n      'box-decoration': [{\n        'box-decoration': ['slice', 'clone']\n      }],\n      /**\r\n       * Box Sizing\r\n       * @see https://tailwindcss.com/docs/box-sizing\r\n       */\n      box: [{\n        box: ['border', 'content']\n      }],\n      /**\r\n       * Display\r\n       * @see https://tailwindcss.com/docs/display\r\n       */\n      display: ['block', 'inline-block', 'inline', 'flex', 'inline-flex', 'table', 'inline-table', 'table-caption', 'table-cell', 'table-column', 'table-column-group', 'table-footer-group', 'table-header-group', 'table-row-group', 'table-row', 'flow-root', 'grid', 'inline-grid', 'contents', 'list-item', 'hidden'],\n      /**\r\n       * Screen Reader Only\r\n       * @see https://tailwindcss.com/docs/display#screen-reader-only\r\n       */\n      sr: ['sr-only', 'not-sr-only'],\n      /**\r\n       * Floats\r\n       * @see https://tailwindcss.com/docs/float\r\n       */\n      float: [{\n        float: ['right', 'left', 'none', 'start', 'end']\n      }],\n      /**\r\n       * Clear\r\n       * @see https://tailwindcss.com/docs/clear\r\n       */\n      clear: [{\n        clear: ['left', 'right', 'both', 'none', 'start', 'end']\n      }],\n      /**\r\n       * Isolation\r\n       * @see https://tailwindcss.com/docs/isolation\r\n       */\n      isolation: ['isolate', 'isolation-auto'],\n      /**\r\n       * Object Fit\r\n       * @see https://tailwindcss.com/docs/object-fit\r\n       */\n      'object-fit': [{\n        object: ['contain', 'cover', 'fill', 'none', 'scale-down']\n      }],\n      /**\r\n       * Object Position\r\n       * @see https://tailwindcss.com/docs/object-position\r\n       */\n      'object-position': [{\n        object: [...scalePosition(), isArbitraryValue, isArbitraryVariable]\n      }],\n      /**\r\n       * Overflow\r\n       * @see https://tailwindcss.com/docs/overflow\r\n       */\n      overflow: [{\n        overflow: scaleOverflow()\n      }],\n      /**\r\n       * Overflow X\r\n       * @see https://tailwindcss.com/docs/overflow\r\n       */\n      'overflow-x': [{\n        'overflow-x': scaleOverflow()\n      }],\n      /**\r\n       * Overflow Y\r\n       * @see https://tailwindcss.com/docs/overflow\r\n       */\n      'overflow-y': [{\n        'overflow-y': scaleOverflow()\n      }],\n      /**\r\n       * Overscroll Behavior\r\n       * @see https://tailwindcss.com/docs/overscroll-behavior\r\n       */\n      overscroll: [{\n        overscroll: scaleOverscroll()\n      }],\n      /**\r\n       * Overscroll Behavior X\r\n       * @see https://tailwindcss.com/docs/overscroll-behavior\r\n       */\n      'overscroll-x': [{\n        'overscroll-x': scaleOverscroll()\n      }],\n      /**\r\n       * Overscroll Behavior Y\r\n       * @see https://tailwindcss.com/docs/overscroll-behavior\r\n       */\n      'overscroll-y': [{\n        'overscroll-y': scaleOverscroll()\n      }],\n      /**\r\n       * Position\r\n       * @see https://tailwindcss.com/docs/position\r\n       */\n      position: ['static', 'fixed', 'absolute', 'relative', 'sticky'],\n      /**\r\n       * Top / Right / Bottom / Left\r\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n       */\n      inset: [{\n        inset: scaleInset()\n      }],\n      /**\r\n       * Right / Left\r\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n       */\n      'inset-x': [{\n        'inset-x': scaleInset()\n      }],\n      /**\r\n       * Top / Bottom\r\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n       */\n      'inset-y': [{\n        'inset-y': scaleInset()\n      }],\n      /**\r\n       * Start\r\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n       */\n      start: [{\n        start: scaleInset()\n      }],\n      /**\r\n       * End\r\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n       */\n      end: [{\n        end: scaleInset()\n      }],\n      /**\r\n       * Top\r\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n       */\n      top: [{\n        top: scaleInset()\n      }],\n      /**\r\n       * Right\r\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n       */\n      right: [{\n        right: scaleInset()\n      }],\n      /**\r\n       * Bottom\r\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n       */\n      bottom: [{\n        bottom: scaleInset()\n      }],\n      /**\r\n       * Left\r\n       * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n       */\n      left: [{\n        left: scaleInset()\n      }],\n      /**\r\n       * Visibility\r\n       * @see https://tailwindcss.com/docs/visibility\r\n       */\n      visibility: ['visible', 'invisible', 'collapse'],\n      /**\r\n       * Z-Index\r\n       * @see https://tailwindcss.com/docs/z-index\r\n       */\n      z: [{\n        z: [isInteger, 'auto', isArbitraryVariable, isArbitraryValue]\n      }],\n      // ------------------------\n      // --- Flexbox and Grid ---\n      // ------------------------\n      /**\r\n       * Flex Basis\r\n       * @see https://tailwindcss.com/docs/flex-basis\r\n       */\n      basis: [{\n        basis: [isFraction, 'full', 'auto', themeContainer, ...scaleUnambiguousSpacing()]\n      }],\n      /**\r\n       * Flex Direction\r\n       * @see https://tailwindcss.com/docs/flex-direction\r\n       */\n      'flex-direction': [{\n        flex: ['row', 'row-reverse', 'col', 'col-reverse']\n      }],\n      /**\r\n       * Flex Wrap\r\n       * @see https://tailwindcss.com/docs/flex-wrap\r\n       */\n      'flex-wrap': [{\n        flex: ['nowrap', 'wrap', 'wrap-reverse']\n      }],\n      /**\r\n       * Flex\r\n       * @see https://tailwindcss.com/docs/flex\r\n       */\n      flex: [{\n        flex: [isNumber, isFraction, 'auto', 'initial', 'none', isArbitraryValue]\n      }],\n      /**\r\n       * Flex Grow\r\n       * @see https://tailwindcss.com/docs/flex-grow\r\n       */\n      grow: [{\n        grow: ['', isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\r\n       * Flex Shrink\r\n       * @see https://tailwindcss.com/docs/flex-shrink\r\n       */\n      shrink: [{\n        shrink: ['', isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\r\n       * Order\r\n       * @see https://tailwindcss.com/docs/order\r\n       */\n      order: [{\n        order: [isInteger, 'first', 'last', 'none', isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\r\n       * Grid Template Columns\r\n       * @see https://tailwindcss.com/docs/grid-template-columns\r\n       */\n      'grid-cols': [{\n        'grid-cols': scaleGridTemplateColsRows()\n      }],\n      /**\r\n       * Grid Column Start / End\r\n       * @see https://tailwindcss.com/docs/grid-column\r\n       */\n      'col-start-end': [{\n        col: scaleGridColRowStartAndEnd()\n      }],\n      /**\r\n       * Grid Column Start\r\n       * @see https://tailwindcss.com/docs/grid-column\r\n       */\n      'col-start': [{\n        'col-start': scaleGridColRowStartOrEnd()\n      }],\n      /**\r\n       * Grid Column End\r\n       * @see https://tailwindcss.com/docs/grid-column\r\n       */\n      'col-end': [{\n        'col-end': scaleGridColRowStartOrEnd()\n      }],\n      /**\r\n       * Grid Template Rows\r\n       * @see https://tailwindcss.com/docs/grid-template-rows\r\n       */\n      'grid-rows': [{\n        'grid-rows': scaleGridTemplateColsRows()\n      }],\n      /**\r\n       * Grid Row Start / End\r\n       * @see https://tailwindcss.com/docs/grid-row\r\n       */\n      'row-start-end': [{\n        row: scaleGridColRowStartAndEnd()\n      }],\n      /**\r\n       * Grid Row Start\r\n       * @see https://tailwindcss.com/docs/grid-row\r\n       */\n      'row-start': [{\n        'row-start': scaleGridColRowStartOrEnd()\n      }],\n      /**\r\n       * Grid Row End\r\n       * @see https://tailwindcss.com/docs/grid-row\r\n       */\n      'row-end': [{\n        'row-end': scaleGridColRowStartOrEnd()\n      }],\n      /**\r\n       * Grid Auto Flow\r\n       * @see https://tailwindcss.com/docs/grid-auto-flow\r\n       */\n      'grid-flow': [{\n        'grid-flow': ['row', 'col', 'dense', 'row-dense', 'col-dense']\n      }],\n      /**\r\n       * Grid Auto Columns\r\n       * @see https://tailwindcss.com/docs/grid-auto-columns\r\n       */\n      'auto-cols': [{\n        'auto-cols': scaleGridAutoColsRows()\n      }],\n      /**\r\n       * Grid Auto Rows\r\n       * @see https://tailwindcss.com/docs/grid-auto-rows\r\n       */\n      'auto-rows': [{\n        'auto-rows': scaleGridAutoColsRows()\n      }],\n      /**\r\n       * Gap\r\n       * @see https://tailwindcss.com/docs/gap\r\n       */\n      gap: [{\n        gap: scaleUnambiguousSpacing()\n      }],\n      /**\r\n       * Gap X\r\n       * @see https://tailwindcss.com/docs/gap\r\n       */\n      'gap-x': [{\n        'gap-x': scaleUnambiguousSpacing()\n      }],\n      /**\r\n       * Gap Y\r\n       * @see https://tailwindcss.com/docs/gap\r\n       */\n      'gap-y': [{\n        'gap-y': scaleUnambiguousSpacing()\n      }],\n      /**\r\n       * Justify Content\r\n       * @see https://tailwindcss.com/docs/justify-content\r\n       */\n      'justify-content': [{\n        justify: [...scaleAlignPrimaryAxis(), 'normal']\n      }],\n      /**\r\n       * Justify Items\r\n       * @see https://tailwindcss.com/docs/justify-items\r\n       */\n      'justify-items': [{\n        'justify-items': [...scaleAlignSecondaryAxis(), 'normal']\n      }],\n      /**\r\n       * Justify Self\r\n       * @see https://tailwindcss.com/docs/justify-self\r\n       */\n      'justify-self': [{\n        'justify-self': ['auto', ...scaleAlignSecondaryAxis()]\n      }],\n      /**\r\n       * Align Content\r\n       * @see https://tailwindcss.com/docs/align-content\r\n       */\n      'align-content': [{\n        content: ['normal', ...scaleAlignPrimaryAxis()]\n      }],\n      /**\r\n       * Align Items\r\n       * @see https://tailwindcss.com/docs/align-items\r\n       */\n      'align-items': [{\n        items: [...scaleAlignSecondaryAxis(), 'baseline']\n      }],\n      /**\r\n       * Align Self\r\n       * @see https://tailwindcss.com/docs/align-self\r\n       */\n      'align-self': [{\n        self: ['auto', ...scaleAlignSecondaryAxis(), 'baseline']\n      }],\n      /**\r\n       * Place Content\r\n       * @see https://tailwindcss.com/docs/place-content\r\n       */\n      'place-content': [{\n        'place-content': scaleAlignPrimaryAxis()\n      }],\n      /**\r\n       * Place Items\r\n       * @see https://tailwindcss.com/docs/place-items\r\n       */\n      'place-items': [{\n        'place-items': [...scaleAlignSecondaryAxis(), 'baseline']\n      }],\n      /**\r\n       * Place Self\r\n       * @see https://tailwindcss.com/docs/place-self\r\n       */\n      'place-self': [{\n        'place-self': ['auto', ...scaleAlignSecondaryAxis()]\n      }],\n      // Spacing\n      /**\r\n       * Padding\r\n       * @see https://tailwindcss.com/docs/padding\r\n       */\n      p: [{\n        p: scaleUnambiguousSpacing()\n      }],\n      /**\r\n       * Padding X\r\n       * @see https://tailwindcss.com/docs/padding\r\n       */\n      px: [{\n        px: scaleUnambiguousSpacing()\n      }],\n      /**\r\n       * Padding Y\r\n       * @see https://tailwindcss.com/docs/padding\r\n       */\n      py: [{\n        py: scaleUnambiguousSpacing()\n      }],\n      /**\r\n       * Padding Start\r\n       * @see https://tailwindcss.com/docs/padding\r\n       */\n      ps: [{\n        ps: scaleUnambiguousSpacing()\n      }],\n      /**\r\n       * Padding End\r\n       * @see https://tailwindcss.com/docs/padding\r\n       */\n      pe: [{\n        pe: scaleUnambiguousSpacing()\n      }],\n      /**\r\n       * Padding Top\r\n       * @see https://tailwindcss.com/docs/padding\r\n       */\n      pt: [{\n        pt: scaleUnambiguousSpacing()\n      }],\n      /**\r\n       * Padding Right\r\n       * @see https://tailwindcss.com/docs/padding\r\n       */\n      pr: [{\n        pr: scaleUnambiguousSpacing()\n      }],\n      /**\r\n       * Padding Bottom\r\n       * @see https://tailwindcss.com/docs/padding\r\n       */\n      pb: [{\n        pb: scaleUnambiguousSpacing()\n      }],\n      /**\r\n       * Padding Left\r\n       * @see https://tailwindcss.com/docs/padding\r\n       */\n      pl: [{\n        pl: scaleUnambiguousSpacing()\n      }],\n      /**\r\n       * Margin\r\n       * @see https://tailwindcss.com/docs/margin\r\n       */\n      m: [{\n        m: scaleMargin()\n      }],\n      /**\r\n       * Margin X\r\n       * @see https://tailwindcss.com/docs/margin\r\n       */\n      mx: [{\n        mx: scaleMargin()\n      }],\n      /**\r\n       * Margin Y\r\n       * @see https://tailwindcss.com/docs/margin\r\n       */\n      my: [{\n        my: scaleMargin()\n      }],\n      /**\r\n       * Margin Start\r\n       * @see https://tailwindcss.com/docs/margin\r\n       */\n      ms: [{\n        ms: scaleMargin()\n      }],\n      /**\r\n       * Margin End\r\n       * @see https://tailwindcss.com/docs/margin\r\n       */\n      me: [{\n        me: scaleMargin()\n      }],\n      /**\r\n       * Margin Top\r\n       * @see https://tailwindcss.com/docs/margin\r\n       */\n      mt: [{\n        mt: scaleMargin()\n      }],\n      /**\r\n       * Margin Right\r\n       * @see https://tailwindcss.com/docs/margin\r\n       */\n      mr: [{\n        mr: scaleMargin()\n      }],\n      /**\r\n       * Margin Bottom\r\n       * @see https://tailwindcss.com/docs/margin\r\n       */\n      mb: [{\n        mb: scaleMargin()\n      }],\n      /**\r\n       * Margin Left\r\n       * @see https://tailwindcss.com/docs/margin\r\n       */\n      ml: [{\n        ml: scaleMargin()\n      }],\n      /**\r\n       * Space Between X\r\n       * @see https://tailwindcss.com/docs/margin#adding-space-between-children\r\n       */\n      'space-x': [{\n        'space-x': scaleUnambiguousSpacing()\n      }],\n      /**\r\n       * Space Between X Reverse\r\n       * @see https://tailwindcss.com/docs/margin#adding-space-between-children\r\n       */\n      'space-x-reverse': ['space-x-reverse'],\n      /**\r\n       * Space Between Y\r\n       * @see https://tailwindcss.com/docs/margin#adding-space-between-children\r\n       */\n      'space-y': [{\n        'space-y': scaleUnambiguousSpacing()\n      }],\n      /**\r\n       * Space Between Y Reverse\r\n       * @see https://tailwindcss.com/docs/margin#adding-space-between-children\r\n       */\n      'space-y-reverse': ['space-y-reverse'],\n      // --------------\n      // --- Sizing ---\n      // --------------\n      /**\r\n       * Size\r\n       * @see https://tailwindcss.com/docs/width#setting-both-width-and-height\r\n       */\n      size: [{\n        size: scaleSizing()\n      }],\n      /**\r\n       * Width\r\n       * @see https://tailwindcss.com/docs/width\r\n       */\n      w: [{\n        w: [themeContainer, 'screen', ...scaleSizing()]\n      }],\n      /**\r\n       * Min-Width\r\n       * @see https://tailwindcss.com/docs/min-width\r\n       */\n      'min-w': [{\n        'min-w': [themeContainer, 'screen', /** Deprecated. @see https://github.com/tailwindlabs/tailwindcss.com/issues/2027#issuecomment-2620152757 */\n        'none', ...scaleSizing()]\n      }],\n      /**\r\n       * Max-Width\r\n       * @see https://tailwindcss.com/docs/max-width\r\n       */\n      'max-w': [{\n        'max-w': [themeContainer, 'screen', 'none', /** Deprecated since Tailwind CSS v4.0.0. @see https://github.com/tailwindlabs/tailwindcss.com/issues/2027#issuecomment-2620152757 */\n        'prose', /** Deprecated since Tailwind CSS v4.0.0. @see https://github.com/tailwindlabs/tailwindcss.com/issues/2027#issuecomment-2620152757 */\n        {\n          screen: [themeBreakpoint]\n        }, ...scaleSizing()]\n      }],\n      /**\r\n       * Height\r\n       * @see https://tailwindcss.com/docs/height\r\n       */\n      h: [{\n        h: ['screen', ...scaleSizing()]\n      }],\n      /**\r\n       * Min-Height\r\n       * @see https://tailwindcss.com/docs/min-height\r\n       */\n      'min-h': [{\n        'min-h': ['screen', 'none', ...scaleSizing()]\n      }],\n      /**\r\n       * Max-Height\r\n       * @see https://tailwindcss.com/docs/max-height\r\n       */\n      'max-h': [{\n        'max-h': ['screen', ...scaleSizing()]\n      }],\n      // ------------------\n      // --- Typography ---\n      // ------------------\n      /**\r\n       * Font Size\r\n       * @see https://tailwindcss.com/docs/font-size\r\n       */\n      'font-size': [{\n        text: ['base', themeText, isArbitraryVariableLength, isArbitraryLength]\n      }],\n      /**\r\n       * Font Smoothing\r\n       * @see https://tailwindcss.com/docs/font-smoothing\r\n       */\n      'font-smoothing': ['antialiased', 'subpixel-antialiased'],\n      /**\r\n       * Font Style\r\n       * @see https://tailwindcss.com/docs/font-style\r\n       */\n      'font-style': ['italic', 'not-italic'],\n      /**\r\n       * Font Weight\r\n       * @see https://tailwindcss.com/docs/font-weight\r\n       */\n      'font-weight': [{\n        font: [themeFontWeight, isArbitraryVariable, isArbitraryNumber]\n      }],\n      /**\r\n       * Font Stretch\r\n       * @see https://tailwindcss.com/docs/font-stretch\r\n       */\n      'font-stretch': [{\n        'font-stretch': ['ultra-condensed', 'extra-condensed', 'condensed', 'semi-condensed', 'normal', 'semi-expanded', 'expanded', 'extra-expanded', 'ultra-expanded', isPercent, isArbitraryValue]\n      }],\n      /**\r\n       * Font Family\r\n       * @see https://tailwindcss.com/docs/font-family\r\n       */\n      'font-family': [{\n        font: [isArbitraryVariableFamilyName, isArbitraryValue, themeFont]\n      }],\n      /**\r\n       * Font Variant Numeric\r\n       * @see https://tailwindcss.com/docs/font-variant-numeric\r\n       */\n      'fvn-normal': ['normal-nums'],\n      /**\r\n       * Font Variant Numeric\r\n       * @see https://tailwindcss.com/docs/font-variant-numeric\r\n       */\n      'fvn-ordinal': ['ordinal'],\n      /**\r\n       * Font Variant Numeric\r\n       * @see https://tailwindcss.com/docs/font-variant-numeric\r\n       */\n      'fvn-slashed-zero': ['slashed-zero'],\n      /**\r\n       * Font Variant Numeric\r\n       * @see https://tailwindcss.com/docs/font-variant-numeric\r\n       */\n      'fvn-figure': ['lining-nums', 'oldstyle-nums'],\n      /**\r\n       * Font Variant Numeric\r\n       * @see https://tailwindcss.com/docs/font-variant-numeric\r\n       */\n      'fvn-spacing': ['proportional-nums', 'tabular-nums'],\n      /**\r\n       * Font Variant Numeric\r\n       * @see https://tailwindcss.com/docs/font-variant-numeric\r\n       */\n      'fvn-fraction': ['diagonal-fractions', 'stacked-fractions'],\n      /**\r\n       * Letter Spacing\r\n       * @see https://tailwindcss.com/docs/letter-spacing\r\n       */\n      tracking: [{\n        tracking: [themeTracking, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\r\n       * Line Clamp\r\n       * @see https://tailwindcss.com/docs/line-clamp\r\n       */\n      'line-clamp': [{\n        'line-clamp': [isNumber, 'none', isArbitraryVariable, isArbitraryNumber]\n      }],\n      /**\r\n       * Line Height\r\n       * @see https://tailwindcss.com/docs/line-height\r\n       */\n      leading: [{\n        leading: [/** Deprecated since Tailwind CSS v4.0.0. @see https://github.com/tailwindlabs/tailwindcss.com/issues/2027#issuecomment-2620152757 */\n        themeLeading, ...scaleUnambiguousSpacing()]\n      }],\n      /**\r\n       * List Style Image\r\n       * @see https://tailwindcss.com/docs/list-style-image\r\n       */\n      'list-image': [{\n        'list-image': ['none', isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\r\n       * List Style Position\r\n       * @see https://tailwindcss.com/docs/list-style-position\r\n       */\n      'list-style-position': [{\n        list: ['inside', 'outside']\n      }],\n      /**\r\n       * List Style Type\r\n       * @see https://tailwindcss.com/docs/list-style-type\r\n       */\n      'list-style-type': [{\n        list: ['disc', 'decimal', 'none', isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\r\n       * Text Alignment\r\n       * @see https://tailwindcss.com/docs/text-align\r\n       */\n      'text-alignment': [{\n        text: ['left', 'center', 'right', 'justify', 'start', 'end']\n      }],\n      /**\r\n       * Placeholder Color\r\n       * @deprecated since Tailwind CSS v3.0.0\r\n       * @see https://v3.tailwindcss.com/docs/placeholder-color\r\n       */\n      'placeholder-color': [{\n        placeholder: scaleColor()\n      }],\n      /**\r\n       * Text Color\r\n       * @see https://tailwindcss.com/docs/text-color\r\n       */\n      'text-color': [{\n        text: scaleColor()\n      }],\n      /**\r\n       * Text Decoration\r\n       * @see https://tailwindcss.com/docs/text-decoration\r\n       */\n      'text-decoration': ['underline', 'overline', 'line-through', 'no-underline'],\n      /**\r\n       * Text Decoration Style\r\n       * @see https://tailwindcss.com/docs/text-decoration-style\r\n       */\n      'text-decoration-style': [{\n        decoration: [...scaleLineStyle(), 'wavy']\n      }],\n      /**\r\n       * Text Decoration Thickness\r\n       * @see https://tailwindcss.com/docs/text-decoration-thickness\r\n       */\n      'text-decoration-thickness': [{\n        decoration: [isNumber, 'from-font', 'auto', isArbitraryVariable, isArbitraryLength]\n      }],\n      /**\r\n       * Text Decoration Color\r\n       * @see https://tailwindcss.com/docs/text-decoration-color\r\n       */\n      'text-decoration-color': [{\n        decoration: scaleColor()\n      }],\n      /**\r\n       * Text Underline Offset\r\n       * @see https://tailwindcss.com/docs/text-underline-offset\r\n       */\n      'underline-offset': [{\n        'underline-offset': [isNumber, 'auto', isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\r\n       * Text Transform\r\n       * @see https://tailwindcss.com/docs/text-transform\r\n       */\n      'text-transform': ['uppercase', 'lowercase', 'capitalize', 'normal-case'],\n      /**\r\n       * Text Overflow\r\n       * @see https://tailwindcss.com/docs/text-overflow\r\n       */\n      'text-overflow': ['truncate', 'text-ellipsis', 'text-clip'],\n      /**\r\n       * Text Wrap\r\n       * @see https://tailwindcss.com/docs/text-wrap\r\n       */\n      'text-wrap': [{\n        text: ['wrap', 'nowrap', 'balance', 'pretty']\n      }],\n      /**\r\n       * Text Indent\r\n       * @see https://tailwindcss.com/docs/text-indent\r\n       */\n      indent: [{\n        indent: scaleUnambiguousSpacing()\n      }],\n      /**\r\n       * Vertical Alignment\r\n       * @see https://tailwindcss.com/docs/vertical-align\r\n       */\n      'vertical-align': [{\n        align: ['baseline', 'top', 'middle', 'bottom', 'text-top', 'text-bottom', 'sub', 'super', isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\r\n       * Whitespace\r\n       * @see https://tailwindcss.com/docs/whitespace\r\n       */\n      whitespace: [{\n        whitespace: ['normal', 'nowrap', 'pre', 'pre-line', 'pre-wrap', 'break-spaces']\n      }],\n      /**\r\n       * Word Break\r\n       * @see https://tailwindcss.com/docs/word-break\r\n       */\n      break: [{\n        break: ['normal', 'words', 'all', 'keep']\n      }],\n      /**\r\n       * Hyphens\r\n       * @see https://tailwindcss.com/docs/hyphens\r\n       */\n      hyphens: [{\n        hyphens: ['none', 'manual', 'auto']\n      }],\n      /**\r\n       * Content\r\n       * @see https://tailwindcss.com/docs/content\r\n       */\n      content: [{\n        content: ['none', isArbitraryVariable, isArbitraryValue]\n      }],\n      // -------------------\n      // --- Backgrounds ---\n      // -------------------\n      /**\r\n       * Background Attachment\r\n       * @see https://tailwindcss.com/docs/background-attachment\r\n       */\n      'bg-attachment': [{\n        bg: ['fixed', 'local', 'scroll']\n      }],\n      /**\r\n       * Background Clip\r\n       * @see https://tailwindcss.com/docs/background-clip\r\n       */\n      'bg-clip': [{\n        'bg-clip': ['border', 'padding', 'content', 'text']\n      }],\n      /**\r\n       * Background Origin\r\n       * @see https://tailwindcss.com/docs/background-origin\r\n       */\n      'bg-origin': [{\n        'bg-origin': ['border', 'padding', 'content']\n      }],\n      /**\r\n       * Background Position\r\n       * @see https://tailwindcss.com/docs/background-position\r\n       */\n      'bg-position': [{\n        bg: [...scalePosition(), isArbitraryVariablePosition, isArbitraryPosition]\n      }],\n      /**\r\n       * Background Repeat\r\n       * @see https://tailwindcss.com/docs/background-repeat\r\n       */\n      'bg-repeat': [{\n        bg: ['no-repeat', {\n          repeat: ['', 'x', 'y', 'space', 'round']\n        }]\n      }],\n      /**\r\n       * Background Size\r\n       * @see https://tailwindcss.com/docs/background-size\r\n       */\n      'bg-size': [{\n        bg: ['auto', 'cover', 'contain', isArbitraryVariableSize, isArbitrarySize]\n      }],\n      /**\r\n       * Background Image\r\n       * @see https://tailwindcss.com/docs/background-image\r\n       */\n      'bg-image': [{\n        bg: ['none', {\n          linear: [{\n            to: ['t', 'tr', 'r', 'br', 'b', 'bl', 'l', 'tl']\n          }, isInteger, isArbitraryVariable, isArbitraryValue],\n          radial: ['', isArbitraryVariable, isArbitraryValue],\n          conic: [isInteger, isArbitraryVariable, isArbitraryValue]\n        }, isArbitraryVariableImage, isArbitraryImage]\n      }],\n      /**\r\n       * Background Color\r\n       * @see https://tailwindcss.com/docs/background-color\r\n       */\n      'bg-color': [{\n        bg: scaleColor()\n      }],\n      /**\r\n       * Gradient Color Stops From Position\r\n       * @see https://tailwindcss.com/docs/gradient-color-stops\r\n       */\n      'gradient-from-pos': [{\n        from: scaleGradientStopPosition()\n      }],\n      /**\r\n       * Gradient Color Stops Via Position\r\n       * @see https://tailwindcss.com/docs/gradient-color-stops\r\n       */\n      'gradient-via-pos': [{\n        via: scaleGradientStopPosition()\n      }],\n      /**\r\n       * Gradient Color Stops To Position\r\n       * @see https://tailwindcss.com/docs/gradient-color-stops\r\n       */\n      'gradient-to-pos': [{\n        to: scaleGradientStopPosition()\n      }],\n      /**\r\n       * Gradient Color Stops From\r\n       * @see https://tailwindcss.com/docs/gradient-color-stops\r\n       */\n      'gradient-from': [{\n        from: scaleColor()\n      }],\n      /**\r\n       * Gradient Color Stops Via\r\n       * @see https://tailwindcss.com/docs/gradient-color-stops\r\n       */\n      'gradient-via': [{\n        via: scaleColor()\n      }],\n      /**\r\n       * Gradient Color Stops To\r\n       * @see https://tailwindcss.com/docs/gradient-color-stops\r\n       */\n      'gradient-to': [{\n        to: scaleColor()\n      }],\n      // ---------------\n      // --- Borders ---\n      // ---------------\n      /**\r\n       * Border Radius\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\n      rounded: [{\n        rounded: scaleRadius()\n      }],\n      /**\r\n       * Border Radius Start\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\n      'rounded-s': [{\n        'rounded-s': scaleRadius()\n      }],\n      /**\r\n       * Border Radius End\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\n      'rounded-e': [{\n        'rounded-e': scaleRadius()\n      }],\n      /**\r\n       * Border Radius Top\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\n      'rounded-t': [{\n        'rounded-t': scaleRadius()\n      }],\n      /**\r\n       * Border Radius Right\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\n      'rounded-r': [{\n        'rounded-r': scaleRadius()\n      }],\n      /**\r\n       * Border Radius Bottom\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\n      'rounded-b': [{\n        'rounded-b': scaleRadius()\n      }],\n      /**\r\n       * Border Radius Left\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\n      'rounded-l': [{\n        'rounded-l': scaleRadius()\n      }],\n      /**\r\n       * Border Radius Start Start\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\n      'rounded-ss': [{\n        'rounded-ss': scaleRadius()\n      }],\n      /**\r\n       * Border Radius Start End\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\n      'rounded-se': [{\n        'rounded-se': scaleRadius()\n      }],\n      /**\r\n       * Border Radius End End\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\n      'rounded-ee': [{\n        'rounded-ee': scaleRadius()\n      }],\n      /**\r\n       * Border Radius End Start\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\n      'rounded-es': [{\n        'rounded-es': scaleRadius()\n      }],\n      /**\r\n       * Border Radius Top Left\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\n      'rounded-tl': [{\n        'rounded-tl': scaleRadius()\n      }],\n      /**\r\n       * Border Radius Top Right\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\n      'rounded-tr': [{\n        'rounded-tr': scaleRadius()\n      }],\n      /**\r\n       * Border Radius Bottom Right\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\n      'rounded-br': [{\n        'rounded-br': scaleRadius()\n      }],\n      /**\r\n       * Border Radius Bottom Left\r\n       * @see https://tailwindcss.com/docs/border-radius\r\n       */\n      'rounded-bl': [{\n        'rounded-bl': scaleRadius()\n      }],\n      /**\r\n       * Border Width\r\n       * @see https://tailwindcss.com/docs/border-width\r\n       */\n      'border-w': [{\n        border: scaleBorderWidth()\n      }],\n      /**\r\n       * Border Width X\r\n       * @see https://tailwindcss.com/docs/border-width\r\n       */\n      'border-w-x': [{\n        'border-x': scaleBorderWidth()\n      }],\n      /**\r\n       * Border Width Y\r\n       * @see https://tailwindcss.com/docs/border-width\r\n       */\n      'border-w-y': [{\n        'border-y': scaleBorderWidth()\n      }],\n      /**\r\n       * Border Width Start\r\n       * @see https://tailwindcss.com/docs/border-width\r\n       */\n      'border-w-s': [{\n        'border-s': scaleBorderWidth()\n      }],\n      /**\r\n       * Border Width End\r\n       * @see https://tailwindcss.com/docs/border-width\r\n       */\n      'border-w-e': [{\n        'border-e': scaleBorderWidth()\n      }],\n      /**\r\n       * Border Width Top\r\n       * @see https://tailwindcss.com/docs/border-width\r\n       */\n      'border-w-t': [{\n        'border-t': scaleBorderWidth()\n      }],\n      /**\r\n       * Border Width Right\r\n       * @see https://tailwindcss.com/docs/border-width\r\n       */\n      'border-w-r': [{\n        'border-r': scaleBorderWidth()\n      }],\n      /**\r\n       * Border Width Bottom\r\n       * @see https://tailwindcss.com/docs/border-width\r\n       */\n      'border-w-b': [{\n        'border-b': scaleBorderWidth()\n      }],\n      /**\r\n       * Border Width Left\r\n       * @see https://tailwindcss.com/docs/border-width\r\n       */\n      'border-w-l': [{\n        'border-l': scaleBorderWidth()\n      }],\n      /**\r\n       * Divide Width X\r\n       * @see https://tailwindcss.com/docs/border-width#between-children\r\n       */\n      'divide-x': [{\n        'divide-x': scaleBorderWidth()\n      }],\n      /**\r\n       * Divide Width X Reverse\r\n       * @see https://tailwindcss.com/docs/border-width#between-children\r\n       */\n      'divide-x-reverse': ['divide-x-reverse'],\n      /**\r\n       * Divide Width Y\r\n       * @see https://tailwindcss.com/docs/border-width#between-children\r\n       */\n      'divide-y': [{\n        'divide-y': scaleBorderWidth()\n      }],\n      /**\r\n       * Divide Width Y Reverse\r\n       * @see https://tailwindcss.com/docs/border-width#between-children\r\n       */\n      'divide-y-reverse': ['divide-y-reverse'],\n      /**\r\n       * Border Style\r\n       * @see https://tailwindcss.com/docs/border-style\r\n       */\n      'border-style': [{\n        border: [...scaleLineStyle(), 'hidden', 'none']\n      }],\n      /**\r\n       * Divide Style\r\n       * @see https://tailwindcss.com/docs/border-style#setting-the-divider-style\r\n       */\n      'divide-style': [{\n        divide: [...scaleLineStyle(), 'hidden', 'none']\n      }],\n      /**\r\n       * Border Color\r\n       * @see https://tailwindcss.com/docs/border-color\r\n       */\n      'border-color': [{\n        border: scaleColor()\n      }],\n      /**\r\n       * Border Color X\r\n       * @see https://tailwindcss.com/docs/border-color\r\n       */\n      'border-color-x': [{\n        'border-x': scaleColor()\n      }],\n      /**\r\n       * Border Color Y\r\n       * @see https://tailwindcss.com/docs/border-color\r\n       */\n      'border-color-y': [{\n        'border-y': scaleColor()\n      }],\n      /**\r\n       * Border Color S\r\n       * @see https://tailwindcss.com/docs/border-color\r\n       */\n      'border-color-s': [{\n        'border-s': scaleColor()\n      }],\n      /**\r\n       * Border Color E\r\n       * @see https://tailwindcss.com/docs/border-color\r\n       */\n      'border-color-e': [{\n        'border-e': scaleColor()\n      }],\n      /**\r\n       * Border Color Top\r\n       * @see https://tailwindcss.com/docs/border-color\r\n       */\n      'border-color-t': [{\n        'border-t': scaleColor()\n      }],\n      /**\r\n       * Border Color Right\r\n       * @see https://tailwindcss.com/docs/border-color\r\n       */\n      'border-color-r': [{\n        'border-r': scaleColor()\n      }],\n      /**\r\n       * Border Color Bottom\r\n       * @see https://tailwindcss.com/docs/border-color\r\n       */\n      'border-color-b': [{\n        'border-b': scaleColor()\n      }],\n      /**\r\n       * Border Color Left\r\n       * @see https://tailwindcss.com/docs/border-color\r\n       */\n      'border-color-l': [{\n        'border-l': scaleColor()\n      }],\n      /**\r\n       * Divide Color\r\n       * @see https://tailwindcss.com/docs/divide-color\r\n       */\n      'divide-color': [{\n        divide: scaleColor()\n      }],\n      /**\r\n       * Outline Style\r\n       * @see https://tailwindcss.com/docs/outline-style\r\n       */\n      'outline-style': [{\n        outline: [...scaleLineStyle(), 'none', 'hidden']\n      }],\n      /**\r\n       * Outline Offset\r\n       * @see https://tailwindcss.com/docs/outline-offset\r\n       */\n      'outline-offset': [{\n        'outline-offset': [isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\r\n       * Outline Width\r\n       * @see https://tailwindcss.com/docs/outline-width\r\n       */\n      'outline-w': [{\n        outline: ['', isNumber, isArbitraryVariableLength, isArbitraryLength]\n      }],\n      /**\r\n       * Outline Color\r\n       * @see https://tailwindcss.com/docs/outline-color\r\n       */\n      'outline-color': [{\n        outline: [themeColor]\n      }],\n      // ---------------\n      // --- Effects ---\n      // ---------------\n      /**\r\n       * Box Shadow\r\n       * @see https://tailwindcss.com/docs/box-shadow\r\n       */\n      shadow: [{\n        shadow: [\n        // Deprecated since Tailwind CSS v4.0.0\n        '', 'none', themeShadow, isArbitraryVariableShadow, isArbitraryShadow]\n      }],\n      /**\r\n       * Box Shadow Color\r\n       * @see https://tailwindcss.com/docs/box-shadow#setting-the-shadow-color\r\n       */\n      'shadow-color': [{\n        shadow: scaleColor()\n      }],\n      /**\r\n       * Inset Box Shadow\r\n       * @see https://tailwindcss.com/docs/box-shadow#adding-an-inset-shadow\r\n       */\n      'inset-shadow': [{\n        'inset-shadow': ['none', isArbitraryVariable, isArbitraryValue, themeInsetShadow]\n      }],\n      /**\r\n       * Inset Box Shadow Color\r\n       * @see https://tailwindcss.com/docs/box-shadow#setting-the-inset-shadow-color\r\n       */\n      'inset-shadow-color': [{\n        'inset-shadow': scaleColor()\n      }],\n      /**\r\n       * Ring Width\r\n       * @see https://tailwindcss.com/docs/box-shadow#adding-a-ring\r\n       */\n      'ring-w': [{\n        ring: scaleBorderWidth()\n      }],\n      /**\r\n       * Ring Width Inset\r\n       * @see https://v3.tailwindcss.com/docs/ring-width#inset-rings\r\n       * @deprecated since Tailwind CSS v4.0.0\r\n       * @see https://github.com/tailwindlabs/tailwindcss/blob/v4.0.0/packages/tailwindcss/src/utilities.ts#L4158\r\n       */\n      'ring-w-inset': ['ring-inset'],\n      /**\r\n       * Ring Color\r\n       * @see https://tailwindcss.com/docs/box-shadow#setting-the-ring-color\r\n       */\n      'ring-color': [{\n        ring: scaleColor()\n      }],\n      /**\r\n       * Ring Offset Width\r\n       * @see https://v3.tailwindcss.com/docs/ring-offset-width\r\n       * @deprecated since Tailwind CSS v4.0.0\r\n       * @see https://github.com/tailwindlabs/tailwindcss/blob/v4.0.0/packages/tailwindcss/src/utilities.ts#L4158\r\n       */\n      'ring-offset-w': [{\n        'ring-offset': [isNumber, isArbitraryLength]\n      }],\n      /**\r\n       * Ring Offset Color\r\n       * @see https://v3.tailwindcss.com/docs/ring-offset-color\r\n       * @deprecated since Tailwind CSS v4.0.0\r\n       * @see https://github.com/tailwindlabs/tailwindcss/blob/v4.0.0/packages/tailwindcss/src/utilities.ts#L4158\r\n       */\n      'ring-offset-color': [{\n        'ring-offset': scaleColor()\n      }],\n      /**\r\n       * Inset Ring Width\r\n       * @see https://tailwindcss.com/docs/box-shadow#adding-an-inset-ring\r\n       */\n      'inset-ring-w': [{\n        'inset-ring': scaleBorderWidth()\n      }],\n      /**\r\n       * Inset Ring Color\r\n       * @see https://tailwindcss.com/docs/box-shadow#setting-the-inset-ring-color\r\n       */\n      'inset-ring-color': [{\n        'inset-ring': scaleColor()\n      }],\n      /**\r\n       * Opacity\r\n       * @see https://tailwindcss.com/docs/opacity\r\n       */\n      opacity: [{\n        opacity: [isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\r\n       * Mix Blend Mode\r\n       * @see https://tailwindcss.com/docs/mix-blend-mode\r\n       */\n      'mix-blend': [{\n        'mix-blend': [...scaleBlendMode(), 'plus-darker', 'plus-lighter']\n      }],\n      /**\r\n       * Background Blend Mode\r\n       * @see https://tailwindcss.com/docs/background-blend-mode\r\n       */\n      'bg-blend': [{\n        'bg-blend': scaleBlendMode()\n      }],\n      // ---------------\n      // --- Filters ---\n      // ---------------\n      /**\r\n       * Filter\r\n       * @see https://tailwindcss.com/docs/filter\r\n       */\n      filter: [{\n        filter: [\n        // Deprecated since Tailwind CSS v3.0.0\n        '', 'none', isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\r\n       * Blur\r\n       * @see https://tailwindcss.com/docs/blur\r\n       */\n      blur: [{\n        blur: scaleBlur()\n      }],\n      /**\r\n       * Brightness\r\n       * @see https://tailwindcss.com/docs/brightness\r\n       */\n      brightness: [{\n        brightness: [isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\r\n       * Contrast\r\n       * @see https://tailwindcss.com/docs/contrast\r\n       */\n      contrast: [{\n        contrast: [isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\r\n       * Drop Shadow\r\n       * @see https://tailwindcss.com/docs/drop-shadow\r\n       */\n      'drop-shadow': [{\n        'drop-shadow': [\n        // Deprecated since Tailwind CSS v4.0.0\n        '', 'none', themeDropShadow, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\r\n       * Grayscale\r\n       * @see https://tailwindcss.com/docs/grayscale\r\n       */\n      grayscale: [{\n        grayscale: ['', isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\r\n       * Hue Rotate\r\n       * @see https://tailwindcss.com/docs/hue-rotate\r\n       */\n      'hue-rotate': [{\n        'hue-rotate': [isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\r\n       * Invert\r\n       * @see https://tailwindcss.com/docs/invert\r\n       */\n      invert: [{\n        invert: ['', isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\r\n       * Saturate\r\n       * @see https://tailwindcss.com/docs/saturate\r\n       */\n      saturate: [{\n        saturate: [isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\r\n       * Sepia\r\n       * @see https://tailwindcss.com/docs/sepia\r\n       */\n      sepia: [{\n        sepia: ['', isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\r\n       * Backdrop Filter\r\n       * @see https://tailwindcss.com/docs/backdrop-filter\r\n       */\n      'backdrop-filter': [{\n        'backdrop-filter': [\n        // Deprecated since Tailwind CSS v3.0.0\n        '', 'none', isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\r\n       * Backdrop Blur\r\n       * @see https://tailwindcss.com/docs/backdrop-blur\r\n       */\n      'backdrop-blur': [{\n        'backdrop-blur': scaleBlur()\n      }],\n      /**\r\n       * Backdrop Brightness\r\n       * @see https://tailwindcss.com/docs/backdrop-brightness\r\n       */\n      'backdrop-brightness': [{\n        'backdrop-brightness': [isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\r\n       * Backdrop Contrast\r\n       * @see https://tailwindcss.com/docs/backdrop-contrast\r\n       */\n      'backdrop-contrast': [{\n        'backdrop-contrast': [isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\r\n       * Backdrop Grayscale\r\n       * @see https://tailwindcss.com/docs/backdrop-grayscale\r\n       */\n      'backdrop-grayscale': [{\n        'backdrop-grayscale': ['', isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\r\n       * Backdrop Hue Rotate\r\n       * @see https://tailwindcss.com/docs/backdrop-hue-rotate\r\n       */\n      'backdrop-hue-rotate': [{\n        'backdrop-hue-rotate': [isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\r\n       * Backdrop Invert\r\n       * @see https://tailwindcss.com/docs/backdrop-invert\r\n       */\n      'backdrop-invert': [{\n        'backdrop-invert': ['', isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\r\n       * Backdrop Opacity\r\n       * @see https://tailwindcss.com/docs/backdrop-opacity\r\n       */\n      'backdrop-opacity': [{\n        'backdrop-opacity': [isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\r\n       * Backdrop Saturate\r\n       * @see https://tailwindcss.com/docs/backdrop-saturate\r\n       */\n      'backdrop-saturate': [{\n        'backdrop-saturate': [isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\r\n       * Backdrop Sepia\r\n       * @see https://tailwindcss.com/docs/backdrop-sepia\r\n       */\n      'backdrop-sepia': [{\n        'backdrop-sepia': ['', isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      // --------------\n      // --- Tables ---\n      // --------------\n      /**\r\n       * Border Collapse\r\n       * @see https://tailwindcss.com/docs/border-collapse\r\n       */\n      'border-collapse': [{\n        border: ['collapse', 'separate']\n      }],\n      /**\r\n       * Border Spacing\r\n       * @see https://tailwindcss.com/docs/border-spacing\r\n       */\n      'border-spacing': [{\n        'border-spacing': scaleUnambiguousSpacing()\n      }],\n      /**\r\n       * Border Spacing X\r\n       * @see https://tailwindcss.com/docs/border-spacing\r\n       */\n      'border-spacing-x': [{\n        'border-spacing-x': scaleUnambiguousSpacing()\n      }],\n      /**\r\n       * Border Spacing Y\r\n       * @see https://tailwindcss.com/docs/border-spacing\r\n       */\n      'border-spacing-y': [{\n        'border-spacing-y': scaleUnambiguousSpacing()\n      }],\n      /**\r\n       * Table Layout\r\n       * @see https://tailwindcss.com/docs/table-layout\r\n       */\n      'table-layout': [{\n        table: ['auto', 'fixed']\n      }],\n      /**\r\n       * Caption Side\r\n       * @see https://tailwindcss.com/docs/caption-side\r\n       */\n      caption: [{\n        caption: ['top', 'bottom']\n      }],\n      // ---------------------------------\n      // --- Transitions and Animation ---\n      // ---------------------------------\n      /**\r\n       * Transition Property\r\n       * @see https://tailwindcss.com/docs/transition-property\r\n       */\n      transition: [{\n        transition: ['', 'all', 'colors', 'opacity', 'shadow', 'transform', 'none', isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\r\n       * Transition Behavior\r\n       * @see https://tailwindcss.com/docs/transition-behavior\r\n       */\n      'transition-behavior': [{\n        transition: ['normal', 'discrete']\n      }],\n      /**\r\n       * Transition Duration\r\n       * @see https://tailwindcss.com/docs/transition-duration\r\n       */\n      duration: [{\n        duration: [isNumber, 'initial', isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\r\n       * Transition Timing Function\r\n       * @see https://tailwindcss.com/docs/transition-timing-function\r\n       */\n      ease: [{\n        ease: ['linear', 'initial', themeEase, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\r\n       * Transition Delay\r\n       * @see https://tailwindcss.com/docs/transition-delay\r\n       */\n      delay: [{\n        delay: [isNumber, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\r\n       * Animation\r\n       * @see https://tailwindcss.com/docs/animation\r\n       */\n      animate: [{\n        animate: ['none', themeAnimate, isArbitraryVariable, isArbitraryValue]\n      }],\n      // ------------------\n      // --- Transforms ---\n      // ------------------\n      /**\r\n       * Backface Visibility\r\n       * @see https://tailwindcss.com/docs/backface-visibility\r\n       */\n      backface: [{\n        backface: ['hidden', 'visible']\n      }],\n      /**\r\n       * Perspective\r\n       * @see https://tailwindcss.com/docs/perspective\r\n       */\n      perspective: [{\n        perspective: [themePerspective, isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\r\n       * Perspective Origin\r\n       * @see https://tailwindcss.com/docs/perspective-origin\r\n       */\n      'perspective-origin': [{\n        'perspective-origin': scaleOrigin()\n      }],\n      /**\r\n       * Rotate\r\n       * @see https://tailwindcss.com/docs/rotate\r\n       */\n      rotate: [{\n        rotate: scaleRotate()\n      }],\n      /**\r\n       * Rotate X\r\n       * @see https://tailwindcss.com/docs/rotate\r\n       */\n      'rotate-x': [{\n        'rotate-x': scaleRotate()\n      }],\n      /**\r\n       * Rotate Y\r\n       * @see https://tailwindcss.com/docs/rotate\r\n       */\n      'rotate-y': [{\n        'rotate-y': scaleRotate()\n      }],\n      /**\r\n       * Rotate Z\r\n       * @see https://tailwindcss.com/docs/rotate\r\n       */\n      'rotate-z': [{\n        'rotate-z': scaleRotate()\n      }],\n      /**\r\n       * Scale\r\n       * @see https://tailwindcss.com/docs/scale\r\n       */\n      scale: [{\n        scale: scaleScale()\n      }],\n      /**\r\n       * Scale X\r\n       * @see https://tailwindcss.com/docs/scale\r\n       */\n      'scale-x': [{\n        'scale-x': scaleScale()\n      }],\n      /**\r\n       * Scale Y\r\n       * @see https://tailwindcss.com/docs/scale\r\n       */\n      'scale-y': [{\n        'scale-y': scaleScale()\n      }],\n      /**\r\n       * Scale Z\r\n       * @see https://tailwindcss.com/docs/scale\r\n       */\n      'scale-z': [{\n        'scale-z': scaleScale()\n      }],\n      /**\r\n       * Scale 3D\r\n       * @see https://tailwindcss.com/docs/scale\r\n       */\n      'scale-3d': ['scale-3d'],\n      /**\r\n       * Skew\r\n       * @see https://tailwindcss.com/docs/skew\r\n       */\n      skew: [{\n        skew: scaleSkew()\n      }],\n      /**\r\n       * Skew X\r\n       * @see https://tailwindcss.com/docs/skew\r\n       */\n      'skew-x': [{\n        'skew-x': scaleSkew()\n      }],\n      /**\r\n       * Skew Y\r\n       * @see https://tailwindcss.com/docs/skew\r\n       */\n      'skew-y': [{\n        'skew-y': scaleSkew()\n      }],\n      /**\r\n       * Transform\r\n       * @see https://tailwindcss.com/docs/transform\r\n       */\n      transform: [{\n        transform: [isArbitraryVariable, isArbitraryValue, '', 'none', 'gpu', 'cpu']\n      }],\n      /**\r\n       * Transform Origin\r\n       * @see https://tailwindcss.com/docs/transform-origin\r\n       */\n      'transform-origin': [{\n        origin: scaleOrigin()\n      }],\n      /**\r\n       * Transform Style\r\n       * @see https://tailwindcss.com/docs/transform-style\r\n       */\n      'transform-style': [{\n        transform: ['3d', 'flat']\n      }],\n      /**\r\n       * Translate\r\n       * @see https://tailwindcss.com/docs/translate\r\n       */\n      translate: [{\n        translate: scaleTranslate()\n      }],\n      /**\r\n       * Translate X\r\n       * @see https://tailwindcss.com/docs/translate\r\n       */\n      'translate-x': [{\n        'translate-x': scaleTranslate()\n      }],\n      /**\r\n       * Translate Y\r\n       * @see https://tailwindcss.com/docs/translate\r\n       */\n      'translate-y': [{\n        'translate-y': scaleTranslate()\n      }],\n      /**\r\n       * Translate Z\r\n       * @see https://tailwindcss.com/docs/translate\r\n       */\n      'translate-z': [{\n        'translate-z': scaleTranslate()\n      }],\n      /**\r\n       * Translate None\r\n       * @see https://tailwindcss.com/docs/translate\r\n       */\n      'translate-none': ['translate-none'],\n      // ---------------------\n      // --- Interactivity ---\n      // ---------------------\n      /**\r\n       * Accent Color\r\n       * @see https://tailwindcss.com/docs/accent-color\r\n       */\n      accent: [{\n        accent: scaleColor()\n      }],\n      /**\r\n       * Appearance\r\n       * @see https://tailwindcss.com/docs/appearance\r\n       */\n      appearance: [{\n        appearance: ['none', 'auto']\n      }],\n      /**\r\n       * Caret Color\r\n       * @see https://tailwindcss.com/docs/just-in-time-mode#caret-color-utilities\r\n       */\n      'caret-color': [{\n        caret: scaleColor()\n      }],\n      /**\r\n       * Color Scheme\r\n       * @see https://tailwindcss.com/docs/color-scheme\r\n       */\n      'color-scheme': [{\n        scheme: ['normal', 'dark', 'light', 'light-dark', 'only-dark', 'only-light']\n      }],\n      /**\r\n       * Cursor\r\n       * @see https://tailwindcss.com/docs/cursor\r\n       */\n      cursor: [{\n        cursor: ['auto', 'default', 'pointer', 'wait', 'text', 'move', 'help', 'not-allowed', 'none', 'context-menu', 'progress', 'cell', 'crosshair', 'vertical-text', 'alias', 'copy', 'no-drop', 'grab', 'grabbing', 'all-scroll', 'col-resize', 'row-resize', 'n-resize', 'e-resize', 's-resize', 'w-resize', 'ne-resize', 'nw-resize', 'se-resize', 'sw-resize', 'ew-resize', 'ns-resize', 'nesw-resize', 'nwse-resize', 'zoom-in', 'zoom-out', isArbitraryVariable, isArbitraryValue]\n      }],\n      /**\r\n       * Field Sizing\r\n       * @see https://tailwindcss.com/docs/field-sizing\r\n       */\n      'field-sizing': [{\n        'field-sizing': ['fixed', 'content']\n      }],\n      /**\r\n       * Pointer Events\r\n       * @see https://tailwindcss.com/docs/pointer-events\r\n       */\n      'pointer-events': [{\n        'pointer-events': ['auto', 'none']\n      }],\n      /**\r\n       * Resize\r\n       * @see https://tailwindcss.com/docs/resize\r\n       */\n      resize: [{\n        resize: ['none', '', 'y', 'x']\n      }],\n      /**\r\n       * Scroll Behavior\r\n       * @see https://tailwindcss.com/docs/scroll-behavior\r\n       */\n      'scroll-behavior': [{\n        scroll: ['auto', 'smooth']\n      }],\n      /**\r\n       * Scroll Margin\r\n       * @see https://tailwindcss.com/docs/scroll-margin\r\n       */\n      'scroll-m': [{\n        'scroll-m': scaleUnambiguousSpacing()\n      }],\n      /**\r\n       * Scroll Margin X\r\n       * @see https://tailwindcss.com/docs/scroll-margin\r\n       */\n      'scroll-mx': [{\n        'scroll-mx': scaleUnambiguousSpacing()\n      }],\n      /**\r\n       * Scroll Margin Y\r\n       * @see https://tailwindcss.com/docs/scroll-margin\r\n       */\n      'scroll-my': [{\n        'scroll-my': scaleUnambiguousSpacing()\n      }],\n      /**\r\n       * Scroll Margin Start\r\n       * @see https://tailwindcss.com/docs/scroll-margin\r\n       */\n      'scroll-ms': [{\n        'scroll-ms': scaleUnambiguousSpacing()\n      }],\n      /**\r\n       * Scroll Margin End\r\n       * @see https://tailwindcss.com/docs/scroll-margin\r\n       */\n      'scroll-me': [{\n        'scroll-me': scaleUnambiguousSpacing()\n      }],\n      /**\r\n       * Scroll Margin Top\r\n       * @see https://tailwindcss.com/docs/scroll-margin\r\n       */\n      'scroll-mt': [{\n        'scroll-mt': scaleUnambiguousSpacing()\n      }],\n      /**\r\n       * Scroll Margin Right\r\n       * @see https://tailwindcss.com/docs/scroll-margin\r\n       */\n      'scroll-mr': [{\n        'scroll-mr': scaleUnambiguousSpacing()\n      }],\n      /**\r\n       * Scroll Margin Bottom\r\n       * @see https://tailwindcss.com/docs/scroll-margin\r\n       */\n      'scroll-mb': [{\n        'scroll-mb': scaleUnambiguousSpacing()\n      }],\n      /**\r\n       * Scroll Margin Left\r\n       * @see https://tailwindcss.com/docs/scroll-margin\r\n       */\n      'scroll-ml': [{\n        'scroll-ml': scaleUnambiguousSpacing()\n      }],\n      /**\r\n       * Scroll Padding\r\n       * @see https://tailwindcss.com/docs/scroll-padding\r\n       */\n      'scroll-p': [{\n        'scroll-p': scaleUnambiguousSpacing()\n      }],\n      /**\r\n       * Scroll Padding X\r\n       * @see https://tailwindcss.com/docs/scroll-padding\r\n       */\n      'scroll-px': [{\n        'scroll-px': scaleUnambiguousSpacing()\n      }],\n      /**\r\n       * Scroll Padding Y\r\n       * @see https://tailwindcss.com/docs/scroll-padding\r\n       */\n      'scroll-py': [{\n        'scroll-py': scaleUnambiguousSpacing()\n      }],\n      /**\r\n       * Scroll Padding Start\r\n       * @see https://tailwindcss.com/docs/scroll-padding\r\n       */\n      'scroll-ps': [{\n        'scroll-ps': scaleUnambiguousSpacing()\n      }],\n      /**\r\n       * Scroll Padding End\r\n       * @see https://tailwindcss.com/docs/scroll-padding\r\n       */\n      'scroll-pe': [{\n        'scroll-pe': scaleUnambiguousSpacing()\n      }],\n      /**\r\n       * Scroll Padding Top\r\n       * @see https://tailwindcss.com/docs/scroll-padding\r\n       */\n      'scroll-pt': [{\n        'scroll-pt': scaleUnambiguousSpacing()\n      }],\n      /**\r\n       * Scroll Padding Right\r\n       * @see https://tailwindcss.com/docs/scroll-padding\r\n       */\n      'scroll-pr': [{\n        'scroll-pr': scaleUnambiguousSpacing()\n      }],\n      /**\r\n       * Scroll Padding Bottom\r\n       * @see https://tailwindcss.com/docs/scroll-padding\r\n       */\n      'scroll-pb': [{\n        'scroll-pb': scaleUnambiguousSpacing()\n      }],\n      /**\r\n       * Scroll Padding Left\r\n       * @see https://tailwindcss.com/docs/scroll-padding\r\n       */\n      'scroll-pl': [{\n        'scroll-pl': scaleUnambiguousSpacing()\n      }],\n      /**\r\n       * Scroll Snap Align\r\n       * @see https://tailwindcss.com/docs/scroll-snap-align\r\n       */\n      'snap-align': [{\n        snap: ['start', 'end', 'center', 'align-none']\n      }],\n      /**\r\n       * Scroll Snap Stop\r\n       * @see https://tailwindcss.com/docs/scroll-snap-stop\r\n       */\n      'snap-stop': [{\n        snap: ['normal', 'always']\n      }],\n      /**\r\n       * Scroll Snap Type\r\n       * @see https://tailwindcss.com/docs/scroll-snap-type\r\n       */\n      'snap-type': [{\n        snap: ['none', 'x', 'y', 'both']\n      }],\n      /**\r\n       * Scroll Snap Type Strictness\r\n       * @see https://tailwindcss.com/docs/scroll-snap-type\r\n       */\n      'snap-strictness': [{\n        snap: ['mandatory', 'proximity']\n      }],\n      /**\r\n       * Touch Action\r\n       * @see https://tailwindcss.com/docs/touch-action\r\n       */\n      touch: [{\n        touch: ['auto', 'none', 'manipulation']\n      }],\n      /**\r\n       * Touch Action X\r\n       * @see https://tailwindcss.com/docs/touch-action\r\n       */\n      'touch-x': [{\n        'touch-pan': ['x', 'left', 'right']\n      }],\n      /**\r\n       * Touch Action Y\r\n       * @see https://tailwindcss.com/docs/touch-action\r\n       */\n      'touch-y': [{\n        'touch-pan': ['y', 'up', 'down']\n      }],\n      /**\r\n       * Touch Action Pinch Zoom\r\n       * @see https://tailwindcss.com/docs/touch-action\r\n       */\n      'touch-pz': ['touch-pinch-zoom'],\n      /**\r\n       * User Select\r\n       * @see https://tailwindcss.com/docs/user-select\r\n       */\n      select: [{\n        select: ['none', 'text', 'all', 'auto']\n      }],\n      /**\r\n       * Will Change\r\n       * @see https://tailwindcss.com/docs/will-change\r\n       */\n      'will-change': [{\n        'will-change': ['auto', 'scroll', 'contents', 'transform', isArbitraryVariable, isArbitraryValue]\n      }],\n      // -----------\n      // --- SVG ---\n      // -----------\n      /**\r\n       * Fill\r\n       * @see https://tailwindcss.com/docs/fill\r\n       */\n      fill: [{\n        fill: ['none', ...scaleColor()]\n      }],\n      /**\r\n       * Stroke Width\r\n       * @see https://tailwindcss.com/docs/stroke-width\r\n       */\n      'stroke-w': [{\n        stroke: [isNumber, isArbitraryVariableLength, isArbitraryLength, isArbitraryNumber]\n      }],\n      /**\r\n       * Stroke\r\n       * @see https://tailwindcss.com/docs/stroke\r\n       */\n      stroke: [{\n        stroke: ['none', ...scaleColor()]\n      }],\n      // ---------------------\n      // --- Accessibility ---\n      // ---------------------\n      /**\r\n       * Forced Color Adjust\r\n       * @see https://tailwindcss.com/docs/forced-color-adjust\r\n       */\n      'forced-color-adjust': [{\n        'forced-color-adjust': ['auto', 'none']\n      }]\n    },\n    conflictingClassGroups: {\n      overflow: ['overflow-x', 'overflow-y'],\n      overscroll: ['overscroll-x', 'overscroll-y'],\n      inset: ['inset-x', 'inset-y', 'start', 'end', 'top', 'right', 'bottom', 'left'],\n      'inset-x': ['right', 'left'],\n      'inset-y': ['top', 'bottom'],\n      flex: ['basis', 'grow', 'shrink'],\n      gap: ['gap-x', 'gap-y'],\n      p: ['px', 'py', 'ps', 'pe', 'pt', 'pr', 'pb', 'pl'],\n      px: ['pr', 'pl'],\n      py: ['pt', 'pb'],\n      m: ['mx', 'my', 'ms', 'me', 'mt', 'mr', 'mb', 'ml'],\n      mx: ['mr', 'ml'],\n      my: ['mt', 'mb'],\n      size: ['w', 'h'],\n      'font-size': ['leading'],\n      'fvn-normal': ['fvn-ordinal', 'fvn-slashed-zero', 'fvn-figure', 'fvn-spacing', 'fvn-fraction'],\n      'fvn-ordinal': ['fvn-normal'],\n      'fvn-slashed-zero': ['fvn-normal'],\n      'fvn-figure': ['fvn-normal'],\n      'fvn-spacing': ['fvn-normal'],\n      'fvn-fraction': ['fvn-normal'],\n      'line-clamp': ['display', 'overflow'],\n      rounded: ['rounded-s', 'rounded-e', 'rounded-t', 'rounded-r', 'rounded-b', 'rounded-l', 'rounded-ss', 'rounded-se', 'rounded-ee', 'rounded-es', 'rounded-tl', 'rounded-tr', 'rounded-br', 'rounded-bl'],\n      'rounded-s': ['rounded-ss', 'rounded-es'],\n      'rounded-e': ['rounded-se', 'rounded-ee'],\n      'rounded-t': ['rounded-tl', 'rounded-tr'],\n      'rounded-r': ['rounded-tr', 'rounded-br'],\n      'rounded-b': ['rounded-br', 'rounded-bl'],\n      'rounded-l': ['rounded-tl', 'rounded-bl'],\n      'border-spacing': ['border-spacing-x', 'border-spacing-y'],\n      'border-w': ['border-w-s', 'border-w-e', 'border-w-t', 'border-w-r', 'border-w-b', 'border-w-l'],\n      'border-w-x': ['border-w-r', 'border-w-l'],\n      'border-w-y': ['border-w-t', 'border-w-b'],\n      'border-color': ['border-color-s', 'border-color-e', 'border-color-t', 'border-color-r', 'border-color-b', 'border-color-l'],\n      'border-color-x': ['border-color-r', 'border-color-l'],\n      'border-color-y': ['border-color-t', 'border-color-b'],\n      translate: ['translate-x', 'translate-y', 'translate-none'],\n      'translate-none': ['translate', 'translate-x', 'translate-y', 'translate-z'],\n      'scroll-m': ['scroll-mx', 'scroll-my', 'scroll-ms', 'scroll-me', 'scroll-mt', 'scroll-mr', 'scroll-mb', 'scroll-ml'],\n      'scroll-mx': ['scroll-mr', 'scroll-ml'],\n      'scroll-my': ['scroll-mt', 'scroll-mb'],\n      'scroll-p': ['scroll-px', 'scroll-py', 'scroll-ps', 'scroll-pe', 'scroll-pt', 'scroll-pr', 'scroll-pb', 'scroll-pl'],\n      'scroll-px': ['scroll-pr', 'scroll-pl'],\n      'scroll-py': ['scroll-pt', 'scroll-pb'],\n      touch: ['touch-x', 'touch-y', 'touch-pz'],\n      'touch-x': ['touch'],\n      'touch-y': ['touch'],\n      'touch-pz': ['touch']\n    },\n    conflictingClassGroupModifiers: {\n      'font-size': ['leading']\n    },\n    orderSensitiveModifiers: ['before', 'after', 'placeholder', 'file', 'marker', 'selection', 'first-line', 'first-letter', 'backdrop', '*', '**']\n  };\n};\n\n/**\r\n * @param baseConfig Config where other config will be merged into. This object will be mutated.\r\n * @param configExtension Partial config to merge into the `baseConfig`.\r\n */\nconst mergeConfigs = (baseConfig, {\n  cacheSize,\n  prefix,\n  experimentalParseClassName,\n  extend = {},\n  override = {}\n}) => {\n  overrideProperty(baseConfig, 'cacheSize', cacheSize);\n  overrideProperty(baseConfig, 'prefix', prefix);\n  overrideProperty(baseConfig, 'experimentalParseClassName', experimentalParseClassName);\n  overrideConfigProperties(baseConfig.theme, override.theme);\n  overrideConfigProperties(baseConfig.classGroups, override.classGroups);\n  overrideConfigProperties(baseConfig.conflictingClassGroups, override.conflictingClassGroups);\n  overrideConfigProperties(baseConfig.conflictingClassGroupModifiers, override.conflictingClassGroupModifiers);\n  overrideProperty(baseConfig, 'orderSensitiveModifiers', override.orderSensitiveModifiers);\n  mergeConfigProperties(baseConfig.theme, extend.theme);\n  mergeConfigProperties(baseConfig.classGroups, extend.classGroups);\n  mergeConfigProperties(baseConfig.conflictingClassGroups, extend.conflictingClassGroups);\n  mergeConfigProperties(baseConfig.conflictingClassGroupModifiers, extend.conflictingClassGroupModifiers);\n  mergeArrayProperties(baseConfig, extend, 'orderSensitiveModifiers');\n  return baseConfig;\n};\nconst overrideProperty = (baseObject, overrideKey, overrideValue) => {\n  if (overrideValue !== undefined) {\n    baseObject[overrideKey] = overrideValue;\n  }\n};\nconst overrideConfigProperties = (baseObject, overrideObject) => {\n  if (overrideObject) {\n    for (const key in overrideObject) {\n      overrideProperty(baseObject, key, overrideObject[key]);\n    }\n  }\n};\nconst mergeConfigProperties = (baseObject, mergeObject) => {\n  if (mergeObject) {\n    for (const key in mergeObject) {\n      mergeArrayProperties(baseObject, mergeObject, key);\n    }\n  }\n};\nconst mergeArrayProperties = (baseObject, mergeObject, key) => {\n  const mergeValue = mergeObject[key];\n  if (mergeValue !== undefined) {\n    baseObject[key] = baseObject[key] ? baseObject[key].concat(mergeValue) : mergeValue;\n  }\n};\nconst extendTailwindMerge = (configExtension, ...createConfig) => typeof configExtension === 'function' ? createTailwindMerge(getDefaultConfig, configExtension, ...createConfig) : createTailwindMerge(() => mergeConfigs(getDefaultConfig(), configExtension), ...createConfig);\nconst twMerge = /*#__PURE__*/createTailwindMerge(getDefaultConfig);\nexport { createTailwindMerge, extendTailwindMerge, fromTheme, getDefaultConfig, mergeConfigs, twJoin, twMerge, validators };","map":{"version":3,"names":["CLASS_PART_SEPARATOR","createClassGroupUtils","config","classMap","createClassMap","conflictingClassGroups","conflictingClassGroupModifiers","getClassGroupId","className","classParts","split","length","shift","getGroupRecursive","getGroupIdForArbitraryProperty","getConflictingClassGroupIds","classGroupId","hasPostfixModifier","conflicts","classPartObject","currentClassPart","nextClassPartObject","nextPart","get","classGroupFromNextClassPart","slice","undefined","validators","classRest","join","find","validator","arbitraryPropertyRegex","test","arbitraryPropertyClassName","exec","property","substring","indexOf","theme","classGroups","Map","processClassesRecursively","classGroup","forEach","classDefinition","classPartObjectToEdit","getPart","isThemeGetter","push","Object","entries","key","path","currentClassPartObject","pathPart","has","set","func","createLruCache","maxCacheSize","cacheSize","cache","previousCache","update","value","IMPORTANT_MODIFIER","MODIFIER_SEPARATOR","MODIFIER_SEPARATOR_LENGTH","createParseClassName","prefix","experimentalParseClassName","parseClassName","modifiers","bracketDepth","parenDepth","modifierStart","postfixModifierPosition","index","currentCharacter","baseClassNameWithImportantModifier","baseClassName","stripImportantModifier","hasImportantModifier","maybePostfixModifierPosition","fullPrefix","parseClassNameOriginal","startsWith","isExternal","endsWith","createSortModifiers","orderSensitiveModifiers","fromEntries","map","modifier","sortModifiers","sortedModifiers","unsortedModifiers","isPositionSensitive","sort","createConfigUtils","SPLIT_CLASSES_REGEX","mergeClassList","classList","configUtils","classGroupsInConflict","classNames","trim","result","originalClassName","variantModifier","modifierId","classId","includes","conflictGroups","i","group","twJoin","argument","resolvedValue","string","arguments","toValue","mix","k","createTailwindMerge","createConfigFirst","createConfigRest","cacheGet","cacheSet","functionToCall","initTailwindMerge","reduce","previousConfig","createConfigCurrent","tailwindMerge","cachedResult","callTailwindMerge","apply","fromTheme","themeGetter","arbitraryValueRegex","arbitraryVariableRegex","fractionRegex","tshirtUnitRegex","lengthUnitRegex","colorFunctionRegex","shadowRegex","imageRegex","isFraction","isNumber","Boolean","Number","isNaN","isInteger","isPercent","isTshirtSize","isAny","isLengthOnly","isNever","isShadow","isImage","isAnyNonArbitrary","isArbitraryValue","isArbitraryVariable","isArbitrarySize","getIsArbitraryValue","isLabelSize","isArbitraryLength","isLabelLength","isArbitraryNumber","isLabelNumber","isArbitraryPosition","isLabelPosition","isArbitraryImage","isLabelImage","isArbitraryShadow","isArbitraryVariableLength","getIsArbitraryVariable","isArbitraryVariableFamilyName","isLabelFamilyName","isArbitraryVariablePosition","isArbitraryVariableSize","isArbitraryVariableImage","isArbitraryVariableShadow","isLabelShadow","testLabel","testValue","shouldMatchNoLabel","label","imageLabels","Set","sizeLabels","getDefaultConfig","themeColor","themeFont","themeText","themeFontWeight","themeTracking","themeLeading","themeBreakpoint","themeContainer","themeSpacing","themeRadius","themeShadow","themeInsetShadow","themeDropShadow","themeBlur","themePerspective","themeAspect","themeEase","themeAnimate","scaleBreak","scalePosition","scaleOverflow","scaleOverscroll","scaleUnambiguousSpacing","scaleInset","scaleGridTemplateColsRows","scaleGridColRowStartAndEnd","span","scaleGridColRowStartOrEnd","scaleGridAutoColsRows","scaleAlignPrimaryAxis","scaleAlignSecondaryAxis","scaleMargin","scaleSizing","scaleColor","scaleGradientStopPosition","scaleRadius","scaleBorderWidth","scaleLineStyle","scaleBlendMode","scaleBlur","scaleOrigin","scaleRotate","scaleScale","scaleSkew","scaleTranslate","animate","aspect","blur","breakpoint","color","container","ease","font","leading","perspective","radius","shadow","spacing","text","tracking","columns","box","display","sr","float","clear","isolation","object","overflow","overscroll","position","inset","start","end","top","right","bottom","left","visibility","z","basis","flex","grow","shrink","order","col","row","gap","justify","content","items","self","p","px","py","ps","pe","pt","pr","pb","pl","m","mx","my","ms","me","mt","mr","mb","ml","size","w","screen","h","list","placeholder","decoration","indent","align","whitespace","break","hyphens","bg","repeat","linear","to","radial","conic","from","via","rounded","border","divide","outline","ring","opacity","filter","brightness","contrast","grayscale","invert","saturate","sepia","table","caption","transition","duration","delay","backface","rotate","scale","skew","transform","origin","translate","accent","appearance","caret","scheme","cursor","resize","scroll","snap","touch","select","fill","stroke","mergeConfigs","baseConfig","extend","override","overrideProperty","overrideConfigProperties","mergeConfigProperties","mergeArrayProperties","baseObject","overrideKey","overrideValue","overrideObject","mergeObject","mergeValue","concat","extendTailwindMerge","configExtension","createConfig","twMerge"],"sources":["C:\\Users\\IVSDL0025_User.DESKTOP-9PRIBN3\\Desktop\\PROJECTS\\fun_projects\\voice-enabled-virtual-assistant\\voice-assistant\\node_modules\\tailwind-merge\\src\\lib\\class-group-utils.ts","C:\\Users\\IVSDL0025_User.DESKTOP-9PRIBN3\\Desktop\\PROJECTS\\fun_projects\\voice-enabled-virtual-assistant\\voice-assistant\\node_modules\\tailwind-merge\\src\\lib\\lru-cache.ts","C:\\Users\\IVSDL0025_User.DESKTOP-9PRIBN3\\Desktop\\PROJECTS\\fun_projects\\voice-enabled-virtual-assistant\\voice-assistant\\node_modules\\tailwind-merge\\src\\lib\\parse-class-name.ts","C:\\Users\\IVSDL0025_User.DESKTOP-9PRIBN3\\Desktop\\PROJECTS\\fun_projects\\voice-enabled-virtual-assistant\\voice-assistant\\node_modules\\tailwind-merge\\src\\lib\\sort-modifiers.ts","C:\\Users\\IVSDL0025_User.DESKTOP-9PRIBN3\\Desktop\\PROJECTS\\fun_projects\\voice-enabled-virtual-assistant\\voice-assistant\\node_modules\\tailwind-merge\\src\\lib\\config-utils.ts","C:\\Users\\IVSDL0025_User.DESKTOP-9PRIBN3\\Desktop\\PROJECTS\\fun_projects\\voice-enabled-virtual-assistant\\voice-assistant\\node_modules\\tailwind-merge\\src\\lib\\merge-classlist.ts","C:\\Users\\IVSDL0025_User.DESKTOP-9PRIBN3\\Desktop\\PROJECTS\\fun_projects\\voice-enabled-virtual-assistant\\voice-assistant\\node_modules\\tailwind-merge\\src\\lib\\tw-join.ts","C:\\Users\\IVSDL0025_User.DESKTOP-9PRIBN3\\Desktop\\PROJECTS\\fun_projects\\voice-enabled-virtual-assistant\\voice-assistant\\node_modules\\tailwind-merge\\src\\lib\\create-tailwind-merge.ts","C:\\Users\\IVSDL0025_User.DESKTOP-9PRIBN3\\Desktop\\PROJECTS\\fun_projects\\voice-enabled-virtual-assistant\\voice-assistant\\node_modules\\tailwind-merge\\src\\lib\\from-theme.ts","C:\\Users\\IVSDL0025_User.DESKTOP-9PRIBN3\\Desktop\\PROJECTS\\fun_projects\\voice-enabled-virtual-assistant\\voice-assistant\\node_modules\\tailwind-merge\\src\\lib\\validators.ts","C:\\Users\\IVSDL0025_User.DESKTOP-9PRIBN3\\Desktop\\PROJECTS\\fun_projects\\voice-enabled-virtual-assistant\\voice-assistant\\node_modules\\tailwind-merge\\src\\lib\\default-config.ts","C:\\Users\\IVSDL0025_User.DESKTOP-9PRIBN3\\Desktop\\PROJECTS\\fun_projects\\voice-enabled-virtual-assistant\\voice-assistant\\node_modules\\tailwind-merge\\src\\lib\\merge-configs.ts","C:\\Users\\IVSDL0025_User.DESKTOP-9PRIBN3\\Desktop\\PROJECTS\\fun_projects\\voice-enabled-virtual-assistant\\voice-assistant\\node_modules\\tailwind-merge\\src\\lib\\extend-tailwind-merge.ts","C:\\Users\\IVSDL0025_User.DESKTOP-9PRIBN3\\Desktop\\PROJECTS\\fun_projects\\voice-enabled-virtual-assistant\\voice-assistant\\node_modules\\tailwind-merge\\src\\lib\\tw-merge.ts"],"sourcesContent":["import {\r\n    AnyClassGroupIds,\r\n    AnyConfig,\r\n    AnyThemeGroupIds,\r\n    ClassGroup,\r\n    ClassValidator,\r\n    Config,\r\n    ThemeGetter,\r\n    ThemeObject,\r\n} from './types'\r\n\r\nexport interface ClassPartObject {\r\n    nextPart: Map<string, ClassPartObject>\r\n    validators: ClassValidatorObject[]\r\n    classGroupId?: AnyClassGroupIds\r\n}\r\n\r\ninterface ClassValidatorObject {\r\n    classGroupId: AnyClassGroupIds\r\n    validator: ClassValidator\r\n}\r\n\r\nconst CLASS_PART_SEPARATOR = '-'\r\n\r\nexport const createClassGroupUtils = (config: AnyConfig) => {\r\n    const classMap = createClassMap(config)\r\n    const { conflictingClassGroups, conflictingClassGroupModifiers } = config\r\n\r\n    const getClassGroupId = (className: string) => {\r\n        const classParts = className.split(CLASS_PART_SEPARATOR)\r\n\r\n        // Classes like `-inset-1` produce an empty string as first classPart. We assume that classes for negative values are used correctly and remove it from classParts.\r\n        if (classParts[0] === '' && classParts.length !== 1) {\r\n            classParts.shift()\r\n        }\r\n\r\n        return getGroupRecursive(classParts, classMap) || getGroupIdForArbitraryProperty(className)\r\n    }\r\n\r\n    const getConflictingClassGroupIds = (\r\n        classGroupId: AnyClassGroupIds,\r\n        hasPostfixModifier: boolean,\r\n    ) => {\r\n        const conflicts = conflictingClassGroups[classGroupId] || []\r\n\r\n        if (hasPostfixModifier && conflictingClassGroupModifiers[classGroupId]) {\r\n            return [...conflicts, ...conflictingClassGroupModifiers[classGroupId]!]\r\n        }\r\n\r\n        return conflicts\r\n    }\r\n\r\n    return {\r\n        getClassGroupId,\r\n        getConflictingClassGroupIds,\r\n    }\r\n}\r\n\r\nconst getGroupRecursive = (\r\n    classParts: string[],\r\n    classPartObject: ClassPartObject,\r\n): AnyClassGroupIds | undefined => {\r\n    if (classParts.length === 0) {\r\n        return classPartObject.classGroupId\r\n    }\r\n\r\n    const currentClassPart = classParts[0]!\r\n    const nextClassPartObject = classPartObject.nextPart.get(currentClassPart)\r\n    const classGroupFromNextClassPart = nextClassPartObject\r\n        ? getGroupRecursive(classParts.slice(1), nextClassPartObject)\r\n        : undefined\r\n\r\n    if (classGroupFromNextClassPart) {\r\n        return classGroupFromNextClassPart\r\n    }\r\n\r\n    if (classPartObject.validators.length === 0) {\r\n        return undefined\r\n    }\r\n\r\n    const classRest = classParts.join(CLASS_PART_SEPARATOR)\r\n\r\n    return classPartObject.validators.find(({ validator }) => validator(classRest))?.classGroupId\r\n}\r\n\r\nconst arbitraryPropertyRegex = /^\\[(.+)\\]$/\r\n\r\nconst getGroupIdForArbitraryProperty = (className: string) => {\r\n    if (arbitraryPropertyRegex.test(className)) {\r\n        const arbitraryPropertyClassName = arbitraryPropertyRegex.exec(className)![1]\r\n        const property = arbitraryPropertyClassName?.substring(\r\n            0,\r\n            arbitraryPropertyClassName.indexOf(':'),\r\n        )\r\n\r\n        if (property) {\r\n            // I use two dots here because one dot is used as prefix for class groups in plugins\r\n            return 'arbitrary..' + property\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Exported for testing only\r\n */\r\nexport const createClassMap = (config: Config<AnyClassGroupIds, AnyThemeGroupIds>) => {\r\n    const { theme, classGroups } = config\r\n    const classMap: ClassPartObject = {\r\n        nextPart: new Map<string, ClassPartObject>(),\r\n        validators: [],\r\n    }\r\n\r\n    for (const classGroupId in classGroups) {\r\n        processClassesRecursively(classGroups[classGroupId]!, classMap, classGroupId, theme)\r\n    }\r\n\r\n    return classMap\r\n}\r\n\r\nconst processClassesRecursively = (\r\n    classGroup: ClassGroup<AnyThemeGroupIds>,\r\n    classPartObject: ClassPartObject,\r\n    classGroupId: AnyClassGroupIds,\r\n    theme: ThemeObject<AnyThemeGroupIds>,\r\n) => {\r\n    classGroup.forEach((classDefinition) => {\r\n        if (typeof classDefinition === 'string') {\r\n            const classPartObjectToEdit =\r\n                classDefinition === '' ? classPartObject : getPart(classPartObject, classDefinition)\r\n            classPartObjectToEdit.classGroupId = classGroupId\r\n            return\r\n        }\r\n\r\n        if (typeof classDefinition === 'function') {\r\n            if (isThemeGetter(classDefinition)) {\r\n                processClassesRecursively(\r\n                    classDefinition(theme),\r\n                    classPartObject,\r\n                    classGroupId,\r\n                    theme,\r\n                )\r\n                return\r\n            }\r\n\r\n            classPartObject.validators.push({\r\n                validator: classDefinition,\r\n                classGroupId,\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        Object.entries(classDefinition).forEach(([key, classGroup]) => {\r\n            processClassesRecursively(\r\n                classGroup,\r\n                getPart(classPartObject, key),\r\n                classGroupId,\r\n                theme,\r\n            )\r\n        })\r\n    })\r\n}\r\n\r\nconst getPart = (classPartObject: ClassPartObject, path: string) => {\r\n    let currentClassPartObject = classPartObject\r\n\r\n    path.split(CLASS_PART_SEPARATOR).forEach((pathPart) => {\r\n        if (!currentClassPartObject.nextPart.has(pathPart)) {\r\n            currentClassPartObject.nextPart.set(pathPart, {\r\n                nextPart: new Map(),\r\n                validators: [],\r\n            })\r\n        }\r\n\r\n        currentClassPartObject = currentClassPartObject.nextPart.get(pathPart)!\r\n    })\r\n\r\n    return currentClassPartObject\r\n}\r\n\r\nconst isThemeGetter = (func: ClassValidator | ThemeGetter): func is ThemeGetter =>\r\n    (func as ThemeGetter).isThemeGetter\r\n","// Export is needed because TypeScript complains about an error otherwise:\r\n// Error: …/tailwind-merge/src/config-utils.ts(8,17): semantic error TS4058: Return type of exported function has or is using name 'LruCache' from external module \"…/tailwind-merge/src/lru-cache\" but cannot be named.\r\nexport interface LruCache<Key, Value> {\r\n    get(key: Key): Value | undefined\r\n    set(key: Key, value: Value): void\r\n}\r\n\r\n// LRU cache inspired from hashlru (https://github.com/dominictarr/hashlru/blob/v1.0.4/index.js) but object replaced with Map to improve performance\r\nexport const createLruCache = <Key, Value>(maxCacheSize: number): LruCache<Key, Value> => {\r\n    if (maxCacheSize < 1) {\r\n        return {\r\n            get: () => undefined,\r\n            set: () => {},\r\n        }\r\n    }\r\n\r\n    let cacheSize = 0\r\n    let cache = new Map<Key, Value>()\r\n    let previousCache = new Map<Key, Value>()\r\n\r\n    const update = (key: Key, value: Value) => {\r\n        cache.set(key, value)\r\n        cacheSize++\r\n\r\n        if (cacheSize > maxCacheSize) {\r\n            cacheSize = 0\r\n            previousCache = cache\r\n            cache = new Map()\r\n        }\r\n    }\r\n\r\n    return {\r\n        get(key) {\r\n            let value = cache.get(key)\r\n\r\n            if (value !== undefined) {\r\n                return value\r\n            }\r\n            if ((value = previousCache.get(key)) !== undefined) {\r\n                update(key, value)\r\n                return value\r\n            }\r\n        },\r\n        set(key, value) {\r\n            if (cache.has(key)) {\r\n                cache.set(key, value)\r\n            } else {\r\n                update(key, value)\r\n            }\r\n        },\r\n    }\r\n}\r\n","import { AnyConfig, ParsedClassName } from './types'\r\n\r\nexport const IMPORTANT_MODIFIER = '!'\r\nconst MODIFIER_SEPARATOR = ':'\r\nconst MODIFIER_SEPARATOR_LENGTH = MODIFIER_SEPARATOR.length\r\n\r\nexport const createParseClassName = (config: AnyConfig) => {\r\n    const { prefix, experimentalParseClassName } = config\r\n\r\n    /**\r\n     * Parse class name into parts.\r\n     *\r\n     * Inspired by `splitAtTopLevelOnly` used in Tailwind CSS\r\n     * @see https://github.com/tailwindlabs/tailwindcss/blob/v3.2.2/src/util/splitAtTopLevelOnly.js\r\n     */\r\n    let parseClassName = (className: string): ParsedClassName => {\r\n        const modifiers = []\r\n\r\n        let bracketDepth = 0\r\n        let parenDepth = 0\r\n        let modifierStart = 0\r\n        let postfixModifierPosition: number | undefined\r\n\r\n        for (let index = 0; index < className.length; index++) {\r\n            let currentCharacter = className[index]\r\n\r\n            if (bracketDepth === 0 && parenDepth === 0) {\r\n                if (currentCharacter === MODIFIER_SEPARATOR) {\r\n                    modifiers.push(className.slice(modifierStart, index))\r\n                    modifierStart = index + MODIFIER_SEPARATOR_LENGTH\r\n                    continue\r\n                }\r\n\r\n                if (currentCharacter === '/') {\r\n                    postfixModifierPosition = index\r\n                    continue\r\n                }\r\n            }\r\n\r\n            if (currentCharacter === '[') {\r\n                bracketDepth++\r\n            } else if (currentCharacter === ']') {\r\n                bracketDepth--\r\n            } else if (currentCharacter === '(') {\r\n                parenDepth++\r\n            } else if (currentCharacter === ')') {\r\n                parenDepth--\r\n            }\r\n        }\r\n\r\n        const baseClassNameWithImportantModifier =\r\n            modifiers.length === 0 ? className : className.substring(modifierStart)\r\n        const baseClassName = stripImportantModifier(baseClassNameWithImportantModifier)\r\n        const hasImportantModifier = baseClassName !== baseClassNameWithImportantModifier\r\n        const maybePostfixModifierPosition =\r\n            postfixModifierPosition && postfixModifierPosition > modifierStart\r\n                ? postfixModifierPosition - modifierStart\r\n                : undefined\r\n\r\n        return {\r\n            modifiers,\r\n            hasImportantModifier,\r\n            baseClassName,\r\n            maybePostfixModifierPosition,\r\n        }\r\n    }\r\n\r\n    if (prefix) {\r\n        const fullPrefix = prefix + MODIFIER_SEPARATOR\r\n        const parseClassNameOriginal = parseClassName\r\n        parseClassName = (className) =>\r\n            className.startsWith(fullPrefix)\r\n                ? parseClassNameOriginal(className.substring(fullPrefix.length))\r\n                : {\r\n                      isExternal: true,\r\n                      modifiers: [],\r\n                      hasImportantModifier: false,\r\n                      baseClassName: className,\r\n                      maybePostfixModifierPosition: undefined,\r\n                  }\r\n    }\r\n\r\n    if (experimentalParseClassName) {\r\n        const parseClassNameOriginal = parseClassName\r\n        parseClassName = (className) =>\r\n            experimentalParseClassName({ className, parseClassName: parseClassNameOriginal })\r\n    }\r\n\r\n    return parseClassName\r\n}\r\n\r\nconst stripImportantModifier = (baseClassName: string) => {\r\n    if (baseClassName.endsWith(IMPORTANT_MODIFIER)) {\r\n        return baseClassName.substring(0, baseClassName.length - 1)\r\n    }\r\n\r\n    /**\r\n     * In Tailwind CSS v3 the important modifier was at the start of the base class name. This is still supported for legacy reasons.\r\n     * @see https://github.com/dcastil/tailwind-merge/issues/513#issuecomment-2614029864\r\n     */\r\n    if (baseClassName.startsWith(IMPORTANT_MODIFIER)) {\r\n        return baseClassName.substring(1)\r\n    }\r\n\r\n    return baseClassName\r\n}\r\n","import { AnyConfig } from './types'\r\n\r\n/**\r\n * Sorts modifiers according to following schema:\r\n * - Predefined modifiers are sorted alphabetically\r\n * - When an arbitrary variant appears, it must be preserved which modifiers are before and after it\r\n */\r\nexport const createSortModifiers = (config: AnyConfig) => {\r\n    const orderSensitiveModifiers = Object.fromEntries(\r\n        config.orderSensitiveModifiers.map((modifier) => [modifier, true]),\r\n    )\r\n\r\n    const sortModifiers = (modifiers: string[]) => {\r\n        if (modifiers.length <= 1) {\r\n            return modifiers\r\n        }\r\n\r\n        const sortedModifiers: string[] = []\r\n        let unsortedModifiers: string[] = []\r\n\r\n        modifiers.forEach((modifier) => {\r\n            const isPositionSensitive = modifier[0] === '[' || orderSensitiveModifiers[modifier]\r\n\r\n            if (isPositionSensitive) {\r\n                sortedModifiers.push(...unsortedModifiers.sort(), modifier)\r\n                unsortedModifiers = []\r\n            } else {\r\n                unsortedModifiers.push(modifier)\r\n            }\r\n        })\r\n\r\n        sortedModifiers.push(...unsortedModifiers.sort())\r\n\r\n        return sortedModifiers\r\n    }\r\n\r\n    return sortModifiers\r\n}\r\n","import { createClassGroupUtils } from './class-group-utils'\r\nimport { createLruCache } from './lru-cache'\r\nimport { createParseClassName } from './parse-class-name'\r\nimport { createSortModifiers } from './sort-modifiers'\r\nimport { AnyConfig } from './types'\r\n\r\nexport type ConfigUtils = ReturnType<typeof createConfigUtils>\r\n\r\nexport const createConfigUtils = (config: AnyConfig) => ({\r\n    cache: createLruCache<string, string>(config.cacheSize),\r\n    parseClassName: createParseClassName(config),\r\n    sortModifiers: createSortModifiers(config),\r\n    ...createClassGroupUtils(config),\r\n})\r\n","import { ConfigUtils } from './config-utils'\r\nimport { IMPORTANT_MODIFIER } from './parse-class-name'\r\n\r\nconst SPLIT_CLASSES_REGEX = /\\s+/\r\n\r\nexport const mergeClassList = (classList: string, configUtils: ConfigUtils) => {\r\n    const { parseClassName, getClassGroupId, getConflictingClassGroupIds, sortModifiers } =\r\n        configUtils\r\n\r\n    /**\r\n     * Set of classGroupIds in following format:\r\n     * `{importantModifier}{variantModifiers}{classGroupId}`\r\n     * @example 'float'\r\n     * @example 'hover:focus:bg-color'\r\n     * @example 'md:!pr'\r\n     */\r\n    const classGroupsInConflict: string[] = []\r\n    const classNames = classList.trim().split(SPLIT_CLASSES_REGEX)\r\n\r\n    let result = ''\r\n\r\n    for (let index = classNames.length - 1; index >= 0; index -= 1) {\r\n        const originalClassName = classNames[index]!\r\n\r\n        const {\r\n            isExternal,\r\n            modifiers,\r\n            hasImportantModifier,\r\n            baseClassName,\r\n            maybePostfixModifierPosition,\r\n        } = parseClassName(originalClassName)\r\n\r\n        if (isExternal) {\r\n            result = originalClassName + (result.length > 0 ? ' ' + result : result)\r\n            continue\r\n        }\r\n\r\n        let hasPostfixModifier = !!maybePostfixModifierPosition\r\n        let classGroupId = getClassGroupId(\r\n            hasPostfixModifier\r\n                ? baseClassName.substring(0, maybePostfixModifierPosition)\r\n                : baseClassName,\r\n        )\r\n\r\n        if (!classGroupId) {\r\n            if (!hasPostfixModifier) {\r\n                // Not a Tailwind class\r\n                result = originalClassName + (result.length > 0 ? ' ' + result : result)\r\n                continue\r\n            }\r\n\r\n            classGroupId = getClassGroupId(baseClassName)\r\n\r\n            if (!classGroupId) {\r\n                // Not a Tailwind class\r\n                result = originalClassName + (result.length > 0 ? ' ' + result : result)\r\n                continue\r\n            }\r\n\r\n            hasPostfixModifier = false\r\n        }\r\n\r\n        const variantModifier = sortModifiers(modifiers).join(':')\r\n\r\n        const modifierId = hasImportantModifier\r\n            ? variantModifier + IMPORTANT_MODIFIER\r\n            : variantModifier\r\n\r\n        const classId = modifierId + classGroupId\r\n\r\n        if (classGroupsInConflict.includes(classId)) {\r\n            // Tailwind class omitted due to conflict\r\n            continue\r\n        }\r\n\r\n        classGroupsInConflict.push(classId)\r\n\r\n        const conflictGroups = getConflictingClassGroupIds(classGroupId, hasPostfixModifier)\r\n        for (let i = 0; i < conflictGroups.length; ++i) {\r\n            const group = conflictGroups[i]!\r\n            classGroupsInConflict.push(modifierId + group)\r\n        }\r\n\r\n        // Tailwind class not in conflict\r\n        result = originalClassName + (result.length > 0 ? ' ' + result : result)\r\n    }\r\n\r\n    return result\r\n}\r\n","/**\r\n * The code in this file is copied from https://github.com/lukeed/clsx and modified to suit the needs of tailwind-merge better.\r\n *\r\n * Specifically:\r\n * - Runtime code from https://github.com/lukeed/clsx/blob/v1.2.1/src/index.js\r\n * - TypeScript types from https://github.com/lukeed/clsx/blob/v1.2.1/clsx.d.ts\r\n *\r\n * Original code has MIT license: Copyright (c) Luke Edwards <luke.edwards05@gmail.com> (lukeed.com)\r\n */\r\n\r\nexport type ClassNameValue = ClassNameArray | string | null | undefined | 0 | 0n | false\r\ntype ClassNameArray = ClassNameValue[]\r\n\r\nexport function twJoin(...classLists: ClassNameValue[]): string\r\nexport function twJoin() {\r\n    let index = 0\r\n    let argument: ClassNameValue\r\n    let resolvedValue: string\r\n    let string = ''\r\n\r\n    while (index < arguments.length) {\r\n        if ((argument = arguments[index++])) {\r\n            if ((resolvedValue = toValue(argument))) {\r\n                string && (string += ' ')\r\n                string += resolvedValue\r\n            }\r\n        }\r\n    }\r\n    return string\r\n}\r\n\r\nconst toValue = (mix: ClassNameArray | string) => {\r\n    if (typeof mix === 'string') {\r\n        return mix\r\n    }\r\n\r\n    let resolvedValue: string\r\n    let string = ''\r\n\r\n    for (let k = 0; k < mix.length; k++) {\r\n        if (mix[k]) {\r\n            if ((resolvedValue = toValue(mix[k] as ClassNameArray | string))) {\r\n                string && (string += ' ')\r\n                string += resolvedValue\r\n            }\r\n        }\r\n    }\r\n\r\n    return string\r\n}\r\n","import { createConfigUtils } from './config-utils'\r\nimport { mergeClassList } from './merge-classlist'\r\nimport { ClassNameValue, twJoin } from './tw-join'\r\nimport { AnyConfig } from './types'\r\n\r\ntype CreateConfigFirst = () => AnyConfig\r\ntype CreateConfigSubsequent = (config: AnyConfig) => AnyConfig\r\ntype TailwindMerge = (...classLists: ClassNameValue[]) => string\r\ntype ConfigUtils = ReturnType<typeof createConfigUtils>\r\n\r\nexport function createTailwindMerge(\r\n    createConfigFirst: CreateConfigFirst,\r\n    ...createConfigRest: CreateConfigSubsequent[]\r\n): TailwindMerge {\r\n    let configUtils: ConfigUtils\r\n    let cacheGet: ConfigUtils['cache']['get']\r\n    let cacheSet: ConfigUtils['cache']['set']\r\n    let functionToCall = initTailwindMerge\r\n\r\n    function initTailwindMerge(classList: string) {\r\n        const config = createConfigRest.reduce(\r\n            (previousConfig, createConfigCurrent) => createConfigCurrent(previousConfig),\r\n            createConfigFirst() as AnyConfig,\r\n        )\r\n\r\n        configUtils = createConfigUtils(config)\r\n        cacheGet = configUtils.cache.get\r\n        cacheSet = configUtils.cache.set\r\n        functionToCall = tailwindMerge\r\n\r\n        return tailwindMerge(classList)\r\n    }\r\n\r\n    function tailwindMerge(classList: string) {\r\n        const cachedResult = cacheGet(classList)\r\n\r\n        if (cachedResult) {\r\n            return cachedResult\r\n        }\r\n\r\n        const result = mergeClassList(classList, configUtils)\r\n        cacheSet(classList, result)\r\n\r\n        return result\r\n    }\r\n\r\n    return function callTailwindMerge() {\r\n        return functionToCall(twJoin.apply(null, arguments as any))\r\n    }\r\n}\r\n","import { DefaultThemeGroupIds, NoInfer, ThemeGetter, ThemeObject } from './types'\r\n\r\nexport const fromTheme = <\r\n    AdditionalThemeGroupIds extends string = never,\r\n    DefaultThemeGroupIdsInner extends string = DefaultThemeGroupIds,\r\n>(key: NoInfer<DefaultThemeGroupIdsInner | AdditionalThemeGroupIds>): ThemeGetter => {\r\n    const themeGetter = (theme: ThemeObject<DefaultThemeGroupIdsInner | AdditionalThemeGroupIds>) =>\r\n        theme[key] || []\r\n\r\n    themeGetter.isThemeGetter = true as const\r\n\r\n    return themeGetter\r\n}\r\n","const arbitraryValueRegex = /^\\[(?:(\\w[\\w-]*):)?(.+)\\]$/i\r\nconst arbitraryVariableRegex = /^\\((?:(\\w[\\w-]*):)?(.+)\\)$/i\r\nconst fractionRegex = /^\\d+\\/\\d+$/\r\nconst tshirtUnitRegex = /^(\\d+(\\.\\d+)?)?(xs|sm|md|lg|xl)$/\r\nconst lengthUnitRegex =\r\n    /\\d+(%|px|r?em|[sdl]?v([hwib]|min|max)|pt|pc|in|cm|mm|cap|ch|ex|r?lh|cq(w|h|i|b|min|max))|\\b(calc|min|max|clamp)\\(.+\\)|^0$/\r\nconst colorFunctionRegex = /^(rgba?|hsla?|hwb|(ok)?(lab|lch))\\(.+\\)$/\r\n// Shadow always begins with x and y offset separated by underscore optionally prepended by inset\r\nconst shadowRegex = /^(inset_)?-?((\\d+)?\\.?(\\d+)[a-z]+|0)_-?((\\d+)?\\.?(\\d+)[a-z]+|0)/\r\nconst imageRegex =\r\n    /^(url|image|image-set|cross-fade|element|(repeating-)?(linear|radial|conic)-gradient)\\(.+\\)$/\r\n\r\nexport const isFraction = (value: string) => fractionRegex.test(value)\r\n\r\nexport const isNumber = (value: string) => Boolean(value) && !Number.isNaN(Number(value))\r\n\r\nexport const isInteger = (value: string) => Boolean(value) && Number.isInteger(Number(value))\r\n\r\nexport const isPercent = (value: string) => value.endsWith('%') && isNumber(value.slice(0, -1))\r\n\r\nexport const isTshirtSize = (value: string) => tshirtUnitRegex.test(value)\r\n\r\nexport const isAny = () => true\r\n\r\nconst isLengthOnly = (value: string) =>\r\n    // `colorFunctionRegex` check is necessary because color functions can have percentages in them which which would be incorrectly classified as lengths.\r\n    // For example, `hsl(0 0% 0%)` would be classified as a length without this check.\r\n    // I could also use lookbehind assertion in `lengthUnitRegex` but that isn't supported widely enough.\r\n    lengthUnitRegex.test(value) && !colorFunctionRegex.test(value)\r\n\r\nconst isNever = () => false\r\n\r\nconst isShadow = (value: string) => shadowRegex.test(value)\r\n\r\nconst isImage = (value: string) => imageRegex.test(value)\r\n\r\nexport const isAnyNonArbitrary = (value: string) =>\r\n    !isArbitraryValue(value) && !isArbitraryVariable(value)\r\n\r\nexport const isArbitrarySize = (value: string) => getIsArbitraryValue(value, isLabelSize, isNever)\r\n\r\nexport const isArbitraryValue = (value: string) => arbitraryValueRegex.test(value)\r\n\r\nexport const isArbitraryLength = (value: string) =>\r\n    getIsArbitraryValue(value, isLabelLength, isLengthOnly)\r\n\r\nexport const isArbitraryNumber = (value: string) =>\r\n    getIsArbitraryValue(value, isLabelNumber, isNumber)\r\n\r\nexport const isArbitraryPosition = (value: string) =>\r\n    getIsArbitraryValue(value, isLabelPosition, isNever)\r\n\r\nexport const isArbitraryImage = (value: string) => getIsArbitraryValue(value, isLabelImage, isImage)\r\n\r\nexport const isArbitraryShadow = (value: string) => getIsArbitraryValue(value, isNever, isShadow)\r\n\r\nexport const isArbitraryVariable = (value: string) => arbitraryVariableRegex.test(value)\r\n\r\nexport const isArbitraryVariableLength = (value: string) =>\r\n    getIsArbitraryVariable(value, isLabelLength)\r\n\r\nexport const isArbitraryVariableFamilyName = (value: string) =>\r\n    getIsArbitraryVariable(value, isLabelFamilyName)\r\n\r\nexport const isArbitraryVariablePosition = (value: string) =>\r\n    getIsArbitraryVariable(value, isLabelPosition)\r\n\r\nexport const isArbitraryVariableSize = (value: string) => getIsArbitraryVariable(value, isLabelSize)\r\n\r\nexport const isArbitraryVariableImage = (value: string) =>\r\n    getIsArbitraryVariable(value, isLabelImage)\r\n\r\nexport const isArbitraryVariableShadow = (value: string) =>\r\n    getIsArbitraryVariable(value, isLabelShadow, true)\r\n\r\n// Helpers\r\n\r\nconst getIsArbitraryValue = (\r\n    value: string,\r\n    testLabel: (label: string) => boolean,\r\n    testValue: (value: string) => boolean,\r\n) => {\r\n    const result = arbitraryValueRegex.exec(value)\r\n\r\n    if (result) {\r\n        if (result[1]) {\r\n            return testLabel(result[1])\r\n        }\r\n\r\n        return testValue(result[2]!)\r\n    }\r\n\r\n    return false\r\n}\r\n\r\nconst getIsArbitraryVariable = (\r\n    value: string,\r\n    testLabel: (label: string) => boolean,\r\n    shouldMatchNoLabel = false,\r\n) => {\r\n    const result = arbitraryVariableRegex.exec(value)\r\n\r\n    if (result) {\r\n        if (result[1]) {\r\n            return testLabel(result[1])\r\n        }\r\n        return shouldMatchNoLabel\r\n    }\r\n\r\n    return false\r\n}\r\n\r\n// Labels\r\n\r\nconst isLabelPosition = (label: string) => label === 'position'\r\n\r\nconst imageLabels = new Set(['image', 'url'])\r\n\r\nconst isLabelImage = (label: string) => imageLabels.has(label)\r\n\r\nconst sizeLabels = new Set(['length', 'size', 'percentage'])\r\n\r\nconst isLabelSize = (label: string) => sizeLabels.has(label)\r\n\r\nconst isLabelLength = (label: string) => label === 'length'\r\n\r\nconst isLabelNumber = (label: string) => label === 'number'\r\n\r\nconst isLabelFamilyName = (label: string) => label === 'family-name'\r\n\r\nconst isLabelShadow = (label: string) => label === 'shadow'\r\n","import { fromTheme } from './from-theme'\r\nimport { Config, DefaultClassGroupIds, DefaultThemeGroupIds } from './types'\r\nimport {\r\n    isAny,\r\n    isAnyNonArbitrary,\r\n    isArbitraryImage,\r\n    isArbitraryLength,\r\n    isArbitraryNumber,\r\n    isArbitraryPosition,\r\n    isArbitraryShadow,\r\n    isArbitrarySize,\r\n    isArbitraryValue,\r\n    isArbitraryVariable,\r\n    isArbitraryVariableFamilyName,\r\n    isArbitraryVariableImage,\r\n    isArbitraryVariableLength,\r\n    isArbitraryVariablePosition,\r\n    isArbitraryVariableShadow,\r\n    isArbitraryVariableSize,\r\n    isFraction,\r\n    isInteger,\r\n    isNumber,\r\n    isPercent,\r\n    isTshirtSize,\r\n} from './validators'\r\n\r\nexport const getDefaultConfig = () => {\r\n    /**\r\n     * Theme getters for theme variable namespaces\r\n     * @see https://tailwindcss.com/docs/theme#theme-variable-namespaces\r\n     */\r\n    /***/\r\n\r\n    const themeColor = fromTheme('color')\r\n    const themeFont = fromTheme('font')\r\n    const themeText = fromTheme('text')\r\n    const themeFontWeight = fromTheme('font-weight')\r\n    const themeTracking = fromTheme('tracking')\r\n    const themeLeading = fromTheme('leading')\r\n    const themeBreakpoint = fromTheme('breakpoint')\r\n    const themeContainer = fromTheme('container')\r\n    const themeSpacing = fromTheme('spacing')\r\n    const themeRadius = fromTheme('radius')\r\n    const themeShadow = fromTheme('shadow')\r\n    const themeInsetShadow = fromTheme('inset-shadow')\r\n    const themeDropShadow = fromTheme('drop-shadow')\r\n    const themeBlur = fromTheme('blur')\r\n    const themePerspective = fromTheme('perspective')\r\n    const themeAspect = fromTheme('aspect')\r\n    const themeEase = fromTheme('ease')\r\n    const themeAnimate = fromTheme('animate')\r\n\r\n    /**\r\n     * Helpers to avoid repeating the same scales\r\n     *\r\n     * We use functions that create a new array every time they're called instead of static arrays.\r\n     * This ensures that users who modify any scale by mutating the array (e.g. with `array.push(element)`) don't accidentally mutate arrays in other parts of the config.\r\n     */\r\n    /***/\r\n\r\n    const scaleBreak = () =>\r\n        ['auto', 'avoid', 'all', 'avoid-page', 'page', 'left', 'right', 'column'] as const\r\n    const scalePosition = () =>\r\n        [\r\n            'bottom',\r\n            'center',\r\n            'left',\r\n            'left-bottom',\r\n            'left-top',\r\n            'right',\r\n            'right-bottom',\r\n            'right-top',\r\n            'top',\r\n        ] as const\r\n    const scaleOverflow = () => ['auto', 'hidden', 'clip', 'visible', 'scroll'] as const\r\n    const scaleOverscroll = () => ['auto', 'contain', 'none'] as const\r\n    const scaleUnambiguousSpacing = () =>\r\n        [isArbitraryVariable, isArbitraryValue, themeSpacing] as const\r\n    const scaleInset = () => [isFraction, 'full', 'auto', ...scaleUnambiguousSpacing()] as const\r\n    const scaleGridTemplateColsRows = () =>\r\n        [isInteger, 'none', 'subgrid', isArbitraryVariable, isArbitraryValue] as const\r\n    const scaleGridColRowStartAndEnd = () =>\r\n        [\r\n            'auto',\r\n            { span: ['full', isInteger, isArbitraryVariable, isArbitraryValue] },\r\n            isArbitraryVariable,\r\n            isArbitraryValue,\r\n        ] as const\r\n    const scaleGridColRowStartOrEnd = () =>\r\n        [isInteger, 'auto', isArbitraryVariable, isArbitraryValue] as const\r\n    const scaleGridAutoColsRows = () =>\r\n        ['auto', 'min', 'max', 'fr', isArbitraryVariable, isArbitraryValue] as const\r\n    const scaleAlignPrimaryAxis = () =>\r\n        ['start', 'end', 'center', 'between', 'around', 'evenly', 'stretch', 'baseline'] as const\r\n    const scaleAlignSecondaryAxis = () => ['start', 'end', 'center', 'stretch'] as const\r\n    const scaleMargin = () => ['auto', ...scaleUnambiguousSpacing()] as const\r\n    const scaleSizing = () =>\r\n        [\r\n            isFraction,\r\n            'auto',\r\n            'full',\r\n            'dvw',\r\n            'dvh',\r\n            'lvw',\r\n            'lvh',\r\n            'svw',\r\n            'svh',\r\n            'min',\r\n            'max',\r\n            'fit',\r\n            ...scaleUnambiguousSpacing(),\r\n        ] as const\r\n    const scaleColor = () => [themeColor, isArbitraryVariable, isArbitraryValue] as const\r\n    const scaleGradientStopPosition = () => [isPercent, isArbitraryLength] as const\r\n    const scaleRadius = () =>\r\n        [\r\n            // Deprecated since Tailwind CSS v4.0.0\r\n            '',\r\n            'none',\r\n            'full',\r\n            themeRadius,\r\n            isArbitraryVariable,\r\n            isArbitraryValue,\r\n        ] as const\r\n    const scaleBorderWidth = () =>\r\n        ['', isNumber, isArbitraryVariableLength, isArbitraryLength] as const\r\n    const scaleLineStyle = () => ['solid', 'dashed', 'dotted', 'double'] as const\r\n    const scaleBlendMode = () =>\r\n        [\r\n            'normal',\r\n            'multiply',\r\n            'screen',\r\n            'overlay',\r\n            'darken',\r\n            'lighten',\r\n            'color-dodge',\r\n            'color-burn',\r\n            'hard-light',\r\n            'soft-light',\r\n            'difference',\r\n            'exclusion',\r\n            'hue',\r\n            'saturation',\r\n            'color',\r\n            'luminosity',\r\n        ] as const\r\n    const scaleBlur = () =>\r\n        [\r\n            // Deprecated since Tailwind CSS v4.0.0\r\n            '',\r\n            'none',\r\n            themeBlur,\r\n            isArbitraryVariable,\r\n            isArbitraryValue,\r\n        ] as const\r\n    const scaleOrigin = () =>\r\n        [\r\n            'center',\r\n            'top',\r\n            'top-right',\r\n            'right',\r\n            'bottom-right',\r\n            'bottom',\r\n            'bottom-left',\r\n            'left',\r\n            'top-left',\r\n            isArbitraryVariable,\r\n            isArbitraryValue,\r\n        ] as const\r\n    const scaleRotate = () => ['none', isNumber, isArbitraryVariable, isArbitraryValue] as const\r\n    const scaleScale = () => ['none', isNumber, isArbitraryVariable, isArbitraryValue] as const\r\n    const scaleSkew = () => [isNumber, isArbitraryVariable, isArbitraryValue] as const\r\n    const scaleTranslate = () => [isFraction, 'full', ...scaleUnambiguousSpacing()] as const\r\n\r\n    return {\r\n        cacheSize: 500,\r\n        theme: {\r\n            animate: ['spin', 'ping', 'pulse', 'bounce'],\r\n            aspect: ['video'],\r\n            blur: [isTshirtSize],\r\n            breakpoint: [isTshirtSize],\r\n            color: [isAny],\r\n            container: [isTshirtSize],\r\n            'drop-shadow': [isTshirtSize],\r\n            ease: ['in', 'out', 'in-out'],\r\n            font: [isAnyNonArbitrary],\r\n            'font-weight': [\r\n                'thin',\r\n                'extralight',\r\n                'light',\r\n                'normal',\r\n                'medium',\r\n                'semibold',\r\n                'bold',\r\n                'extrabold',\r\n                'black',\r\n            ],\r\n            'inset-shadow': [isTshirtSize],\r\n            leading: ['none', 'tight', 'snug', 'normal', 'relaxed', 'loose'],\r\n            perspective: ['dramatic', 'near', 'normal', 'midrange', 'distant', 'none'],\r\n            radius: [isTshirtSize],\r\n            shadow: [isTshirtSize],\r\n            spacing: ['px', isNumber],\r\n            text: [isTshirtSize],\r\n            tracking: ['tighter', 'tight', 'normal', 'wide', 'wider', 'widest'],\r\n        },\r\n        classGroups: {\r\n            // --------------\r\n            // --- Layout ---\r\n            // --------------\r\n\r\n            /**\r\n             * Aspect Ratio\r\n             * @see https://tailwindcss.com/docs/aspect-ratio\r\n             */\r\n            aspect: [\r\n                {\r\n                    aspect: [\r\n                        'auto',\r\n                        'square',\r\n                        isFraction,\r\n                        isArbitraryValue,\r\n                        isArbitraryVariable,\r\n                        themeAspect,\r\n                    ],\r\n                },\r\n            ],\r\n            /**\r\n             * Container\r\n             * @see https://tailwindcss.com/docs/container\r\n             * @deprecated since Tailwind CSS v4.0.0\r\n             */\r\n            container: ['container'],\r\n            /**\r\n             * Columns\r\n             * @see https://tailwindcss.com/docs/columns\r\n             */\r\n            columns: [\r\n                { columns: [isNumber, isArbitraryValue, isArbitraryVariable, themeContainer] },\r\n            ],\r\n            /**\r\n             * Break After\r\n             * @see https://tailwindcss.com/docs/break-after\r\n             */\r\n            'break-after': [{ 'break-after': scaleBreak() }],\r\n            /**\r\n             * Break Before\r\n             * @see https://tailwindcss.com/docs/break-before\r\n             */\r\n            'break-before': [{ 'break-before': scaleBreak() }],\r\n            /**\r\n             * Break Inside\r\n             * @see https://tailwindcss.com/docs/break-inside\r\n             */\r\n            'break-inside': [{ 'break-inside': ['auto', 'avoid', 'avoid-page', 'avoid-column'] }],\r\n            /**\r\n             * Box Decoration Break\r\n             * @see https://tailwindcss.com/docs/box-decoration-break\r\n             */\r\n            'box-decoration': [{ 'box-decoration': ['slice', 'clone'] }],\r\n            /**\r\n             * Box Sizing\r\n             * @see https://tailwindcss.com/docs/box-sizing\r\n             */\r\n            box: [{ box: ['border', 'content'] }],\r\n            /**\r\n             * Display\r\n             * @see https://tailwindcss.com/docs/display\r\n             */\r\n            display: [\r\n                'block',\r\n                'inline-block',\r\n                'inline',\r\n                'flex',\r\n                'inline-flex',\r\n                'table',\r\n                'inline-table',\r\n                'table-caption',\r\n                'table-cell',\r\n                'table-column',\r\n                'table-column-group',\r\n                'table-footer-group',\r\n                'table-header-group',\r\n                'table-row-group',\r\n                'table-row',\r\n                'flow-root',\r\n                'grid',\r\n                'inline-grid',\r\n                'contents',\r\n                'list-item',\r\n                'hidden',\r\n            ],\r\n            /**\r\n             * Screen Reader Only\r\n             * @see https://tailwindcss.com/docs/display#screen-reader-only\r\n             */\r\n            sr: ['sr-only', 'not-sr-only'],\r\n            /**\r\n             * Floats\r\n             * @see https://tailwindcss.com/docs/float\r\n             */\r\n            float: [{ float: ['right', 'left', 'none', 'start', 'end'] }],\r\n            /**\r\n             * Clear\r\n             * @see https://tailwindcss.com/docs/clear\r\n             */\r\n            clear: [{ clear: ['left', 'right', 'both', 'none', 'start', 'end'] }],\r\n            /**\r\n             * Isolation\r\n             * @see https://tailwindcss.com/docs/isolation\r\n             */\r\n            isolation: ['isolate', 'isolation-auto'],\r\n            /**\r\n             * Object Fit\r\n             * @see https://tailwindcss.com/docs/object-fit\r\n             */\r\n            'object-fit': [{ object: ['contain', 'cover', 'fill', 'none', 'scale-down'] }],\r\n            /**\r\n             * Object Position\r\n             * @see https://tailwindcss.com/docs/object-position\r\n             */\r\n            'object-position': [\r\n                { object: [...scalePosition(), isArbitraryValue, isArbitraryVariable] },\r\n            ],\r\n            /**\r\n             * Overflow\r\n             * @see https://tailwindcss.com/docs/overflow\r\n             */\r\n            overflow: [{ overflow: scaleOverflow() }],\r\n            /**\r\n             * Overflow X\r\n             * @see https://tailwindcss.com/docs/overflow\r\n             */\r\n            'overflow-x': [{ 'overflow-x': scaleOverflow() }],\r\n            /**\r\n             * Overflow Y\r\n             * @see https://tailwindcss.com/docs/overflow\r\n             */\r\n            'overflow-y': [{ 'overflow-y': scaleOverflow() }],\r\n            /**\r\n             * Overscroll Behavior\r\n             * @see https://tailwindcss.com/docs/overscroll-behavior\r\n             */\r\n            overscroll: [{ overscroll: scaleOverscroll() }],\r\n            /**\r\n             * Overscroll Behavior X\r\n             * @see https://tailwindcss.com/docs/overscroll-behavior\r\n             */\r\n            'overscroll-x': [{ 'overscroll-x': scaleOverscroll() }],\r\n            /**\r\n             * Overscroll Behavior Y\r\n             * @see https://tailwindcss.com/docs/overscroll-behavior\r\n             */\r\n            'overscroll-y': [{ 'overscroll-y': scaleOverscroll() }],\r\n            /**\r\n             * Position\r\n             * @see https://tailwindcss.com/docs/position\r\n             */\r\n            position: ['static', 'fixed', 'absolute', 'relative', 'sticky'],\r\n            /**\r\n             * Top / Right / Bottom / Left\r\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n             */\r\n            inset: [{ inset: scaleInset() }],\r\n            /**\r\n             * Right / Left\r\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n             */\r\n            'inset-x': [{ 'inset-x': scaleInset() }],\r\n            /**\r\n             * Top / Bottom\r\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n             */\r\n            'inset-y': [{ 'inset-y': scaleInset() }],\r\n            /**\r\n             * Start\r\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n             */\r\n            start: [{ start: scaleInset() }],\r\n            /**\r\n             * End\r\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n             */\r\n            end: [{ end: scaleInset() }],\r\n            /**\r\n             * Top\r\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n             */\r\n            top: [{ top: scaleInset() }],\r\n            /**\r\n             * Right\r\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n             */\r\n            right: [{ right: scaleInset() }],\r\n            /**\r\n             * Bottom\r\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n             */\r\n            bottom: [{ bottom: scaleInset() }],\r\n            /**\r\n             * Left\r\n             * @see https://tailwindcss.com/docs/top-right-bottom-left\r\n             */\r\n            left: [{ left: scaleInset() }],\r\n            /**\r\n             * Visibility\r\n             * @see https://tailwindcss.com/docs/visibility\r\n             */\r\n            visibility: ['visible', 'invisible', 'collapse'],\r\n            /**\r\n             * Z-Index\r\n             * @see https://tailwindcss.com/docs/z-index\r\n             */\r\n            z: [{ z: [isInteger, 'auto', isArbitraryVariable, isArbitraryValue] }],\r\n\r\n            // ------------------------\r\n            // --- Flexbox and Grid ---\r\n            // ------------------------\r\n\r\n            /**\r\n             * Flex Basis\r\n             * @see https://tailwindcss.com/docs/flex-basis\r\n             */\r\n            basis: [\r\n                {\r\n                    basis: [\r\n                        isFraction,\r\n                        'full',\r\n                        'auto',\r\n                        themeContainer,\r\n                        ...scaleUnambiguousSpacing(),\r\n                    ],\r\n                },\r\n            ],\r\n            /**\r\n             * Flex Direction\r\n             * @see https://tailwindcss.com/docs/flex-direction\r\n             */\r\n            'flex-direction': [{ flex: ['row', 'row-reverse', 'col', 'col-reverse'] }],\r\n            /**\r\n             * Flex Wrap\r\n             * @see https://tailwindcss.com/docs/flex-wrap\r\n             */\r\n            'flex-wrap': [{ flex: ['nowrap', 'wrap', 'wrap-reverse'] }],\r\n            /**\r\n             * Flex\r\n             * @see https://tailwindcss.com/docs/flex\r\n             */\r\n            flex: [{ flex: [isNumber, isFraction, 'auto', 'initial', 'none', isArbitraryValue] }],\r\n            /**\r\n             * Flex Grow\r\n             * @see https://tailwindcss.com/docs/flex-grow\r\n             */\r\n            grow: [{ grow: ['', isNumber, isArbitraryVariable, isArbitraryValue] }],\r\n            /**\r\n             * Flex Shrink\r\n             * @see https://tailwindcss.com/docs/flex-shrink\r\n             */\r\n            shrink: [{ shrink: ['', isNumber, isArbitraryVariable, isArbitraryValue] }],\r\n            /**\r\n             * Order\r\n             * @see https://tailwindcss.com/docs/order\r\n             */\r\n            order: [\r\n                {\r\n                    order: [\r\n                        isInteger,\r\n                        'first',\r\n                        'last',\r\n                        'none',\r\n                        isArbitraryVariable,\r\n                        isArbitraryValue,\r\n                    ],\r\n                },\r\n            ],\r\n            /**\r\n             * Grid Template Columns\r\n             * @see https://tailwindcss.com/docs/grid-template-columns\r\n             */\r\n            'grid-cols': [{ 'grid-cols': scaleGridTemplateColsRows() }],\r\n            /**\r\n             * Grid Column Start / End\r\n             * @see https://tailwindcss.com/docs/grid-column\r\n             */\r\n            'col-start-end': [{ col: scaleGridColRowStartAndEnd() }],\r\n            /**\r\n             * Grid Column Start\r\n             * @see https://tailwindcss.com/docs/grid-column\r\n             */\r\n            'col-start': [{ 'col-start': scaleGridColRowStartOrEnd() }],\r\n            /**\r\n             * Grid Column End\r\n             * @see https://tailwindcss.com/docs/grid-column\r\n             */\r\n            'col-end': [{ 'col-end': scaleGridColRowStartOrEnd() }],\r\n            /**\r\n             * Grid Template Rows\r\n             * @see https://tailwindcss.com/docs/grid-template-rows\r\n             */\r\n            'grid-rows': [{ 'grid-rows': scaleGridTemplateColsRows() }],\r\n            /**\r\n             * Grid Row Start / End\r\n             * @see https://tailwindcss.com/docs/grid-row\r\n             */\r\n            'row-start-end': [{ row: scaleGridColRowStartAndEnd() }],\r\n            /**\r\n             * Grid Row Start\r\n             * @see https://tailwindcss.com/docs/grid-row\r\n             */\r\n            'row-start': [{ 'row-start': scaleGridColRowStartOrEnd() }],\r\n            /**\r\n             * Grid Row End\r\n             * @see https://tailwindcss.com/docs/grid-row\r\n             */\r\n            'row-end': [{ 'row-end': scaleGridColRowStartOrEnd() }],\r\n            /**\r\n             * Grid Auto Flow\r\n             * @see https://tailwindcss.com/docs/grid-auto-flow\r\n             */\r\n            'grid-flow': [{ 'grid-flow': ['row', 'col', 'dense', 'row-dense', 'col-dense'] }],\r\n            /**\r\n             * Grid Auto Columns\r\n             * @see https://tailwindcss.com/docs/grid-auto-columns\r\n             */\r\n            'auto-cols': [{ 'auto-cols': scaleGridAutoColsRows() }],\r\n            /**\r\n             * Grid Auto Rows\r\n             * @see https://tailwindcss.com/docs/grid-auto-rows\r\n             */\r\n            'auto-rows': [{ 'auto-rows': scaleGridAutoColsRows() }],\r\n            /**\r\n             * Gap\r\n             * @see https://tailwindcss.com/docs/gap\r\n             */\r\n            gap: [{ gap: scaleUnambiguousSpacing() }],\r\n            /**\r\n             * Gap X\r\n             * @see https://tailwindcss.com/docs/gap\r\n             */\r\n            'gap-x': [{ 'gap-x': scaleUnambiguousSpacing() }],\r\n            /**\r\n             * Gap Y\r\n             * @see https://tailwindcss.com/docs/gap\r\n             */\r\n            'gap-y': [{ 'gap-y': scaleUnambiguousSpacing() }],\r\n            /**\r\n             * Justify Content\r\n             * @see https://tailwindcss.com/docs/justify-content\r\n             */\r\n            'justify-content': [{ justify: [...scaleAlignPrimaryAxis(), 'normal'] }],\r\n            /**\r\n             * Justify Items\r\n             * @see https://tailwindcss.com/docs/justify-items\r\n             */\r\n            'justify-items': [{ 'justify-items': [...scaleAlignSecondaryAxis(), 'normal'] }],\r\n            /**\r\n             * Justify Self\r\n             * @see https://tailwindcss.com/docs/justify-self\r\n             */\r\n            'justify-self': [{ 'justify-self': ['auto', ...scaleAlignSecondaryAxis()] }],\r\n            /**\r\n             * Align Content\r\n             * @see https://tailwindcss.com/docs/align-content\r\n             */\r\n            'align-content': [{ content: ['normal', ...scaleAlignPrimaryAxis()] }],\r\n            /**\r\n             * Align Items\r\n             * @see https://tailwindcss.com/docs/align-items\r\n             */\r\n            'align-items': [{ items: [...scaleAlignSecondaryAxis(), 'baseline'] }],\r\n            /**\r\n             * Align Self\r\n             * @see https://tailwindcss.com/docs/align-self\r\n             */\r\n            'align-self': [{ self: ['auto', ...scaleAlignSecondaryAxis(), 'baseline'] }],\r\n            /**\r\n             * Place Content\r\n             * @see https://tailwindcss.com/docs/place-content\r\n             */\r\n            'place-content': [{ 'place-content': scaleAlignPrimaryAxis() }],\r\n            /**\r\n             * Place Items\r\n             * @see https://tailwindcss.com/docs/place-items\r\n             */\r\n            'place-items': [{ 'place-items': [...scaleAlignSecondaryAxis(), 'baseline'] }],\r\n            /**\r\n             * Place Self\r\n             * @see https://tailwindcss.com/docs/place-self\r\n             */\r\n            'place-self': [{ 'place-self': ['auto', ...scaleAlignSecondaryAxis()] }],\r\n            // Spacing\r\n            /**\r\n             * Padding\r\n             * @see https://tailwindcss.com/docs/padding\r\n             */\r\n            p: [{ p: scaleUnambiguousSpacing() }],\r\n            /**\r\n             * Padding X\r\n             * @see https://tailwindcss.com/docs/padding\r\n             */\r\n            px: [{ px: scaleUnambiguousSpacing() }],\r\n            /**\r\n             * Padding Y\r\n             * @see https://tailwindcss.com/docs/padding\r\n             */\r\n            py: [{ py: scaleUnambiguousSpacing() }],\r\n            /**\r\n             * Padding Start\r\n             * @see https://tailwindcss.com/docs/padding\r\n             */\r\n            ps: [{ ps: scaleUnambiguousSpacing() }],\r\n            /**\r\n             * Padding End\r\n             * @see https://tailwindcss.com/docs/padding\r\n             */\r\n            pe: [{ pe: scaleUnambiguousSpacing() }],\r\n            /**\r\n             * Padding Top\r\n             * @see https://tailwindcss.com/docs/padding\r\n             */\r\n            pt: [{ pt: scaleUnambiguousSpacing() }],\r\n            /**\r\n             * Padding Right\r\n             * @see https://tailwindcss.com/docs/padding\r\n             */\r\n            pr: [{ pr: scaleUnambiguousSpacing() }],\r\n            /**\r\n             * Padding Bottom\r\n             * @see https://tailwindcss.com/docs/padding\r\n             */\r\n            pb: [{ pb: scaleUnambiguousSpacing() }],\r\n            /**\r\n             * Padding Left\r\n             * @see https://tailwindcss.com/docs/padding\r\n             */\r\n            pl: [{ pl: scaleUnambiguousSpacing() }],\r\n            /**\r\n             * Margin\r\n             * @see https://tailwindcss.com/docs/margin\r\n             */\r\n            m: [{ m: scaleMargin() }],\r\n            /**\r\n             * Margin X\r\n             * @see https://tailwindcss.com/docs/margin\r\n             */\r\n            mx: [{ mx: scaleMargin() }],\r\n            /**\r\n             * Margin Y\r\n             * @see https://tailwindcss.com/docs/margin\r\n             */\r\n            my: [{ my: scaleMargin() }],\r\n            /**\r\n             * Margin Start\r\n             * @see https://tailwindcss.com/docs/margin\r\n             */\r\n            ms: [{ ms: scaleMargin() }],\r\n            /**\r\n             * Margin End\r\n             * @see https://tailwindcss.com/docs/margin\r\n             */\r\n            me: [{ me: scaleMargin() }],\r\n            /**\r\n             * Margin Top\r\n             * @see https://tailwindcss.com/docs/margin\r\n             */\r\n            mt: [{ mt: scaleMargin() }],\r\n            /**\r\n             * Margin Right\r\n             * @see https://tailwindcss.com/docs/margin\r\n             */\r\n            mr: [{ mr: scaleMargin() }],\r\n            /**\r\n             * Margin Bottom\r\n             * @see https://tailwindcss.com/docs/margin\r\n             */\r\n            mb: [{ mb: scaleMargin() }],\r\n            /**\r\n             * Margin Left\r\n             * @see https://tailwindcss.com/docs/margin\r\n             */\r\n            ml: [{ ml: scaleMargin() }],\r\n            /**\r\n             * Space Between X\r\n             * @see https://tailwindcss.com/docs/margin#adding-space-between-children\r\n             */\r\n            'space-x': [{ 'space-x': scaleUnambiguousSpacing() }],\r\n            /**\r\n             * Space Between X Reverse\r\n             * @see https://tailwindcss.com/docs/margin#adding-space-between-children\r\n             */\r\n            'space-x-reverse': ['space-x-reverse'],\r\n            /**\r\n             * Space Between Y\r\n             * @see https://tailwindcss.com/docs/margin#adding-space-between-children\r\n             */\r\n            'space-y': [{ 'space-y': scaleUnambiguousSpacing() }],\r\n            /**\r\n             * Space Between Y Reverse\r\n             * @see https://tailwindcss.com/docs/margin#adding-space-between-children\r\n             */\r\n            'space-y-reverse': ['space-y-reverse'],\r\n\r\n            // --------------\r\n            // --- Sizing ---\r\n            // --------------\r\n\r\n            /**\r\n             * Size\r\n             * @see https://tailwindcss.com/docs/width#setting-both-width-and-height\r\n             */\r\n            size: [{ size: scaleSizing() }],\r\n            /**\r\n             * Width\r\n             * @see https://tailwindcss.com/docs/width\r\n             */\r\n            w: [{ w: [themeContainer, 'screen', ...scaleSizing()] }],\r\n            /**\r\n             * Min-Width\r\n             * @see https://tailwindcss.com/docs/min-width\r\n             */\r\n            'min-w': [\r\n                {\r\n                    'min-w': [\r\n                        themeContainer,\r\n                        'screen',\r\n                        /** Deprecated. @see https://github.com/tailwindlabs/tailwindcss.com/issues/2027#issuecomment-2620152757 */\r\n                        'none',\r\n                        ...scaleSizing(),\r\n                    ],\r\n                },\r\n            ],\r\n            /**\r\n             * Max-Width\r\n             * @see https://tailwindcss.com/docs/max-width\r\n             */\r\n            'max-w': [\r\n                {\r\n                    'max-w': [\r\n                        themeContainer,\r\n                        'screen',\r\n                        'none',\r\n                        /** Deprecated since Tailwind CSS v4.0.0. @see https://github.com/tailwindlabs/tailwindcss.com/issues/2027#issuecomment-2620152757 */\r\n                        'prose',\r\n                        /** Deprecated since Tailwind CSS v4.0.0. @see https://github.com/tailwindlabs/tailwindcss.com/issues/2027#issuecomment-2620152757 */\r\n                        { screen: [themeBreakpoint] },\r\n                        ...scaleSizing(),\r\n                    ],\r\n                },\r\n            ],\r\n            /**\r\n             * Height\r\n             * @see https://tailwindcss.com/docs/height\r\n             */\r\n            h: [{ h: ['screen', ...scaleSizing()] }],\r\n            /**\r\n             * Min-Height\r\n             * @see https://tailwindcss.com/docs/min-height\r\n             */\r\n            'min-h': [{ 'min-h': ['screen', 'none', ...scaleSizing()] }],\r\n            /**\r\n             * Max-Height\r\n             * @see https://tailwindcss.com/docs/max-height\r\n             */\r\n            'max-h': [{ 'max-h': ['screen', ...scaleSizing()] }],\r\n\r\n            // ------------------\r\n            // --- Typography ---\r\n            // ------------------\r\n\r\n            /**\r\n             * Font Size\r\n             * @see https://tailwindcss.com/docs/font-size\r\n             */\r\n            'font-size': [\r\n                { text: ['base', themeText, isArbitraryVariableLength, isArbitraryLength] },\r\n            ],\r\n            /**\r\n             * Font Smoothing\r\n             * @see https://tailwindcss.com/docs/font-smoothing\r\n             */\r\n            'font-smoothing': ['antialiased', 'subpixel-antialiased'],\r\n            /**\r\n             * Font Style\r\n             * @see https://tailwindcss.com/docs/font-style\r\n             */\r\n            'font-style': ['italic', 'not-italic'],\r\n            /**\r\n             * Font Weight\r\n             * @see https://tailwindcss.com/docs/font-weight\r\n             */\r\n            'font-weight': [{ font: [themeFontWeight, isArbitraryVariable, isArbitraryNumber] }],\r\n            /**\r\n             * Font Stretch\r\n             * @see https://tailwindcss.com/docs/font-stretch\r\n             */\r\n            'font-stretch': [\r\n                {\r\n                    'font-stretch': [\r\n                        'ultra-condensed',\r\n                        'extra-condensed',\r\n                        'condensed',\r\n                        'semi-condensed',\r\n                        'normal',\r\n                        'semi-expanded',\r\n                        'expanded',\r\n                        'extra-expanded',\r\n                        'ultra-expanded',\r\n                        isPercent,\r\n                        isArbitraryValue,\r\n                    ],\r\n                },\r\n            ],\r\n            /**\r\n             * Font Family\r\n             * @see https://tailwindcss.com/docs/font-family\r\n             */\r\n            'font-family': [{ font: [isArbitraryVariableFamilyName, isArbitraryValue, themeFont] }],\r\n            /**\r\n             * Font Variant Numeric\r\n             * @see https://tailwindcss.com/docs/font-variant-numeric\r\n             */\r\n            'fvn-normal': ['normal-nums'],\r\n            /**\r\n             * Font Variant Numeric\r\n             * @see https://tailwindcss.com/docs/font-variant-numeric\r\n             */\r\n            'fvn-ordinal': ['ordinal'],\r\n            /**\r\n             * Font Variant Numeric\r\n             * @see https://tailwindcss.com/docs/font-variant-numeric\r\n             */\r\n            'fvn-slashed-zero': ['slashed-zero'],\r\n            /**\r\n             * Font Variant Numeric\r\n             * @see https://tailwindcss.com/docs/font-variant-numeric\r\n             */\r\n            'fvn-figure': ['lining-nums', 'oldstyle-nums'],\r\n            /**\r\n             * Font Variant Numeric\r\n             * @see https://tailwindcss.com/docs/font-variant-numeric\r\n             */\r\n            'fvn-spacing': ['proportional-nums', 'tabular-nums'],\r\n            /**\r\n             * Font Variant Numeric\r\n             * @see https://tailwindcss.com/docs/font-variant-numeric\r\n             */\r\n            'fvn-fraction': ['diagonal-fractions', 'stacked-fractions'],\r\n            /**\r\n             * Letter Spacing\r\n             * @see https://tailwindcss.com/docs/letter-spacing\r\n             */\r\n            tracking: [{ tracking: [themeTracking, isArbitraryVariable, isArbitraryValue] }],\r\n            /**\r\n             * Line Clamp\r\n             * @see https://tailwindcss.com/docs/line-clamp\r\n             */\r\n            'line-clamp': [\r\n                { 'line-clamp': [isNumber, 'none', isArbitraryVariable, isArbitraryNumber] },\r\n            ],\r\n            /**\r\n             * Line Height\r\n             * @see https://tailwindcss.com/docs/line-height\r\n             */\r\n            leading: [\r\n                {\r\n                    leading: [\r\n                        /** Deprecated since Tailwind CSS v4.0.0. @see https://github.com/tailwindlabs/tailwindcss.com/issues/2027#issuecomment-2620152757 */\r\n                        themeLeading,\r\n                        ...scaleUnambiguousSpacing(),\r\n                    ],\r\n                },\r\n            ],\r\n            /**\r\n             * List Style Image\r\n             * @see https://tailwindcss.com/docs/list-style-image\r\n             */\r\n            'list-image': [{ 'list-image': ['none', isArbitraryVariable, isArbitraryValue] }],\r\n            /**\r\n             * List Style Position\r\n             * @see https://tailwindcss.com/docs/list-style-position\r\n             */\r\n            'list-style-position': [{ list: ['inside', 'outside'] }],\r\n            /**\r\n             * List Style Type\r\n             * @see https://tailwindcss.com/docs/list-style-type\r\n             */\r\n            'list-style-type': [\r\n                { list: ['disc', 'decimal', 'none', isArbitraryVariable, isArbitraryValue] },\r\n            ],\r\n            /**\r\n             * Text Alignment\r\n             * @see https://tailwindcss.com/docs/text-align\r\n             */\r\n            'text-alignment': [{ text: ['left', 'center', 'right', 'justify', 'start', 'end'] }],\r\n            /**\r\n             * Placeholder Color\r\n             * @deprecated since Tailwind CSS v3.0.0\r\n             * @see https://v3.tailwindcss.com/docs/placeholder-color\r\n             */\r\n            'placeholder-color': [{ placeholder: scaleColor() }],\r\n            /**\r\n             * Text Color\r\n             * @see https://tailwindcss.com/docs/text-color\r\n             */\r\n            'text-color': [{ text: scaleColor() }],\r\n            /**\r\n             * Text Decoration\r\n             * @see https://tailwindcss.com/docs/text-decoration\r\n             */\r\n            'text-decoration': ['underline', 'overline', 'line-through', 'no-underline'],\r\n            /**\r\n             * Text Decoration Style\r\n             * @see https://tailwindcss.com/docs/text-decoration-style\r\n             */\r\n            'text-decoration-style': [{ decoration: [...scaleLineStyle(), 'wavy'] }],\r\n            /**\r\n             * Text Decoration Thickness\r\n             * @see https://tailwindcss.com/docs/text-decoration-thickness\r\n             */\r\n            'text-decoration-thickness': [\r\n                {\r\n                    decoration: [\r\n                        isNumber,\r\n                        'from-font',\r\n                        'auto',\r\n                        isArbitraryVariable,\r\n                        isArbitraryLength,\r\n                    ],\r\n                },\r\n            ],\r\n            /**\r\n             * Text Decoration Color\r\n             * @see https://tailwindcss.com/docs/text-decoration-color\r\n             */\r\n            'text-decoration-color': [{ decoration: scaleColor() }],\r\n            /**\r\n             * Text Underline Offset\r\n             * @see https://tailwindcss.com/docs/text-underline-offset\r\n             */\r\n            'underline-offset': [\r\n                { 'underline-offset': [isNumber, 'auto', isArbitraryVariable, isArbitraryValue] },\r\n            ],\r\n            /**\r\n             * Text Transform\r\n             * @see https://tailwindcss.com/docs/text-transform\r\n             */\r\n            'text-transform': ['uppercase', 'lowercase', 'capitalize', 'normal-case'],\r\n            /**\r\n             * Text Overflow\r\n             * @see https://tailwindcss.com/docs/text-overflow\r\n             */\r\n            'text-overflow': ['truncate', 'text-ellipsis', 'text-clip'],\r\n            /**\r\n             * Text Wrap\r\n             * @see https://tailwindcss.com/docs/text-wrap\r\n             */\r\n            'text-wrap': [{ text: ['wrap', 'nowrap', 'balance', 'pretty'] }],\r\n            /**\r\n             * Text Indent\r\n             * @see https://tailwindcss.com/docs/text-indent\r\n             */\r\n            indent: [{ indent: scaleUnambiguousSpacing() }],\r\n            /**\r\n             * Vertical Alignment\r\n             * @see https://tailwindcss.com/docs/vertical-align\r\n             */\r\n            'vertical-align': [\r\n                {\r\n                    align: [\r\n                        'baseline',\r\n                        'top',\r\n                        'middle',\r\n                        'bottom',\r\n                        'text-top',\r\n                        'text-bottom',\r\n                        'sub',\r\n                        'super',\r\n                        isArbitraryVariable,\r\n                        isArbitraryValue,\r\n                    ],\r\n                },\r\n            ],\r\n            /**\r\n             * Whitespace\r\n             * @see https://tailwindcss.com/docs/whitespace\r\n             */\r\n            whitespace: [\r\n                { whitespace: ['normal', 'nowrap', 'pre', 'pre-line', 'pre-wrap', 'break-spaces'] },\r\n            ],\r\n            /**\r\n             * Word Break\r\n             * @see https://tailwindcss.com/docs/word-break\r\n             */\r\n            break: [{ break: ['normal', 'words', 'all', 'keep'] }],\r\n            /**\r\n             * Hyphens\r\n             * @see https://tailwindcss.com/docs/hyphens\r\n             */\r\n            hyphens: [{ hyphens: ['none', 'manual', 'auto'] }],\r\n            /**\r\n             * Content\r\n             * @see https://tailwindcss.com/docs/content\r\n             */\r\n            content: [{ content: ['none', isArbitraryVariable, isArbitraryValue] }],\r\n\r\n            // -------------------\r\n            // --- Backgrounds ---\r\n            // -------------------\r\n\r\n            /**\r\n             * Background Attachment\r\n             * @see https://tailwindcss.com/docs/background-attachment\r\n             */\r\n            'bg-attachment': [{ bg: ['fixed', 'local', 'scroll'] }],\r\n            /**\r\n             * Background Clip\r\n             * @see https://tailwindcss.com/docs/background-clip\r\n             */\r\n            'bg-clip': [{ 'bg-clip': ['border', 'padding', 'content', 'text'] }],\r\n            /**\r\n             * Background Origin\r\n             * @see https://tailwindcss.com/docs/background-origin\r\n             */\r\n            'bg-origin': [{ 'bg-origin': ['border', 'padding', 'content'] }],\r\n            /**\r\n             * Background Position\r\n             * @see https://tailwindcss.com/docs/background-position\r\n             */\r\n            'bg-position': [\r\n                { bg: [...scalePosition(), isArbitraryVariablePosition, isArbitraryPosition] },\r\n            ],\r\n            /**\r\n             * Background Repeat\r\n             * @see https://tailwindcss.com/docs/background-repeat\r\n             */\r\n            'bg-repeat': [{ bg: ['no-repeat', { repeat: ['', 'x', 'y', 'space', 'round'] }] }],\r\n            /**\r\n             * Background Size\r\n             * @see https://tailwindcss.com/docs/background-size\r\n             */\r\n            'bg-size': [\r\n                { bg: ['auto', 'cover', 'contain', isArbitraryVariableSize, isArbitrarySize] },\r\n            ],\r\n            /**\r\n             * Background Image\r\n             * @see https://tailwindcss.com/docs/background-image\r\n             */\r\n            'bg-image': [\r\n                {\r\n                    bg: [\r\n                        'none',\r\n                        {\r\n                            linear: [\r\n                                { to: ['t', 'tr', 'r', 'br', 'b', 'bl', 'l', 'tl'] },\r\n                                isInteger,\r\n                                isArbitraryVariable,\r\n                                isArbitraryValue,\r\n                            ],\r\n                            radial: ['', isArbitraryVariable, isArbitraryValue],\r\n                            conic: [isInteger, isArbitraryVariable, isArbitraryValue],\r\n                        },\r\n                        isArbitraryVariableImage,\r\n                        isArbitraryImage,\r\n                    ],\r\n                },\r\n            ],\r\n            /**\r\n             * Background Color\r\n             * @see https://tailwindcss.com/docs/background-color\r\n             */\r\n            'bg-color': [{ bg: scaleColor() }],\r\n            /**\r\n             * Gradient Color Stops From Position\r\n             * @see https://tailwindcss.com/docs/gradient-color-stops\r\n             */\r\n            'gradient-from-pos': [{ from: scaleGradientStopPosition() }],\r\n            /**\r\n             * Gradient Color Stops Via Position\r\n             * @see https://tailwindcss.com/docs/gradient-color-stops\r\n             */\r\n            'gradient-via-pos': [{ via: scaleGradientStopPosition() }],\r\n            /**\r\n             * Gradient Color Stops To Position\r\n             * @see https://tailwindcss.com/docs/gradient-color-stops\r\n             */\r\n            'gradient-to-pos': [{ to: scaleGradientStopPosition() }],\r\n            /**\r\n             * Gradient Color Stops From\r\n             * @see https://tailwindcss.com/docs/gradient-color-stops\r\n             */\r\n            'gradient-from': [{ from: scaleColor() }],\r\n            /**\r\n             * Gradient Color Stops Via\r\n             * @see https://tailwindcss.com/docs/gradient-color-stops\r\n             */\r\n            'gradient-via': [{ via: scaleColor() }],\r\n            /**\r\n             * Gradient Color Stops To\r\n             * @see https://tailwindcss.com/docs/gradient-color-stops\r\n             */\r\n            'gradient-to': [{ to: scaleColor() }],\r\n\r\n            // ---------------\r\n            // --- Borders ---\r\n            // ---------------\r\n\r\n            /**\r\n             * Border Radius\r\n             * @see https://tailwindcss.com/docs/border-radius\r\n             */\r\n            rounded: [{ rounded: scaleRadius() }],\r\n            /**\r\n             * Border Radius Start\r\n             * @see https://tailwindcss.com/docs/border-radius\r\n             */\r\n            'rounded-s': [{ 'rounded-s': scaleRadius() }],\r\n            /**\r\n             * Border Radius End\r\n             * @see https://tailwindcss.com/docs/border-radius\r\n             */\r\n            'rounded-e': [{ 'rounded-e': scaleRadius() }],\r\n            /**\r\n             * Border Radius Top\r\n             * @see https://tailwindcss.com/docs/border-radius\r\n             */\r\n            'rounded-t': [{ 'rounded-t': scaleRadius() }],\r\n            /**\r\n             * Border Radius Right\r\n             * @see https://tailwindcss.com/docs/border-radius\r\n             */\r\n            'rounded-r': [{ 'rounded-r': scaleRadius() }],\r\n            /**\r\n             * Border Radius Bottom\r\n             * @see https://tailwindcss.com/docs/border-radius\r\n             */\r\n            'rounded-b': [{ 'rounded-b': scaleRadius() }],\r\n            /**\r\n             * Border Radius Left\r\n             * @see https://tailwindcss.com/docs/border-radius\r\n             */\r\n            'rounded-l': [{ 'rounded-l': scaleRadius() }],\r\n            /**\r\n             * Border Radius Start Start\r\n             * @see https://tailwindcss.com/docs/border-radius\r\n             */\r\n            'rounded-ss': [{ 'rounded-ss': scaleRadius() }],\r\n            /**\r\n             * Border Radius Start End\r\n             * @see https://tailwindcss.com/docs/border-radius\r\n             */\r\n            'rounded-se': [{ 'rounded-se': scaleRadius() }],\r\n            /**\r\n             * Border Radius End End\r\n             * @see https://tailwindcss.com/docs/border-radius\r\n             */\r\n            'rounded-ee': [{ 'rounded-ee': scaleRadius() }],\r\n            /**\r\n             * Border Radius End Start\r\n             * @see https://tailwindcss.com/docs/border-radius\r\n             */\r\n            'rounded-es': [{ 'rounded-es': scaleRadius() }],\r\n            /**\r\n             * Border Radius Top Left\r\n             * @see https://tailwindcss.com/docs/border-radius\r\n             */\r\n            'rounded-tl': [{ 'rounded-tl': scaleRadius() }],\r\n            /**\r\n             * Border Radius Top Right\r\n             * @see https://tailwindcss.com/docs/border-radius\r\n             */\r\n            'rounded-tr': [{ 'rounded-tr': scaleRadius() }],\r\n            /**\r\n             * Border Radius Bottom Right\r\n             * @see https://tailwindcss.com/docs/border-radius\r\n             */\r\n            'rounded-br': [{ 'rounded-br': scaleRadius() }],\r\n            /**\r\n             * Border Radius Bottom Left\r\n             * @see https://tailwindcss.com/docs/border-radius\r\n             */\r\n            'rounded-bl': [{ 'rounded-bl': scaleRadius() }],\r\n            /**\r\n             * Border Width\r\n             * @see https://tailwindcss.com/docs/border-width\r\n             */\r\n            'border-w': [{ border: scaleBorderWidth() }],\r\n            /**\r\n             * Border Width X\r\n             * @see https://tailwindcss.com/docs/border-width\r\n             */\r\n            'border-w-x': [{ 'border-x': scaleBorderWidth() }],\r\n            /**\r\n             * Border Width Y\r\n             * @see https://tailwindcss.com/docs/border-width\r\n             */\r\n            'border-w-y': [{ 'border-y': scaleBorderWidth() }],\r\n            /**\r\n             * Border Width Start\r\n             * @see https://tailwindcss.com/docs/border-width\r\n             */\r\n            'border-w-s': [{ 'border-s': scaleBorderWidth() }],\r\n            /**\r\n             * Border Width End\r\n             * @see https://tailwindcss.com/docs/border-width\r\n             */\r\n            'border-w-e': [{ 'border-e': scaleBorderWidth() }],\r\n            /**\r\n             * Border Width Top\r\n             * @see https://tailwindcss.com/docs/border-width\r\n             */\r\n            'border-w-t': [{ 'border-t': scaleBorderWidth() }],\r\n            /**\r\n             * Border Width Right\r\n             * @see https://tailwindcss.com/docs/border-width\r\n             */\r\n            'border-w-r': [{ 'border-r': scaleBorderWidth() }],\r\n            /**\r\n             * Border Width Bottom\r\n             * @see https://tailwindcss.com/docs/border-width\r\n             */\r\n            'border-w-b': [{ 'border-b': scaleBorderWidth() }],\r\n            /**\r\n             * Border Width Left\r\n             * @see https://tailwindcss.com/docs/border-width\r\n             */\r\n            'border-w-l': [{ 'border-l': scaleBorderWidth() }],\r\n            /**\r\n             * Divide Width X\r\n             * @see https://tailwindcss.com/docs/border-width#between-children\r\n             */\r\n            'divide-x': [{ 'divide-x': scaleBorderWidth() }],\r\n            /**\r\n             * Divide Width X Reverse\r\n             * @see https://tailwindcss.com/docs/border-width#between-children\r\n             */\r\n            'divide-x-reverse': ['divide-x-reverse'],\r\n            /**\r\n             * Divide Width Y\r\n             * @see https://tailwindcss.com/docs/border-width#between-children\r\n             */\r\n            'divide-y': [{ 'divide-y': scaleBorderWidth() }],\r\n            /**\r\n             * Divide Width Y Reverse\r\n             * @see https://tailwindcss.com/docs/border-width#between-children\r\n             */\r\n            'divide-y-reverse': ['divide-y-reverse'],\r\n            /**\r\n             * Border Style\r\n             * @see https://tailwindcss.com/docs/border-style\r\n             */\r\n            'border-style': [{ border: [...scaleLineStyle(), 'hidden', 'none'] }],\r\n            /**\r\n             * Divide Style\r\n             * @see https://tailwindcss.com/docs/border-style#setting-the-divider-style\r\n             */\r\n            'divide-style': [{ divide: [...scaleLineStyle(), 'hidden', 'none'] }],\r\n            /**\r\n             * Border Color\r\n             * @see https://tailwindcss.com/docs/border-color\r\n             */\r\n            'border-color': [{ border: scaleColor() }],\r\n            /**\r\n             * Border Color X\r\n             * @see https://tailwindcss.com/docs/border-color\r\n             */\r\n            'border-color-x': [{ 'border-x': scaleColor() }],\r\n            /**\r\n             * Border Color Y\r\n             * @see https://tailwindcss.com/docs/border-color\r\n             */\r\n            'border-color-y': [{ 'border-y': scaleColor() }],\r\n            /**\r\n             * Border Color S\r\n             * @see https://tailwindcss.com/docs/border-color\r\n             */\r\n            'border-color-s': [{ 'border-s': scaleColor() }],\r\n            /**\r\n             * Border Color E\r\n             * @see https://tailwindcss.com/docs/border-color\r\n             */\r\n            'border-color-e': [{ 'border-e': scaleColor() }],\r\n            /**\r\n             * Border Color Top\r\n             * @see https://tailwindcss.com/docs/border-color\r\n             */\r\n            'border-color-t': [{ 'border-t': scaleColor() }],\r\n            /**\r\n             * Border Color Right\r\n             * @see https://tailwindcss.com/docs/border-color\r\n             */\r\n            'border-color-r': [{ 'border-r': scaleColor() }],\r\n            /**\r\n             * Border Color Bottom\r\n             * @see https://tailwindcss.com/docs/border-color\r\n             */\r\n            'border-color-b': [{ 'border-b': scaleColor() }],\r\n            /**\r\n             * Border Color Left\r\n             * @see https://tailwindcss.com/docs/border-color\r\n             */\r\n            'border-color-l': [{ 'border-l': scaleColor() }],\r\n            /**\r\n             * Divide Color\r\n             * @see https://tailwindcss.com/docs/divide-color\r\n             */\r\n            'divide-color': [{ divide: scaleColor() }],\r\n            /**\r\n             * Outline Style\r\n             * @see https://tailwindcss.com/docs/outline-style\r\n             */\r\n            'outline-style': [{ outline: [...scaleLineStyle(), 'none', 'hidden'] }],\r\n            /**\r\n             * Outline Offset\r\n             * @see https://tailwindcss.com/docs/outline-offset\r\n             */\r\n            'outline-offset': [\r\n                { 'outline-offset': [isNumber, isArbitraryVariable, isArbitraryValue] },\r\n            ],\r\n            /**\r\n             * Outline Width\r\n             * @see https://tailwindcss.com/docs/outline-width\r\n             */\r\n            'outline-w': [\r\n                { outline: ['', isNumber, isArbitraryVariableLength, isArbitraryLength] },\r\n            ],\r\n            /**\r\n             * Outline Color\r\n             * @see https://tailwindcss.com/docs/outline-color\r\n             */\r\n            'outline-color': [{ outline: [themeColor] }],\r\n\r\n            // ---------------\r\n            // --- Effects ---\r\n            // ---------------\r\n\r\n            /**\r\n             * Box Shadow\r\n             * @see https://tailwindcss.com/docs/box-shadow\r\n             */\r\n            shadow: [\r\n                {\r\n                    shadow: [\r\n                        // Deprecated since Tailwind CSS v4.0.0\r\n                        '',\r\n                        'none',\r\n                        themeShadow,\r\n                        isArbitraryVariableShadow,\r\n                        isArbitraryShadow,\r\n                    ],\r\n                },\r\n            ],\r\n            /**\r\n             * Box Shadow Color\r\n             * @see https://tailwindcss.com/docs/box-shadow#setting-the-shadow-color\r\n             */\r\n            'shadow-color': [{ shadow: scaleColor() }],\r\n            /**\r\n             * Inset Box Shadow\r\n             * @see https://tailwindcss.com/docs/box-shadow#adding-an-inset-shadow\r\n             */\r\n            'inset-shadow': [\r\n                {\r\n                    'inset-shadow': [\r\n                        'none',\r\n                        isArbitraryVariable,\r\n                        isArbitraryValue,\r\n                        themeInsetShadow,\r\n                    ],\r\n                },\r\n            ],\r\n            /**\r\n             * Inset Box Shadow Color\r\n             * @see https://tailwindcss.com/docs/box-shadow#setting-the-inset-shadow-color\r\n             */\r\n            'inset-shadow-color': [{ 'inset-shadow': scaleColor() }],\r\n            /**\r\n             * Ring Width\r\n             * @see https://tailwindcss.com/docs/box-shadow#adding-a-ring\r\n             */\r\n            'ring-w': [{ ring: scaleBorderWidth() }],\r\n            /**\r\n             * Ring Width Inset\r\n             * @see https://v3.tailwindcss.com/docs/ring-width#inset-rings\r\n             * @deprecated since Tailwind CSS v4.0.0\r\n             * @see https://github.com/tailwindlabs/tailwindcss/blob/v4.0.0/packages/tailwindcss/src/utilities.ts#L4158\r\n             */\r\n            'ring-w-inset': ['ring-inset'],\r\n            /**\r\n             * Ring Color\r\n             * @see https://tailwindcss.com/docs/box-shadow#setting-the-ring-color\r\n             */\r\n            'ring-color': [{ ring: scaleColor() }],\r\n            /**\r\n             * Ring Offset Width\r\n             * @see https://v3.tailwindcss.com/docs/ring-offset-width\r\n             * @deprecated since Tailwind CSS v4.0.0\r\n             * @see https://github.com/tailwindlabs/tailwindcss/blob/v4.0.0/packages/tailwindcss/src/utilities.ts#L4158\r\n             */\r\n            'ring-offset-w': [{ 'ring-offset': [isNumber, isArbitraryLength] }],\r\n            /**\r\n             * Ring Offset Color\r\n             * @see https://v3.tailwindcss.com/docs/ring-offset-color\r\n             * @deprecated since Tailwind CSS v4.0.0\r\n             * @see https://github.com/tailwindlabs/tailwindcss/blob/v4.0.0/packages/tailwindcss/src/utilities.ts#L4158\r\n             */\r\n            'ring-offset-color': [{ 'ring-offset': scaleColor() }],\r\n            /**\r\n             * Inset Ring Width\r\n             * @see https://tailwindcss.com/docs/box-shadow#adding-an-inset-ring\r\n             */\r\n            'inset-ring-w': [{ 'inset-ring': scaleBorderWidth() }],\r\n            /**\r\n             * Inset Ring Color\r\n             * @see https://tailwindcss.com/docs/box-shadow#setting-the-inset-ring-color\r\n             */\r\n            'inset-ring-color': [{ 'inset-ring': scaleColor() }],\r\n            /**\r\n             * Opacity\r\n             * @see https://tailwindcss.com/docs/opacity\r\n             */\r\n            opacity: [{ opacity: [isNumber, isArbitraryVariable, isArbitraryValue] }],\r\n            /**\r\n             * Mix Blend Mode\r\n             * @see https://tailwindcss.com/docs/mix-blend-mode\r\n             */\r\n            'mix-blend': [{ 'mix-blend': [...scaleBlendMode(), 'plus-darker', 'plus-lighter'] }],\r\n            /**\r\n             * Background Blend Mode\r\n             * @see https://tailwindcss.com/docs/background-blend-mode\r\n             */\r\n            'bg-blend': [{ 'bg-blend': scaleBlendMode() }],\r\n\r\n            // ---------------\r\n            // --- Filters ---\r\n            // ---------------\r\n\r\n            /**\r\n             * Filter\r\n             * @see https://tailwindcss.com/docs/filter\r\n             */\r\n            filter: [\r\n                {\r\n                    filter: [\r\n                        // Deprecated since Tailwind CSS v3.0.0\r\n                        '',\r\n                        'none',\r\n                        isArbitraryVariable,\r\n                        isArbitraryValue,\r\n                    ],\r\n                },\r\n            ],\r\n            /**\r\n             * Blur\r\n             * @see https://tailwindcss.com/docs/blur\r\n             */\r\n            blur: [{ blur: scaleBlur() }],\r\n            /**\r\n             * Brightness\r\n             * @see https://tailwindcss.com/docs/brightness\r\n             */\r\n            brightness: [{ brightness: [isNumber, isArbitraryVariable, isArbitraryValue] }],\r\n            /**\r\n             * Contrast\r\n             * @see https://tailwindcss.com/docs/contrast\r\n             */\r\n            contrast: [{ contrast: [isNumber, isArbitraryVariable, isArbitraryValue] }],\r\n            /**\r\n             * Drop Shadow\r\n             * @see https://tailwindcss.com/docs/drop-shadow\r\n             */\r\n            'drop-shadow': [\r\n                {\r\n                    'drop-shadow': [\r\n                        // Deprecated since Tailwind CSS v4.0.0\r\n                        '',\r\n                        'none',\r\n                        themeDropShadow,\r\n                        isArbitraryVariable,\r\n                        isArbitraryValue,\r\n                    ],\r\n                },\r\n            ],\r\n            /**\r\n             * Grayscale\r\n             * @see https://tailwindcss.com/docs/grayscale\r\n             */\r\n            grayscale: [{ grayscale: ['', isNumber, isArbitraryVariable, isArbitraryValue] }],\r\n            /**\r\n             * Hue Rotate\r\n             * @see https://tailwindcss.com/docs/hue-rotate\r\n             */\r\n            'hue-rotate': [{ 'hue-rotate': [isNumber, isArbitraryVariable, isArbitraryValue] }],\r\n            /**\r\n             * Invert\r\n             * @see https://tailwindcss.com/docs/invert\r\n             */\r\n            invert: [{ invert: ['', isNumber, isArbitraryVariable, isArbitraryValue] }],\r\n            /**\r\n             * Saturate\r\n             * @see https://tailwindcss.com/docs/saturate\r\n             */\r\n            saturate: [{ saturate: [isNumber, isArbitraryVariable, isArbitraryValue] }],\r\n            /**\r\n             * Sepia\r\n             * @see https://tailwindcss.com/docs/sepia\r\n             */\r\n            sepia: [{ sepia: ['', isNumber, isArbitraryVariable, isArbitraryValue] }],\r\n            /**\r\n             * Backdrop Filter\r\n             * @see https://tailwindcss.com/docs/backdrop-filter\r\n             */\r\n            'backdrop-filter': [\r\n                {\r\n                    'backdrop-filter': [\r\n                        // Deprecated since Tailwind CSS v3.0.0\r\n                        '',\r\n                        'none',\r\n                        isArbitraryVariable,\r\n                        isArbitraryValue,\r\n                    ],\r\n                },\r\n            ],\r\n            /**\r\n             * Backdrop Blur\r\n             * @see https://tailwindcss.com/docs/backdrop-blur\r\n             */\r\n            'backdrop-blur': [{ 'backdrop-blur': scaleBlur() }],\r\n            /**\r\n             * Backdrop Brightness\r\n             * @see https://tailwindcss.com/docs/backdrop-brightness\r\n             */\r\n            'backdrop-brightness': [\r\n                { 'backdrop-brightness': [isNumber, isArbitraryVariable, isArbitraryValue] },\r\n            ],\r\n            /**\r\n             * Backdrop Contrast\r\n             * @see https://tailwindcss.com/docs/backdrop-contrast\r\n             */\r\n            'backdrop-contrast': [\r\n                { 'backdrop-contrast': [isNumber, isArbitraryVariable, isArbitraryValue] },\r\n            ],\r\n            /**\r\n             * Backdrop Grayscale\r\n             * @see https://tailwindcss.com/docs/backdrop-grayscale\r\n             */\r\n            'backdrop-grayscale': [\r\n                { 'backdrop-grayscale': ['', isNumber, isArbitraryVariable, isArbitraryValue] },\r\n            ],\r\n            /**\r\n             * Backdrop Hue Rotate\r\n             * @see https://tailwindcss.com/docs/backdrop-hue-rotate\r\n             */\r\n            'backdrop-hue-rotate': [\r\n                { 'backdrop-hue-rotate': [isNumber, isArbitraryVariable, isArbitraryValue] },\r\n            ],\r\n            /**\r\n             * Backdrop Invert\r\n             * @see https://tailwindcss.com/docs/backdrop-invert\r\n             */\r\n            'backdrop-invert': [\r\n                { 'backdrop-invert': ['', isNumber, isArbitraryVariable, isArbitraryValue] },\r\n            ],\r\n            /**\r\n             * Backdrop Opacity\r\n             * @see https://tailwindcss.com/docs/backdrop-opacity\r\n             */\r\n            'backdrop-opacity': [\r\n                { 'backdrop-opacity': [isNumber, isArbitraryVariable, isArbitraryValue] },\r\n            ],\r\n            /**\r\n             * Backdrop Saturate\r\n             * @see https://tailwindcss.com/docs/backdrop-saturate\r\n             */\r\n            'backdrop-saturate': [\r\n                { 'backdrop-saturate': [isNumber, isArbitraryVariable, isArbitraryValue] },\r\n            ],\r\n            /**\r\n             * Backdrop Sepia\r\n             * @see https://tailwindcss.com/docs/backdrop-sepia\r\n             */\r\n            'backdrop-sepia': [\r\n                { 'backdrop-sepia': ['', isNumber, isArbitraryVariable, isArbitraryValue] },\r\n            ],\r\n\r\n            // --------------\r\n            // --- Tables ---\r\n            // --------------\r\n\r\n            /**\r\n             * Border Collapse\r\n             * @see https://tailwindcss.com/docs/border-collapse\r\n             */\r\n            'border-collapse': [{ border: ['collapse', 'separate'] }],\r\n            /**\r\n             * Border Spacing\r\n             * @see https://tailwindcss.com/docs/border-spacing\r\n             */\r\n            'border-spacing': [{ 'border-spacing': scaleUnambiguousSpacing() }],\r\n            /**\r\n             * Border Spacing X\r\n             * @see https://tailwindcss.com/docs/border-spacing\r\n             */\r\n            'border-spacing-x': [{ 'border-spacing-x': scaleUnambiguousSpacing() }],\r\n            /**\r\n             * Border Spacing Y\r\n             * @see https://tailwindcss.com/docs/border-spacing\r\n             */\r\n            'border-spacing-y': [{ 'border-spacing-y': scaleUnambiguousSpacing() }],\r\n            /**\r\n             * Table Layout\r\n             * @see https://tailwindcss.com/docs/table-layout\r\n             */\r\n            'table-layout': [{ table: ['auto', 'fixed'] }],\r\n            /**\r\n             * Caption Side\r\n             * @see https://tailwindcss.com/docs/caption-side\r\n             */\r\n            caption: [{ caption: ['top', 'bottom'] }],\r\n\r\n            // ---------------------------------\r\n            // --- Transitions and Animation ---\r\n            // ---------------------------------\r\n\r\n            /**\r\n             * Transition Property\r\n             * @see https://tailwindcss.com/docs/transition-property\r\n             */\r\n            transition: [\r\n                {\r\n                    transition: [\r\n                        '',\r\n                        'all',\r\n                        'colors',\r\n                        'opacity',\r\n                        'shadow',\r\n                        'transform',\r\n                        'none',\r\n                        isArbitraryVariable,\r\n                        isArbitraryValue,\r\n                    ],\r\n                },\r\n            ],\r\n            /**\r\n             * Transition Behavior\r\n             * @see https://tailwindcss.com/docs/transition-behavior\r\n             */\r\n            'transition-behavior': [{ transition: ['normal', 'discrete'] }],\r\n            /**\r\n             * Transition Duration\r\n             * @see https://tailwindcss.com/docs/transition-duration\r\n             */\r\n            duration: [{ duration: [isNumber, 'initial', isArbitraryVariable, isArbitraryValue] }],\r\n            /**\r\n             * Transition Timing Function\r\n             * @see https://tailwindcss.com/docs/transition-timing-function\r\n             */\r\n            ease: [\r\n                { ease: ['linear', 'initial', themeEase, isArbitraryVariable, isArbitraryValue] },\r\n            ],\r\n            /**\r\n             * Transition Delay\r\n             * @see https://tailwindcss.com/docs/transition-delay\r\n             */\r\n            delay: [{ delay: [isNumber, isArbitraryVariable, isArbitraryValue] }],\r\n            /**\r\n             * Animation\r\n             * @see https://tailwindcss.com/docs/animation\r\n             */\r\n            animate: [{ animate: ['none', themeAnimate, isArbitraryVariable, isArbitraryValue] }],\r\n\r\n            // ------------------\r\n            // --- Transforms ---\r\n            // ------------------\r\n\r\n            /**\r\n             * Backface Visibility\r\n             * @see https://tailwindcss.com/docs/backface-visibility\r\n             */\r\n            backface: [{ backface: ['hidden', 'visible'] }],\r\n            /**\r\n             * Perspective\r\n             * @see https://tailwindcss.com/docs/perspective\r\n             */\r\n            perspective: [\r\n                { perspective: [themePerspective, isArbitraryVariable, isArbitraryValue] },\r\n            ],\r\n            /**\r\n             * Perspective Origin\r\n             * @see https://tailwindcss.com/docs/perspective-origin\r\n             */\r\n            'perspective-origin': [{ 'perspective-origin': scaleOrigin() }],\r\n            /**\r\n             * Rotate\r\n             * @see https://tailwindcss.com/docs/rotate\r\n             */\r\n            rotate: [{ rotate: scaleRotate() }],\r\n            /**\r\n             * Rotate X\r\n             * @see https://tailwindcss.com/docs/rotate\r\n             */\r\n            'rotate-x': [{ 'rotate-x': scaleRotate() }],\r\n            /**\r\n             * Rotate Y\r\n             * @see https://tailwindcss.com/docs/rotate\r\n             */\r\n            'rotate-y': [{ 'rotate-y': scaleRotate() }],\r\n            /**\r\n             * Rotate Z\r\n             * @see https://tailwindcss.com/docs/rotate\r\n             */\r\n            'rotate-z': [{ 'rotate-z': scaleRotate() }],\r\n            /**\r\n             * Scale\r\n             * @see https://tailwindcss.com/docs/scale\r\n             */\r\n            scale: [{ scale: scaleScale() }],\r\n            /**\r\n             * Scale X\r\n             * @see https://tailwindcss.com/docs/scale\r\n             */\r\n            'scale-x': [{ 'scale-x': scaleScale() }],\r\n            /**\r\n             * Scale Y\r\n             * @see https://tailwindcss.com/docs/scale\r\n             */\r\n            'scale-y': [{ 'scale-y': scaleScale() }],\r\n            /**\r\n             * Scale Z\r\n             * @see https://tailwindcss.com/docs/scale\r\n             */\r\n            'scale-z': [{ 'scale-z': scaleScale() }],\r\n            /**\r\n             * Scale 3D\r\n             * @see https://tailwindcss.com/docs/scale\r\n             */\r\n            'scale-3d': ['scale-3d'],\r\n            /**\r\n             * Skew\r\n             * @see https://tailwindcss.com/docs/skew\r\n             */\r\n            skew: [{ skew: scaleSkew() }],\r\n            /**\r\n             * Skew X\r\n             * @see https://tailwindcss.com/docs/skew\r\n             */\r\n            'skew-x': [{ 'skew-x': scaleSkew() }],\r\n            /**\r\n             * Skew Y\r\n             * @see https://tailwindcss.com/docs/skew\r\n             */\r\n            'skew-y': [{ 'skew-y': scaleSkew() }],\r\n            /**\r\n             * Transform\r\n             * @see https://tailwindcss.com/docs/transform\r\n             */\r\n            transform: [\r\n                { transform: [isArbitraryVariable, isArbitraryValue, '', 'none', 'gpu', 'cpu'] },\r\n            ],\r\n            /**\r\n             * Transform Origin\r\n             * @see https://tailwindcss.com/docs/transform-origin\r\n             */\r\n            'transform-origin': [{ origin: scaleOrigin() }],\r\n            /**\r\n             * Transform Style\r\n             * @see https://tailwindcss.com/docs/transform-style\r\n             */\r\n            'transform-style': [{ transform: ['3d', 'flat'] }],\r\n            /**\r\n             * Translate\r\n             * @see https://tailwindcss.com/docs/translate\r\n             */\r\n            translate: [{ translate: scaleTranslate() }],\r\n            /**\r\n             * Translate X\r\n             * @see https://tailwindcss.com/docs/translate\r\n             */\r\n            'translate-x': [{ 'translate-x': scaleTranslate() }],\r\n            /**\r\n             * Translate Y\r\n             * @see https://tailwindcss.com/docs/translate\r\n             */\r\n            'translate-y': [{ 'translate-y': scaleTranslate() }],\r\n            /**\r\n             * Translate Z\r\n             * @see https://tailwindcss.com/docs/translate\r\n             */\r\n            'translate-z': [{ 'translate-z': scaleTranslate() }],\r\n            /**\r\n             * Translate None\r\n             * @see https://tailwindcss.com/docs/translate\r\n             */\r\n            'translate-none': ['translate-none'],\r\n\r\n            // ---------------------\r\n            // --- Interactivity ---\r\n            // ---------------------\r\n\r\n            /**\r\n             * Accent Color\r\n             * @see https://tailwindcss.com/docs/accent-color\r\n             */\r\n            accent: [{ accent: scaleColor() }],\r\n            /**\r\n             * Appearance\r\n             * @see https://tailwindcss.com/docs/appearance\r\n             */\r\n            appearance: [{ appearance: ['none', 'auto'] }],\r\n            /**\r\n             * Caret Color\r\n             * @see https://tailwindcss.com/docs/just-in-time-mode#caret-color-utilities\r\n             */\r\n            'caret-color': [{ caret: scaleColor() }],\r\n            /**\r\n             * Color Scheme\r\n             * @see https://tailwindcss.com/docs/color-scheme\r\n             */\r\n            'color-scheme': [\r\n                { scheme: ['normal', 'dark', 'light', 'light-dark', 'only-dark', 'only-light'] },\r\n            ],\r\n            /**\r\n             * Cursor\r\n             * @see https://tailwindcss.com/docs/cursor\r\n             */\r\n            cursor: [\r\n                {\r\n                    cursor: [\r\n                        'auto',\r\n                        'default',\r\n                        'pointer',\r\n                        'wait',\r\n                        'text',\r\n                        'move',\r\n                        'help',\r\n                        'not-allowed',\r\n                        'none',\r\n                        'context-menu',\r\n                        'progress',\r\n                        'cell',\r\n                        'crosshair',\r\n                        'vertical-text',\r\n                        'alias',\r\n                        'copy',\r\n                        'no-drop',\r\n                        'grab',\r\n                        'grabbing',\r\n                        'all-scroll',\r\n                        'col-resize',\r\n                        'row-resize',\r\n                        'n-resize',\r\n                        'e-resize',\r\n                        's-resize',\r\n                        'w-resize',\r\n                        'ne-resize',\r\n                        'nw-resize',\r\n                        'se-resize',\r\n                        'sw-resize',\r\n                        'ew-resize',\r\n                        'ns-resize',\r\n                        'nesw-resize',\r\n                        'nwse-resize',\r\n                        'zoom-in',\r\n                        'zoom-out',\r\n                        isArbitraryVariable,\r\n                        isArbitraryValue,\r\n                    ],\r\n                },\r\n            ],\r\n            /**\r\n             * Field Sizing\r\n             * @see https://tailwindcss.com/docs/field-sizing\r\n             */\r\n            'field-sizing': [{ 'field-sizing': ['fixed', 'content'] }],\r\n            /**\r\n             * Pointer Events\r\n             * @see https://tailwindcss.com/docs/pointer-events\r\n             */\r\n            'pointer-events': [{ 'pointer-events': ['auto', 'none'] }],\r\n            /**\r\n             * Resize\r\n             * @see https://tailwindcss.com/docs/resize\r\n             */\r\n            resize: [{ resize: ['none', '', 'y', 'x'] }],\r\n            /**\r\n             * Scroll Behavior\r\n             * @see https://tailwindcss.com/docs/scroll-behavior\r\n             */\r\n            'scroll-behavior': [{ scroll: ['auto', 'smooth'] }],\r\n            /**\r\n             * Scroll Margin\r\n             * @see https://tailwindcss.com/docs/scroll-margin\r\n             */\r\n            'scroll-m': [{ 'scroll-m': scaleUnambiguousSpacing() }],\r\n            /**\r\n             * Scroll Margin X\r\n             * @see https://tailwindcss.com/docs/scroll-margin\r\n             */\r\n            'scroll-mx': [{ 'scroll-mx': scaleUnambiguousSpacing() }],\r\n            /**\r\n             * Scroll Margin Y\r\n             * @see https://tailwindcss.com/docs/scroll-margin\r\n             */\r\n            'scroll-my': [{ 'scroll-my': scaleUnambiguousSpacing() }],\r\n            /**\r\n             * Scroll Margin Start\r\n             * @see https://tailwindcss.com/docs/scroll-margin\r\n             */\r\n            'scroll-ms': [{ 'scroll-ms': scaleUnambiguousSpacing() }],\r\n            /**\r\n             * Scroll Margin End\r\n             * @see https://tailwindcss.com/docs/scroll-margin\r\n             */\r\n            'scroll-me': [{ 'scroll-me': scaleUnambiguousSpacing() }],\r\n            /**\r\n             * Scroll Margin Top\r\n             * @see https://tailwindcss.com/docs/scroll-margin\r\n             */\r\n            'scroll-mt': [{ 'scroll-mt': scaleUnambiguousSpacing() }],\r\n            /**\r\n             * Scroll Margin Right\r\n             * @see https://tailwindcss.com/docs/scroll-margin\r\n             */\r\n            'scroll-mr': [{ 'scroll-mr': scaleUnambiguousSpacing() }],\r\n            /**\r\n             * Scroll Margin Bottom\r\n             * @see https://tailwindcss.com/docs/scroll-margin\r\n             */\r\n            'scroll-mb': [{ 'scroll-mb': scaleUnambiguousSpacing() }],\r\n            /**\r\n             * Scroll Margin Left\r\n             * @see https://tailwindcss.com/docs/scroll-margin\r\n             */\r\n            'scroll-ml': [{ 'scroll-ml': scaleUnambiguousSpacing() }],\r\n            /**\r\n             * Scroll Padding\r\n             * @see https://tailwindcss.com/docs/scroll-padding\r\n             */\r\n            'scroll-p': [{ 'scroll-p': scaleUnambiguousSpacing() }],\r\n            /**\r\n             * Scroll Padding X\r\n             * @see https://tailwindcss.com/docs/scroll-padding\r\n             */\r\n            'scroll-px': [{ 'scroll-px': scaleUnambiguousSpacing() }],\r\n            /**\r\n             * Scroll Padding Y\r\n             * @see https://tailwindcss.com/docs/scroll-padding\r\n             */\r\n            'scroll-py': [{ 'scroll-py': scaleUnambiguousSpacing() }],\r\n            /**\r\n             * Scroll Padding Start\r\n             * @see https://tailwindcss.com/docs/scroll-padding\r\n             */\r\n            'scroll-ps': [{ 'scroll-ps': scaleUnambiguousSpacing() }],\r\n            /**\r\n             * Scroll Padding End\r\n             * @see https://tailwindcss.com/docs/scroll-padding\r\n             */\r\n            'scroll-pe': [{ 'scroll-pe': scaleUnambiguousSpacing() }],\r\n            /**\r\n             * Scroll Padding Top\r\n             * @see https://tailwindcss.com/docs/scroll-padding\r\n             */\r\n            'scroll-pt': [{ 'scroll-pt': scaleUnambiguousSpacing() }],\r\n            /**\r\n             * Scroll Padding Right\r\n             * @see https://tailwindcss.com/docs/scroll-padding\r\n             */\r\n            'scroll-pr': [{ 'scroll-pr': scaleUnambiguousSpacing() }],\r\n            /**\r\n             * Scroll Padding Bottom\r\n             * @see https://tailwindcss.com/docs/scroll-padding\r\n             */\r\n            'scroll-pb': [{ 'scroll-pb': scaleUnambiguousSpacing() }],\r\n            /**\r\n             * Scroll Padding Left\r\n             * @see https://tailwindcss.com/docs/scroll-padding\r\n             */\r\n            'scroll-pl': [{ 'scroll-pl': scaleUnambiguousSpacing() }],\r\n            /**\r\n             * Scroll Snap Align\r\n             * @see https://tailwindcss.com/docs/scroll-snap-align\r\n             */\r\n            'snap-align': [{ snap: ['start', 'end', 'center', 'align-none'] }],\r\n            /**\r\n             * Scroll Snap Stop\r\n             * @see https://tailwindcss.com/docs/scroll-snap-stop\r\n             */\r\n            'snap-stop': [{ snap: ['normal', 'always'] }],\r\n            /**\r\n             * Scroll Snap Type\r\n             * @see https://tailwindcss.com/docs/scroll-snap-type\r\n             */\r\n            'snap-type': [{ snap: ['none', 'x', 'y', 'both'] }],\r\n            /**\r\n             * Scroll Snap Type Strictness\r\n             * @see https://tailwindcss.com/docs/scroll-snap-type\r\n             */\r\n            'snap-strictness': [{ snap: ['mandatory', 'proximity'] }],\r\n            /**\r\n             * Touch Action\r\n             * @see https://tailwindcss.com/docs/touch-action\r\n             */\r\n            touch: [{ touch: ['auto', 'none', 'manipulation'] }],\r\n            /**\r\n             * Touch Action X\r\n             * @see https://tailwindcss.com/docs/touch-action\r\n             */\r\n            'touch-x': [{ 'touch-pan': ['x', 'left', 'right'] }],\r\n            /**\r\n             * Touch Action Y\r\n             * @see https://tailwindcss.com/docs/touch-action\r\n             */\r\n            'touch-y': [{ 'touch-pan': ['y', 'up', 'down'] }],\r\n            /**\r\n             * Touch Action Pinch Zoom\r\n             * @see https://tailwindcss.com/docs/touch-action\r\n             */\r\n            'touch-pz': ['touch-pinch-zoom'],\r\n            /**\r\n             * User Select\r\n             * @see https://tailwindcss.com/docs/user-select\r\n             */\r\n            select: [{ select: ['none', 'text', 'all', 'auto'] }],\r\n            /**\r\n             * Will Change\r\n             * @see https://tailwindcss.com/docs/will-change\r\n             */\r\n            'will-change': [\r\n                {\r\n                    'will-change': [\r\n                        'auto',\r\n                        'scroll',\r\n                        'contents',\r\n                        'transform',\r\n                        isArbitraryVariable,\r\n                        isArbitraryValue,\r\n                    ],\r\n                },\r\n            ],\r\n\r\n            // -----------\r\n            // --- SVG ---\r\n            // -----------\r\n\r\n            /**\r\n             * Fill\r\n             * @see https://tailwindcss.com/docs/fill\r\n             */\r\n            fill: [{ fill: ['none', ...scaleColor()] }],\r\n            /**\r\n             * Stroke Width\r\n             * @see https://tailwindcss.com/docs/stroke-width\r\n             */\r\n            'stroke-w': [\r\n                {\r\n                    stroke: [\r\n                        isNumber,\r\n                        isArbitraryVariableLength,\r\n                        isArbitraryLength,\r\n                        isArbitraryNumber,\r\n                    ],\r\n                },\r\n            ],\r\n            /**\r\n             * Stroke\r\n             * @see https://tailwindcss.com/docs/stroke\r\n             */\r\n            stroke: [{ stroke: ['none', ...scaleColor()] }],\r\n\r\n            // ---------------------\r\n            // --- Accessibility ---\r\n            // ---------------------\r\n\r\n            /**\r\n             * Forced Color Adjust\r\n             * @see https://tailwindcss.com/docs/forced-color-adjust\r\n             */\r\n            'forced-color-adjust': [{ 'forced-color-adjust': ['auto', 'none'] }],\r\n        },\r\n        conflictingClassGroups: {\r\n            overflow: ['overflow-x', 'overflow-y'],\r\n            overscroll: ['overscroll-x', 'overscroll-y'],\r\n            inset: ['inset-x', 'inset-y', 'start', 'end', 'top', 'right', 'bottom', 'left'],\r\n            'inset-x': ['right', 'left'],\r\n            'inset-y': ['top', 'bottom'],\r\n            flex: ['basis', 'grow', 'shrink'],\r\n            gap: ['gap-x', 'gap-y'],\r\n            p: ['px', 'py', 'ps', 'pe', 'pt', 'pr', 'pb', 'pl'],\r\n            px: ['pr', 'pl'],\r\n            py: ['pt', 'pb'],\r\n            m: ['mx', 'my', 'ms', 'me', 'mt', 'mr', 'mb', 'ml'],\r\n            mx: ['mr', 'ml'],\r\n            my: ['mt', 'mb'],\r\n            size: ['w', 'h'],\r\n            'font-size': ['leading'],\r\n            'fvn-normal': [\r\n                'fvn-ordinal',\r\n                'fvn-slashed-zero',\r\n                'fvn-figure',\r\n                'fvn-spacing',\r\n                'fvn-fraction',\r\n            ],\r\n            'fvn-ordinal': ['fvn-normal'],\r\n            'fvn-slashed-zero': ['fvn-normal'],\r\n            'fvn-figure': ['fvn-normal'],\r\n            'fvn-spacing': ['fvn-normal'],\r\n            'fvn-fraction': ['fvn-normal'],\r\n            'line-clamp': ['display', 'overflow'],\r\n            rounded: [\r\n                'rounded-s',\r\n                'rounded-e',\r\n                'rounded-t',\r\n                'rounded-r',\r\n                'rounded-b',\r\n                'rounded-l',\r\n                'rounded-ss',\r\n                'rounded-se',\r\n                'rounded-ee',\r\n                'rounded-es',\r\n                'rounded-tl',\r\n                'rounded-tr',\r\n                'rounded-br',\r\n                'rounded-bl',\r\n            ],\r\n            'rounded-s': ['rounded-ss', 'rounded-es'],\r\n            'rounded-e': ['rounded-se', 'rounded-ee'],\r\n            'rounded-t': ['rounded-tl', 'rounded-tr'],\r\n            'rounded-r': ['rounded-tr', 'rounded-br'],\r\n            'rounded-b': ['rounded-br', 'rounded-bl'],\r\n            'rounded-l': ['rounded-tl', 'rounded-bl'],\r\n            'border-spacing': ['border-spacing-x', 'border-spacing-y'],\r\n            'border-w': [\r\n                'border-w-s',\r\n                'border-w-e',\r\n                'border-w-t',\r\n                'border-w-r',\r\n                'border-w-b',\r\n                'border-w-l',\r\n            ],\r\n            'border-w-x': ['border-w-r', 'border-w-l'],\r\n            'border-w-y': ['border-w-t', 'border-w-b'],\r\n            'border-color': [\r\n                'border-color-s',\r\n                'border-color-e',\r\n                'border-color-t',\r\n                'border-color-r',\r\n                'border-color-b',\r\n                'border-color-l',\r\n            ],\r\n            'border-color-x': ['border-color-r', 'border-color-l'],\r\n            'border-color-y': ['border-color-t', 'border-color-b'],\r\n            translate: ['translate-x', 'translate-y', 'translate-none'],\r\n            'translate-none': ['translate', 'translate-x', 'translate-y', 'translate-z'],\r\n            'scroll-m': [\r\n                'scroll-mx',\r\n                'scroll-my',\r\n                'scroll-ms',\r\n                'scroll-me',\r\n                'scroll-mt',\r\n                'scroll-mr',\r\n                'scroll-mb',\r\n                'scroll-ml',\r\n            ],\r\n            'scroll-mx': ['scroll-mr', 'scroll-ml'],\r\n            'scroll-my': ['scroll-mt', 'scroll-mb'],\r\n            'scroll-p': [\r\n                'scroll-px',\r\n                'scroll-py',\r\n                'scroll-ps',\r\n                'scroll-pe',\r\n                'scroll-pt',\r\n                'scroll-pr',\r\n                'scroll-pb',\r\n                'scroll-pl',\r\n            ],\r\n            'scroll-px': ['scroll-pr', 'scroll-pl'],\r\n            'scroll-py': ['scroll-pt', 'scroll-pb'],\r\n            touch: ['touch-x', 'touch-y', 'touch-pz'],\r\n            'touch-x': ['touch'],\r\n            'touch-y': ['touch'],\r\n            'touch-pz': ['touch'],\r\n        },\r\n        conflictingClassGroupModifiers: {\r\n            'font-size': ['leading'],\r\n        },\r\n        orderSensitiveModifiers: [\r\n            'before',\r\n            'after',\r\n            'placeholder',\r\n            'file',\r\n            'marker',\r\n            'selection',\r\n            'first-line',\r\n            'first-letter',\r\n            'backdrop',\r\n            '*',\r\n            '**',\r\n        ],\r\n    } as const satisfies Config<DefaultClassGroupIds, DefaultThemeGroupIds>\r\n}\r\n","import { AnyConfig, ConfigExtension, NoInfer } from './types'\r\n\r\n/**\r\n * @param baseConfig Config where other config will be merged into. This object will be mutated.\r\n * @param configExtension Partial config to merge into the `baseConfig`.\r\n */\r\nexport const mergeConfigs = <ClassGroupIds extends string, ThemeGroupIds extends string = never>(\r\n    baseConfig: AnyConfig,\r\n    {\r\n        cacheSize,\r\n        prefix,\r\n        experimentalParseClassName,\r\n        extend = {},\r\n        override = {},\r\n    }: ConfigExtension<ClassGroupIds, ThemeGroupIds>,\r\n) => {\r\n    overrideProperty(baseConfig, 'cacheSize', cacheSize)\r\n    overrideProperty(baseConfig, 'prefix', prefix)\r\n    overrideProperty(baseConfig, 'experimentalParseClassName', experimentalParseClassName)\r\n\r\n    overrideConfigProperties(baseConfig.theme, override.theme)\r\n    overrideConfigProperties(baseConfig.classGroups, override.classGroups)\r\n    overrideConfigProperties(baseConfig.conflictingClassGroups, override.conflictingClassGroups)\r\n    overrideConfigProperties(\r\n        baseConfig.conflictingClassGroupModifiers,\r\n        override.conflictingClassGroupModifiers,\r\n    )\r\n    overrideProperty(baseConfig, 'orderSensitiveModifiers', override.orderSensitiveModifiers)\r\n\r\n    mergeConfigProperties(baseConfig.theme, extend.theme)\r\n    mergeConfigProperties(baseConfig.classGroups, extend.classGroups)\r\n    mergeConfigProperties(baseConfig.conflictingClassGroups, extend.conflictingClassGroups)\r\n    mergeConfigProperties(\r\n        baseConfig.conflictingClassGroupModifiers,\r\n        extend.conflictingClassGroupModifiers,\r\n    )\r\n    mergeArrayProperties(baseConfig, extend, 'orderSensitiveModifiers')\r\n\r\n    return baseConfig\r\n}\r\n\r\nconst overrideProperty = <T extends object, K extends keyof T>(\r\n    baseObject: T,\r\n    overrideKey: K,\r\n    overrideValue: T[K] | undefined,\r\n) => {\r\n    if (overrideValue !== undefined) {\r\n        baseObject[overrideKey] = overrideValue\r\n    }\r\n}\r\n\r\nconst overrideConfigProperties = (\r\n    baseObject: Partial<Record<string, readonly unknown[]>>,\r\n    overrideObject: Partial<Record<string, readonly unknown[]>> | undefined,\r\n) => {\r\n    if (overrideObject) {\r\n        for (const key in overrideObject) {\r\n            overrideProperty(baseObject, key, overrideObject[key])\r\n        }\r\n    }\r\n}\r\n\r\nconst mergeConfigProperties = (\r\n    baseObject: Partial<Record<string, readonly unknown[]>>,\r\n    mergeObject: Partial<Record<string, readonly unknown[]>> | undefined,\r\n) => {\r\n    if (mergeObject) {\r\n        for (const key in mergeObject) {\r\n            mergeArrayProperties(baseObject, mergeObject, key)\r\n        }\r\n    }\r\n}\r\n\r\nconst mergeArrayProperties = <Key extends string>(\r\n    baseObject: Partial<Record<NoInfer<Key>, readonly unknown[]>>,\r\n    mergeObject: Partial<Record<NoInfer<Key>, readonly unknown[]>>,\r\n    key: Key,\r\n) => {\r\n    const mergeValue = mergeObject[key]\r\n\r\n    if (mergeValue !== undefined) {\r\n        baseObject[key] = baseObject[key] ? baseObject[key].concat(mergeValue) : mergeValue\r\n    }\r\n}\r\n","import { createTailwindMerge } from './create-tailwind-merge'\r\nimport { getDefaultConfig } from './default-config'\r\nimport { mergeConfigs } from './merge-configs'\r\nimport { AnyConfig, ConfigExtension, DefaultClassGroupIds, DefaultThemeGroupIds } from './types'\r\n\r\ntype CreateConfigSubsequent = (config: AnyConfig) => AnyConfig\r\n\r\nexport const extendTailwindMerge = <\r\n    AdditionalClassGroupIds extends string = never,\r\n    AdditionalThemeGroupIds extends string = never,\r\n>(\r\n    configExtension:\r\n        | ConfigExtension<\r\n              DefaultClassGroupIds | AdditionalClassGroupIds,\r\n              DefaultThemeGroupIds | AdditionalThemeGroupIds\r\n          >\r\n        | CreateConfigSubsequent,\r\n    ...createConfig: CreateConfigSubsequent[]\r\n) =>\r\n    typeof configExtension === 'function'\r\n        ? createTailwindMerge(getDefaultConfig, configExtension, ...createConfig)\r\n        : createTailwindMerge(\r\n              () => mergeConfigs(getDefaultConfig(), configExtension),\r\n              ...createConfig,\r\n          )\r\n","import { createTailwindMerge } from './create-tailwind-merge'\r\nimport { getDefaultConfig } from './default-config'\r\n\r\nexport const twMerge = createTailwindMerge(getDefaultConfig)\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}